<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="autodoc.xsl"?>
 <Library>
 <LibraryName>menu_lib.sh</LibraryName>
<Function>
<FunctionName>document_Base_menu</FunctionName>
<DependOn>
<FunctionDepend>
<FunctionName>Menu_Get_items</FunctionName>
<FunctionLib>/lib/user_interaction/menu_lib.sh</FunctionLib>
</FunctionDepend>
</DependOn>
<DocText>
     Var to set : None
    
     Base usage : document_Base_menu
    
     Description : This function generate menu to manage autodoc functions
    
     Send Back : Menu
</DocText>
</Function>
<Function>
<FunctionName>Document_generate_XML</FunctionName>
<DependOn>
<FunctionDepend>
<FunctionName>Do_document_generate</FunctionName>
<FunctionLib>/lib/doc/document_lib.sh</FunctionLib>
</FunctionDepend>
</DependOn>
<DocText>
     Var to set : None
    
     Base usage : Document_generate_XML
    
     Description : This function generate autodoc in XML format by calling
     Do_document_generate
     Send Back : function call with parameter
</DocText>
</Function>
<Function>
<FunctionName>Document_generate_Text</FunctionName>
<DependOn>
<FunctionDepend>
<FunctionName>Do_document_generate</FunctionName>
<FunctionLib>/lib/doc/document_lib.sh</FunctionLib>
</FunctionDepend>
</DependOn>
<DocText>
     Var to set : None
    
     Base usage : Document_generate_Text
    
     Description : This function generate autodoc in txt format by calling
     Do_document_generate
     Send Back : function call with parameter
</DocText>
</Function>
<Function>
<FunctionName>Document_generate_HTML</FunctionName>
<DependOn>
<FunctionDepend>
<FunctionName>Do_document_generate</FunctionName>
<FunctionLib>/lib/doc/document_lib.sh</FunctionLib>
</FunctionDepend>
</DependOn>
<DocText>
     Var to set : None
    
     Base usage : Document_generate_HTML
    
     Description : This function generate autodoc in HTML format by calling
     Do_document_generate
     Send Back : function call with parameter
</DocText>
</Function>
<Function>
<FunctionName>Document_Generate_Catalogues</FunctionName>
<DependOn>
<FunctionDepend>
<FunctionName>Get_all_function_names_to_document</FunctionName>
<FunctionLib>/lib/doc/document_lib.sh</FunctionLib>
</FunctionDepend>
</DependOn>
<DocText>
     Var to set : None
    
     Base usage : Document_Generate_Catalogues
    
     Description : This function generate autodoc cata by callilogues by calling
     Get_all_function_names_to_document
     Send Back : function call with parameter
</DocText>
</Function>
<Function>
<FunctionName>Menu_Get_items</FunctionName>
<DependOn>
<FunctionDepend>
<FunctionName></FunctionName>
<FunctionLib></FunctionLib>
</FunctionDepend>
<FunctionDepend>
<FunctionName>Menu_Build</FunctionName>
<FunctionLib>/lib/user_interaction/menu_lib.sh</FunctionLib>
</FunctionDepend>
</DependOn>
<DocText>
     Var to set :
     Base_Menu_get_Tag : use this var to set the tag to find to builde the menu
     Base_Level_Menu_Info : Use this var to set which geted item part to keep
     Base_file_to_parse_Menu : use this var to set which file to parse to build menu
     Base_Menu_Name : Use this var to set the name of the menu
     ${1} : use this var to set [ Base_Menu_get_Tag ]
     ${2} : use this var to set [ Base_Level_Menu_Info ]
     ${3} : use this var to set [ Base_file_to_parse_Menu ]
     ${4} : use this var to set [ Base_Menu_Name ]
    
     Base usage : Menu_Get_items "My menu tag" "My keep item level " "My source file menu" "Menu Name"
     Description : This function scan a file to creat a array to send to Menu_Build
    
     Send Back : a typer array var to Menu_Build
</DocText>
</Function>
<Function>
<FunctionName>get_object_type</FunctionName>
<DependOn>
</DependOn>
<DocText>
</DocText>
</Function>
<Function>
<FunctionName>Menu_Build</FunctionName>
<DependOn>
<FunctionDepend>
<FunctionName></FunctionName>
<FunctionLib></FunctionLib>
</FunctionDepend>
<FunctionDepend>
<FunctionName>USER_Generic_continue_or_exit</FunctionName>
<FunctionLib>/lib/user_interaction/user_lib.sh</FunctionLib>
</FunctionDepend>
</DependOn>
<DocText>
     Var to set :
     args : Use this var to set all array of the menu be sure the var is an array
    
     Base usage : Menu_Build "Name ov the var type array" ( without $ )
    
     Description : This function create interactive menu from array parameters
    
     Send Back : Menu
</DocText>
</Function>
<Function>
<FunctionName>ecMenu</FunctionName>
<DependOn>
</DependOn>
<DocText>
</DocText>
</Function>
<Function>
<FunctionName>Menu_select_item_from_file</FunctionName>
<DependOn>
</DependOn>
<DocText>
     Var to set : None
     : Use this var to set
     : Use this var to set
     ${1} : Use this var to set [ ]
     ${2} : Use this var to set [ ]
    
     Base usage : None
    
     Description : None
    
     Send Back : None
</DocText>
</Function>
<Function>
<FunctionName>Menu_Change_Conf_item</FunctionName>
<DependOn>
</DependOn>
<DocText>
     Var to set : None
     Base_item_Name : use this var to set item name to change
     Base_item_to_change : use this var to set the item to change
     ${1} : Use this var to set [ Base_item_Name ]
     ${2} : Use this var to set [ Base_item_to_change ]
    
     Base usage : Menu_Change_Conf_item "Base_item_Name" "Base_item_to_change"
    
     Description : None
    
     Send Back : Value in a var
</DocText>
</Function>
<Function>
<FunctionName>Menu_List_spliter</FunctionName>
<DependOn>
<FunctionDepend>
<FunctionName>Menu_List_spliter_sub_Gen_array_of_array</FunctionName>
<FunctionLib>/lib/user_interaction/menu_lib.sh</FunctionLib>
</FunctionDepend>
<FunctionDepend>
<FunctionName>Menu_List_spliter_sub_Get_limit</FunctionName>
<FunctionLib>/lib/user_interaction/menu_lib.sh</FunctionLib>
</FunctionDepend>
</DependOn>
<DocText>
     Var to set :
     Array_To_SPLIT : Use this var to set the name of the Array var to split in many vars
     Internal vars :
     Result_Base_array : This var is used in exit of the function to provide the list of array to use for generating menu entry
     Base_screen_Menu_Limit : This var seted in Generics.cnf is used to set screen limit for menu
     ${1} : Use this var to set [ Array_To_SPLIT ]
    
     Base usage : Menu_List_spliter " var name without $ and {} "
     Description : This fuction help to split too long menu
    
     Send Back : splited menu
</DocText>
</Function>
<Function>
<FunctionName>Menu_List_spliter_sub_Get_limit</FunctionName>
<DependOn>
</DependOn>
<DocText>
     Var to set : None
     : Use this var to set
     : Use this var to set
     ${1} : Use this var to set [ ]
     ${2} : Use this var to set [ ]
    
     Base usage : None
    
     Description : None
    
     Send Back : None
</DocText>
</Function>
<Function>
<FunctionName>Menu_List_spliter_sub_Gen_array_of_array</FunctionName>
<DependOn>
</DependOn>
<DocText>
     Var to set : None
     : Use this var to set
     : Use this var to set
     ${1} : Use this var to set [ ]
     ${2} : Use this var to set [ ]
    
     Base usage : None
    
     Description : None
    
     Send Back : None
</DocText>
</Function>
<Function>
<FunctionName>Menu_interactive_Set_conf</FunctionName>
<DependOn>
<FunctionDepend>
<FunctionName>Menu_Change_Conf_item</FunctionName>
<FunctionLib>/lib/user_interaction/menu_lib.sh</FunctionLib>
</FunctionDepend>
</DependOn>
<DocText>
     Var to set : None
     LST_PARAMS : Use this var to set an array of variables name to set
     ${1} : Use this var to set [ ]
    
     Base usage : Menu_interactive_Set_conf "My array var"
    
     Description : This function is used to set or reset live configuration parameter
    
     Send Back : Updated vars
</DocText>
</Function>
 </Library>
