<root>
    <file>
        <filename>./conf/config.cnf</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash</fileline>
            <fileline lineNumber="2">#############</fileline>
            <fileline lineNumber="3"># Author  :  Arnaud Crampet </fileline>
            <fileline lineNumber="4"># Date    :  25/06/2024</fileline>
            <fileline lineNumber="5"># Determine the current directory of the script</fileline>
            <fileline lineNumber="6">DEBUG_STATE="0"</fileline>
            <fileline lineNumber="7">current_date="$(date +"%Y_%m_%d-%H-%M-%S")"</fileline>
            <fileline lineNumber="8">GLB_PRINTCOL_4="%-70s %-1s %-2s %-2s\n"</fileline>
            <fileline lineNumber="9">GLB_PRINTCOL_2_NE="%-100s %-10s"</fileline>
            <fileline lineNumber="10">GLB_PRINTCOL_1_NE="%-150s %-10s\n"</fileline>
            <fileline lineNumber="11">Base_Dir_Scripts=$(dirname "$(realpath "$0")")</fileline>
            <fileline lineNumber="12">Runned="0"</fileline>
            <fileline lineNumber="13">init_azure_devops="0"</fileline>
            <fileline lineNumber="14">GLB_default_package_manager="apt"</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">#### create somme array for bug sourcing please be sure that all liste array are declared here before populaties them</fileline>
            <fileline lineNumber="17">declare -A COUNTRIES=()</fileline>
            <fileline lineNumber="18">#AZure object type</fileline>
            <fileline lineNumber="19">declare -A AZURE_OBJECTS=()</fileline>
            <fileline lineNumber="20"># Azure objet acegories</fileline>
            <fileline lineNumber="21">declare -A CATEGORIES=()</fileline>
            <fileline lineNumber="22"># enviroment categories</fileline>
            <fileline lineNumber="23">declare -A ENVIRONMENTS_AZ=()</fileline>
            <fileline lineNumber="24" />
            <fileline lineNumber="25" />
            <fileline lineNumber="26" />
            <fileline lineNumber="27" />
            <fileline lineNumber="28"># Define paths based on the current directory</fileline>
            <fileline lineNumber="29">function set_paths() </fileline>
            <fileline lineNumber="30">{</fileline>
            <fileline lineNumber="31">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="32">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="33">Function_PATH="${Function_Name}"</fileline>
            <fileline lineNumber="34">######################################################</fileline>
            <fileline lineNumber="35">    set_bpath</fileline>
            <fileline lineNumber="36">    #|# [Base_Dir_Scripts_Bin] define Directory for executable scripts</fileline>
            <fileline lineNumber="37">    Base_Dir_Scripts_Bin="${Base_Dir_Scripts}/bin" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="38">    printf "${GLB_PRINTCOL_4}" "default bin directory set to" ": [" "${Base_Dir_Scripts_Bin}" "]"</fileline>
            <fileline lineNumber="39" />
            <fileline lineNumber="40">    #|# [Base_Dir_Scripts_Lib] define Directory for library scripts</fileline>
            <fileline lineNumber="41">    Base_Dir_Scripts_Lib="${Base_Dir_Scripts}/lib" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="42">    printf "${GLB_PRINTCOL_4}" "default lib directory set to" ": [" "${Base_Dir_Scripts_Lib}" "]"</fileline>
            <fileline lineNumber="43" />
            <fileline lineNumber="44">    #|# [Base_Dir_Scripts_CNF] define Directory for configuration files</fileline>
            <fileline lineNumber="45">    Base_Dir_Scripts_CNF="${Base_Dir_Scripts}/conf" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="46">    printf "${GLB_PRINTCOL_4}" "default configuration directory set to" ": [" "${Base_Dir_Scripts_CNF}" "]"</fileline>
            <fileline lineNumber="47" />
            <fileline lineNumber="48">    #|# [Base_Dir_Scripts_CNF_Dir] define Directory for specific configuration files</fileline>
            <fileline lineNumber="49">    Base_Dir_Scripts_CNF_Dir="${Base_Dir_Scripts_CNF}/directory_conf" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="50" />
            <fileline lineNumber="51">    #|# [Base_Dir_Scripts_Bin] define Directory for executable scripts</fileline>
            <fileline lineNumber="52">    Base_Dir_Scripts_cred="${Base_Dir_Scripts}/.cred" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="53">    printf "${GLB_PRINTCOL_4}" "default bin directory set to" ": [" "${Base_Dir_Scripts_cred}" "]"</fileline>
            <fileline lineNumber="54" />
            <fileline lineNumber="55">    #|# [Base_Dir_Scripts_CNF_spec] define Directory for special configuration files</fileline>
            <fileline lineNumber="56">    Base_Dir_Scripts_CNF_spec="${Base_Dir_Scripts_CNF}/special_conf" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="57" />
            <fileline lineNumber="58">    #|# [Base_Dir_Scripts_CNF_Subs] define Directory for sub-configuration files</fileline>
            <fileline lineNumber="59">    Base_Dir_Scripts_CNF_Subs="${Base_Dir_Scripts_CNF}/SubConf" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="60" />
            <fileline lineNumber="61">    #|# [Base_Dir_Scripts_LOG] define Directory for log files</fileline>
            <fileline lineNumber="62">    Base_Dir_Scripts_LOG="${Base_Dir_Scripts}/logs" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="63">    printf  "${GLB_PRINTCOL_4}" "default log directory set to" ": [" "${Base_Dir_Scripts_LOG}" "]"</fileline>
            <fileline lineNumber="64" />
            <fileline lineNumber="65">    #|# [Base_Dir_Scripts_Tmp] define Directory for temporary files</fileline>
            <fileline lineNumber="66">    Base_Dir_Scripts_Tmp="${Base_Dir_Scripts}/tmp" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="67">     printf  "${GLB_PRINTCOL_4}" "default tmp directory set to" ": ["  "${Base_Dir_Scripts_CNF}" "]"</fileline>
            <fileline lineNumber="68" />
            <fileline lineNumber="69">    #|# [Base_Dir_Scripts_BCK] define Directory for backup files</fileline>
            <fileline lineNumber="70">    Base_Dir_Scripts_BCK="${Base_Dir_Scripts}/backup" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="71">    printf  "${GLB_PRINTCOL_4}" "default beckup directory set to" ": ["  "${Base_Dir_Scripts_BCK}" "]"</fileline>
            <fileline lineNumber="72" />
            <fileline lineNumber="73">    #|# [Base_Dir_Scripts_Data] define Main directory for data files</fileline>
            <fileline lineNumber="74">    Base_Dir_Scripts_Data="${Base_Dir_Scripts}/data" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="75">    printf  "${GLB_PRINTCOL_4}" "default data directory set to" ": [" "${Base_Dir_Scripts_Data}" "]"</fileline>
            <fileline lineNumber="76" />
            <fileline lineNumber="77">    #|# [Base_Dir_Scripts_SQL] define Directory for SQL files</fileline>
            <fileline lineNumber="78">    Base_Dir_Scripts_SQL="${Base_Dir_Scripts_Data}/sql" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="79" />
            <fileline lineNumber="80">    #|# [Base_Dir_Scripts_GIT] define Directory for git files</fileline>
            <fileline lineNumber="81">    Base_Dir_Scripts_GIT="${Base_Dir_Scripts_Data}/git" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="82" />
            <fileline lineNumber="83">    #|# [Base_Dir_Scripts_GIT_devops_azure] define Directory for git azure devops files</fileline>
            <fileline lineNumber="84">    Base_Dir_Scripts_GIT_devops_azure="${Base_Dir_Scripts_GIT}/azure" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="85" />
            <fileline lineNumber="86">    #|# [Base_Dir_Scripts_Tmp_Auto_Lib] define Temporary directory for auto library scripts</fileline>
            <fileline lineNumber="87">    Base_Dir_Scripts_Tmp_Auto_Lib="${Base_Dir_Scripts_Tmp}/auto_lib" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="88" />
            <fileline lineNumber="89">    #|# [Base_Dir_Scripts_Fifo] define Temporary directory for FIFO files</fileline>
            <fileline lineNumber="90">    Base_Dir_Scripts_Fifo="${Base_Dir_Scripts_Tmp}/fifo" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="91" />
            <fileline lineNumber="92">    #|# [Base_Dir_Conf_Rec] define Temporary directory for received config files</fileline>
            <fileline lineNumber="93">    Base_Dir_Conf_Rec="${Base_Dir_Scripts_Tmp}/conf_file_rec" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="94" />
            <fileline lineNumber="95">    #|# [Base_Dir_Conf_Gen] define Temporary directory for generated config files</fileline>
            <fileline lineNumber="96">    Base_Dir_Conf_Gen="${Base_Dir_Scripts_Tmp}/conf_file_gen" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="97" />
            <fileline lineNumber="98">    #|# [Base_Dir_Scripts_data_Expect] define Directory for expect scripts</fileline>
            <fileline lineNumber="99">    Base_Dir_Scripts_data_Expect="${Base_Dir_Scripts_Data}/expect" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="100" />
            <fileline lineNumber="101">    #|# [Base_Dir_Scripts_data_Expect_Uploads] define Directory for uploaded expect scripts</fileline>
            <fileline lineNumber="102">    Base_Dir_Scripts_data_Expect_Uploads="${Base_Dir_Scripts_data_Expect}/uploaded_scripts" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="103" />
            <fileline lineNumber="104">    #|# [Base_Dir_Scripts_data_Expects_cmd] define Directory for expect command scripts</fileline>
            <fileline lineNumber="105">    Base_Dir_Scripts_data_Expects_cmd="${Base_Dir_Scripts_data_Expect}/cmd" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="106" />
            <fileline lineNumber="107">    #|# [Base_Dir_Scripts_Data_Def] define Directory for definition files</fileline>
            <fileline lineNumber="108">    Base_Dir_Scripts_Data_Def="${Base_Dir_Scripts_Data}/def" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="109" />
            <fileline lineNumber="110">    #|# [Base_Dir_Scripts_Data_Def_pf] define Directory for specific platform definitions</fileline>
            <fileline lineNumber="111">    Base_Dir_Scripts_Data_Def_pf="${Base_Dir_Scripts_Data_Def}/pf" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="112" />
            <fileline lineNumber="113">    #|# [Base_Dir_Scripts_Data_Templates] define Directory for template files</fileline>
            <fileline lineNumber="114">    Base_Dir_Scripts_Data_Templates="${Base_Dir_Scripts_Data}/templates" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="115" />
            <fileline lineNumber="116">    #|# [Base_Dir_Scripts_Data_Templates_sql] define Directory for SQL templates</fileline>
            <fileline lineNumber="117">    Base_Dir_Scripts_Data_Templates_sql="${Base_Dir_Scripts_Data_Templates}/sql" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="118" />
            <fileline lineNumber="119">    #|# [Base_Dir_Scripts_Data_Templates_xml] define Directory for XML templates</fileline>
            <fileline lineNumber="120">    Base_Dir_Scripts_Data_Templates_xml="${Base_Dir_Scripts_Data_Templates}/xml" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="121" />
            <fileline lineNumber="122">    #|# [Base_Dir_Scripts_Data_Templates_html] define Directory for HTML templates</fileline>
            <fileline lineNumber="123">    Base_Dir_Scripts_Data_Templates_html="${Base_Dir_Scripts_Data_Templates}/html" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="124" />
            <fileline lineNumber="125">    #|# [Base_Dir_Scripts_Data_Templates_mail] define Directory for email templates</fileline>
            <fileline lineNumber="126">    Base_Dir_Scripts_Data_Templates_mail="${Base_Dir_Scripts_Data_Templates}/mail" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="127" />
            <fileline lineNumber="128">    #|# [Base_Dir_Scripts_Data_Catalogs] define Directory for catalog files</fileline>
            <fileline lineNumber="129">    Base_Dir_Scripts_Data_Catalogs="${Base_Dir_Scripts_Data}/catalogue" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="130" />
            <fileline lineNumber="131">    #|# [Base_Dir_Scripts_Data_Packages] define Directory for packages</fileline>
            <fileline lineNumber="132">    Base_Dir_Scripts_Data_Packages="${Base_Dir_Scripts_Data}/packages" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="133" />
            <fileline lineNumber="134">    #|# [Base_Dir_Scripts_Data_Packages_inits] define Directory for package initialization files</fileline>
            <fileline lineNumber="135">    Base_Dir_Scripts_Data_Packages_inits="${Base_Dir_Scripts_Data_Packages}/inits" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="136" />
            <fileline lineNumber="137">    #|# [Base_Dir_Scripts_Data_Xml] define Directory for XML files</fileline>
            <fileline lineNumber="138">    Base_Dir_Scripts_Data_Xml="${Base_Dir_Scripts_Data}/xml" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="139" />
            <fileline lineNumber="140">    #|# [Base_Dir_Scripts_Data_Xml_DEF] define Directory for XML definitions</fileline>
            <fileline lineNumber="141">    Base_Dir_Scripts_Data_Xml_DEF="${Base_Dir_Scripts_Data_Xml}/xml_def" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="142" />
            <fileline lineNumber="143">    #|# [Base_Dir_Scripts_Data_Web] define Directory for web files</fileline>
            <fileline lineNumber="144">    Base_Dir_Scripts_Data_Web="${Base_Dir_Scripts_Data}/web" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="145" />
            <fileline lineNumber="146">    #|# [Base_Dir_Scripts_Data_Web_Php] define Directory for PHP web files</fileline>
            <fileline lineNumber="147">    Base_Dir_Scripts_Data_Web_Php="${Base_Dir_Scripts_Data_Web}/php" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="148" />
            <fileline lineNumber="149">    #|# [Base_Dir_Scripts_Data_Web_Html] define Directory for HTML web files</fileline>
            <fileline lineNumber="150">    Base_Dir_Scripts_Data_Web_Html="${Base_Dir_Scripts_Data_Web}/html" ###_ DIR_To_CHECK</fileline>
            <fileline lineNumber="151" />
            <fileline lineNumber="152">    #|# [Base_Dir_Scripts_Data_Doc] define Directory for documentation files</fileline>
            <fileline lineNumber="153">    Base_Dir_Scripts_Data_Doc="${Base_Dir_Scripts_Data}/doc" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="154" />
            <fileline lineNumber="155">    #|# [Base_Dir_Scripts_Data_doc_xml] define Directory for XML documentation files</fileline>
            <fileline lineNumber="156">    Base_Dir_Scripts_Data_doc_xml="${Base_Dir_Scripts_Data_Doc}/xml" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="157" />
            <fileline lineNumber="158">    #|# [Base_Dir_Scripts_Data_doc_txt] define Directory for text documentation files</fileline>
            <fileline lineNumber="159">    Base_Dir_Scripts_Data_doc_txt="${Base_Dir_Scripts_Data_Doc}/txt" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="160" />
            <fileline lineNumber="161">    #|# [Base_Dir_Scripts_Data_doc_man_html] define Directory for HTML manual files</fileline>
            <fileline lineNumber="162">    Base_Dir_Scripts_Data_doc_man_html="${Base_Dir_Scripts_Data_Doc}/man-html" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="163" />
            <fileline lineNumber="164">    #|# [Base_Dir_Scripts_Data_Reports] define Directory for report files</fileline>
            <fileline lineNumber="165">    Base_Dir_Scripts_Data_Reports="${Base_Dir_Scripts_Data}/reports" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="166" />
            <fileline lineNumber="167">    #|# [Base_Dir_Scripts_Data_Reports_txt] define Directory for text report files</fileline>
            <fileline lineNumber="168">    Base_Dir_Scripts_Data_Reports_txt="${Base_Dir_Scripts_Data_Reports}/txt" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="169" />
            <fileline lineNumber="170">    #|# [Base_Dir_Scripts_Data_Reports_html] define Directory for HTML report files</fileline>
            <fileline lineNumber="171">    Base_Dir_Scripts_Data_Reports_html="${Base_Dir_Scripts_Data_Reports}/html" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="172" />
            <fileline lineNumber="173">    #|# [Base_Dir_Scripts_Data_Get_From_PF] define Directory for pulled data files</fileline>
            <fileline lineNumber="174">    Base_Dir_Scripts_Data_Get_From_PF="${Base_Dir_Scripts_Data}/pull" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="175" />
            <fileline lineNumber="176">    #|# [Base_Dir_Scripts_Data_Html] define Directory for HTML files in reports</fileline>
            <fileline lineNumber="177">    Base_Dir_Scripts_Data_Html="${Base_Dir_Scripts_Data_Reports}/html" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="178" />
            <fileline lineNumber="179">    #|# [Base_Dir_Scripts_Data_PKI] define Directory for PKI files</fileline>
            <fileline lineNumber="180">    Base_Dir_Scripts_Data_PKI="${Base_Dir_Scripts_Data}/pki" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="181" />
            <fileline lineNumber="182">    #|# [Base_Dir_Scripts_Data_PKI_config] define Directory for PKI configuration files</fileline>
            <fileline lineNumber="183">    Base_Dir_Scripts_Data_PKI_config="${Base_Dir_Scripts_Data_PKI}/etc" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="184" />
            <fileline lineNumber="185">    #|# [Base_Dir_Scripts_Data_PKI_certificate] define Directory for PKI certificates</fileline>
            <fileline lineNumber="186">    Base_Dir_Scripts_Data_PKI_certificate="${Base_Dir_Scripts_Data_PKI}/certificate" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="187" />
            <fileline lineNumber="188">    #|# [Base_Dir_Scripts_Data_PKI_certificate_root] define Directory for root CA certificates</fileline>
            <fileline lineNumber="189">    Base_Dir_Scripts_Data_PKI_certificate_root="${Base_Dir_Scripts_Data_PKI_certificate}/root-ca" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="190" />
            <fileline lineNumber="191">    #|# [Base_Dir_Scripts_Data_PKI_certificate_intermediate] define Directory for intermediate CA certificates</fileline>
            <fileline lineNumber="192">    Base_Dir_Scripts_Data_PKI_certificate_intermediate="${Base_Dir_Scripts_Data_PKI}/intermediate" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="193" />
            <fileline lineNumber="194">    #|# [Base_Dir_Scripts_Data_PKI_certificate_server] define Directory for server certificates</fileline>
            <fileline lineNumber="195">    Base_Dir_Scripts_Data_PKI_certificate_server="${Base_Dir_Scripts_Data_PKI}/servers" ###_ DIR_To_CHECK_TMP</fileline>
            <fileline lineNumber="196">    source_sub_config </fileline>
            <fileline lineNumber="197">    set_vars_env</fileline>
            <fileline lineNumber="198">    get_resources</fileline>
            <fileline lineNumber="199">    load_core_lib</fileline>
            <fileline lineNumber="200">    init_all</fileline>
            <fileline lineNumber="201">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="202">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="203">####################################################</fileline>
            <fileline lineNumber="204">}    </fileline>
            <fileline lineNumber="205" />
            <fileline lineNumber="206"># check and set path directory for conf files</fileline>
            <fileline lineNumber="207">function set_bpath()</fileline>
            <fileline lineNumber="208">{</fileline>
            <fileline lineNumber="209">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="210">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="211">Function_PATH="${Function_Name}"</fileline>
            <fileline lineNumber="212">######################################################</fileline>
            <fileline lineNumber="213">    if [[ ${Runned} -ge 2  ]]</fileline>
            <fileline lineNumber="214">        then </fileline>
            <fileline lineNumber="215">            printf "Error during path configuration "</fileline>
            <fileline lineNumber="216">            printf "${GLB_PRINTCOL_4}" "default base directory set to" ": [" "${Base_Dir_Scripts}" "]"</fileline>
            <fileline lineNumber="217">            exit 1</fileline>
            <fileline lineNumber="218">        else </fileline>
            <fileline lineNumber="219">            if [[ ! -d ${Base_Dir_Scripts}/conf ]] </fileline>
            <fileline lineNumber="220">                then </fileline>
            <fileline lineNumber="221">                    Base_Dir_Scripts=$(dirname  ${Base_Dir_Scripts}   )</fileline>
            <fileline lineNumber="222">                    Runned=$(expr ${Runned} + 1 )</fileline>
            <fileline lineNumber="223">                    set_bpath</fileline>
            <fileline lineNumber="224">                else </fileline>
            <fileline lineNumber="225">                    printf "${GLB_PRINTCOL_4}" "default base directory set to" ": [" "${Base_Dir_Scripts}" "]"</fileline>
            <fileline lineNumber="226">            fi </fileline>
            <fileline lineNumber="227">    fi</fileline>
            <fileline lineNumber="228">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="229">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="230">####################################################</fileline>
            <fileline lineNumber="231">}</fileline>
            <fileline lineNumber="232" />
            <fileline lineNumber="233"># source and check configuration files in the config folder</fileline>
            <fileline lineNumber="234">function source_sub_config() </fileline>
            <fileline lineNumber="235">{</fileline>
            <fileline lineNumber="236">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="237">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="238">Function_PATH="${Function_Name}"</fileline>
            <fileline lineNumber="239">######################################################</fileline>
            <fileline lineNumber="240">    # Source the configuration file if available</fileline>
            <fileline lineNumber="241">    ConfigState=""</fileline>
            <fileline lineNumber="242">    for configuration_file in $(ls ${Base_Dir_Scripts_CNF_Subs}/*.cnf -1)</fileline>
            <fileline lineNumber="243">    do </fileline>
            <fileline lineNumber="244">            if [[ -f ${configuration_file}  ]]</fileline>
            <fileline lineNumber="245">                then </fileline>
            <fileline lineNumber="246">                    . ${configuration_file}  2&gt; /dev/null  </fileline>
            <fileline lineNumber="247">                    if [[ ${ConfigState} = "OK" ]]</fileline>
            <fileline lineNumber="248">                        then </fileline>
            <fileline lineNumber="249">                            printf "${GLB_PRINTCOL_4}" "Sourcing base configuration file ${configuration_file}" ": [" "SUCCESS" "]"</fileline>
            <fileline lineNumber="250">                            ConfigState=""</fileline>
            <fileline lineNumber="251">                        else</fileline>
            <fileline lineNumber="252">                            printf "${GLB_PRINTCOL_4}" "Sourcing base configuration file ${configuration_file} " ": [" "ERROR" "]"</fileline>
            <fileline lineNumber="253">                            exit 1</fileline>
            <fileline lineNumber="254">                    fi </fileline>
            <fileline lineNumber="255">                else </fileline>
            <fileline lineNumber="256">                    printf "${GLB_PRINTCOL_4}" "Sourcing base configuration file ${configuration_file}" ": [" "File NOT FOUND"  "]"</fileline>
            <fileline lineNumber="257">                    exit 1</fileline>
            <fileline lineNumber="258">            fi </fileline>
            <fileline lineNumber="259">    done </fileline>
            <fileline lineNumber="260" />
            <fileline lineNumber="261">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="262">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="263">####################################################</fileline>
            <fileline lineNumber="264">} </fileline>
            <fileline lineNumber="265" />
            <fileline lineNumber="266"># get ressources from git if path configuration set error</fileline>
            <fileline lineNumber="267">function get_resources ()</fileline>
            <fileline lineNumber="268">{</fileline>
            <fileline lineNumber="269">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="270">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="271">Function_PATH="${Function_Name}"</fileline>
            <fileline lineNumber="272">######################################################</fileline>
            <fileline lineNumber="273"> if [[ ${runned} -ge 2 ]]</fileline>
            <fileline lineNumber="274">    then </fileline>
            <fileline lineNumber="275">        printf "Error during path configuration "</fileline>
            <fileline lineNumber="276">        printf "${GLB_PRINTCOL_4}" "default base directory set to" ": [" "${Base_Dir_Scripts}" "]"</fileline>
            <fileline lineNumber="277">        exit 1</fileline>
            <fileline lineNumber="278">    else </fileline>
            <fileline lineNumber="279">        if [[ -d ${Base_Dir_Scripts_Lib} ]]   </fileline>
            <fileline lineNumber="280">            then </fileline>
            <fileline lineNumber="281">                 printf "${GLB_PRINTCOL_4}" "default ressource directory dowload" ": [" "SUCCESS" "]"</fileline>
            <fileline lineNumber="282">                 runned="0"</fileline>
            <fileline lineNumber="283">            else </fileline>
            <fileline lineNumber="284">                cd ${Base_Dir_Scripts}</fileline>
            <fileline lineNumber="285">                git clone git@${GIT_SSH_URL}:v3/${GIT_GLB_ORGANISATION}/${GIT_GLB_PROJECT}/lib</fileline>
            <fileline lineNumber="286">                runned="$(expr ${runned} + 1 )"</fileline>
            <fileline lineNumber="287">                get_resources</fileline>
            <fileline lineNumber="288">        fi </fileline>
            <fileline lineNumber="289">fi </fileline>
            <fileline lineNumber="290">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="291">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="292">####################################################</fileline>
            <fileline lineNumber="293">}</fileline>
            <fileline lineNumber="294" />
            <fileline lineNumber="295"># check and load file core.sh (Very Important File)</fileline>
            <fileline lineNumber="296">function load_core_lib ()</fileline>
            <fileline lineNumber="297">{</fileline>
            <fileline lineNumber="298">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="299">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="300">Function_PATH="${Function_Name}"</fileline>
            <fileline lineNumber="301">######################################################</fileline>
            <fileline lineNumber="302">CoreState=""</fileline>
            <fileline lineNumber="303">printf  "Sourcing core lib file " </fileline>
            <fileline lineNumber="304">if [[ -f ${Base_Dir_Scripts_Lib}/core.sh  ]]</fileline>
            <fileline lineNumber="305">   then </fileline>
            <fileline lineNumber="306">       . ${Base_Dir_Scripts_Lib}/core.sh 2&gt; /dev/null  </fileline>
            <fileline lineNumber="307">       if [[  ${?} -ge 1 ]] &amp;&amp; [[ ! ${CoreState} = "OK" ]]</fileline>
            <fileline lineNumber="308">          then </fileline>
            <fileline lineNumber="309">              printf "                                                : [ ERROR ] \n" </fileline>
            <fileline lineNumber="310">              exit 1</fileline>
            <fileline lineNumber="311">          else</fileline>
            <fileline lineNumber="312">              printf "                                                : [ SUCCESS ] \n" </fileline>
            <fileline lineNumber="313">      fi </fileline>
            <fileline lineNumber="314">    else </fileline>
            <fileline lineNumber="315">      printf " ERROR FILE NOT FOUND \n"</fileline>
            <fileline lineNumber="316">fi </fileline>
            <fileline lineNumber="317" />
            <fileline lineNumber="318">Do_source_all_libs "${Base_Dir_Scripts_Lib}"</fileline>
            <fileline lineNumber="319">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="320">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="321">####################################################</fileline>
            <fileline lineNumber="322">}</fileline>
            <fileline lineNumber="323" />
            <fileline lineNumber="324">GLB_GIT_ressources=${GIT_HTTPS_URL}/lib</fileline>
            <fileline lineNumber="325" />
            <fileline lineNumber="326"># generique connection to Azure DevOps project</fileline>
            <fileline lineNumber="327">function login_azure ()</fileline>
            <fileline lineNumber="328">{</fileline>
            <fileline lineNumber="329">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="330">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="331">Function_PATH="${Function_Name}"</fileline>
            <fileline lineNumber="332">######################################################</fileline>
            <fileline lineNumber="333" />
            <fileline lineNumber="334">az login </fileline>
            <fileline lineNumber="335">az devops configure --defaults organization=${organization} project=${GIT_GLB_PROJECT}</fileline>
            <fileline lineNumber="336">az account set --subscription "${subscriptionId}"</fileline>
            <fileline lineNumber="337" />
            <fileline lineNumber="338">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="339">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="340">####################################################</fileline>
            <fileline lineNumber="341">}</fileline>
            <fileline lineNumber="342">git config --global init.defaultBranch main</fileline>
            <fileline lineNumber="343" />
            <fileline lineNumber="344" />
            <fileline lineNumber="345" />
            <fileline lineNumber="346" />
            <fileline lineNumber="347" />
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/security.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Generics.cnf                                         Version : 1.1.2.5      #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 03/09/2006                                                  #</fileline>
            <fileline lineNumber="5"># Team          : Only me after all                                           #</fileline>
            <fileline lineNumber="6"># Support mail  : doraken@doraken.net                                          #</fileline>
            <fileline lineNumber="7"># Author        : Arnaud Crampet                                              #</fileline>
            <fileline lineNumber="8">#                                                                             #</fileline>
            <fileline lineNumber="9"># Subject : This file containe all genrics vars used in CAST                  #</fileline>
            <fileline lineNumber="10">#                                                                             #</fileline>
            <fileline lineNumber="11">###############################################################################</fileline>
            <fileline lineNumber="12">####</fileline>
            <fileline lineNumber="13"># INFO</fileline>
            <fileline lineNumber="14" />
            <fileline lineNumber="15">AccountApache="apache:10001:App"                                      # Account_To_Create</fileline>
            <fileline lineNumber="16">AccountMysql="mysql:10002:App"                                        # Account_To_Create</fileline>
            <fileline lineNumber="17">AccountCoreAdm="coreadm:10001:Adm"                                    # Account_To_Create</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">AccountAdm="adm0001:20001:Arnaud Crampet"                             # Account_To_Create</fileline>
            <fileline lineNumber="20">AccountAdm="adm0002:20001:Kelly         "                             # Account_To_Create</fileline>
            <fileline lineNumber="21">AccountAdm="adm0003:20001:Xavier        "                             # Account_To_Create</fileline>
            <fileline lineNumber="22" />
            <fileline lineNumber="23" />
            <fileline lineNumber="24">DeleteAccount="lp"                                                    # Account_To_Delete</fileline>
            <fileline lineNumber="25">DeleteAccount="games"                                                 # Account_To_Delete</fileline>
            <fileline lineNumber="26">DeleteAccount="ftp"                                                   # Account_To_Delete</fileline>
            <fileline lineNumber="27">DeleteAccount="adm"                                                   # Account_To_Delete</fileline>
            <fileline lineNumber="28">DeleteAccount="shutdown"                                              # Account_To_Delete</fileline>
            <fileline lineNumber="29">DeleteAccount="operator"                                              # Account_To_Delete</fileline>
            <fileline lineNumber="30" />
            <fileline lineNumber="31">DeleteGroup="lp"                                                      # Group_To_Delete</fileline>
            <fileline lineNumber="32">DeleteGroup="cdrom"                                                   # Group_To_Delete</fileline>
            <fileline lineNumber="33">DeleteGroup="floppy"                                                  # Group_To_Delete</fileline>
            <fileline lineNumber="34">DeleteGroup="games"                                                   # Group_To_Delete</fileline>
            <fileline lineNumber="35">DeleteGroup="dialout"                                                 # Group_To_Delete</fileline>
            <fileline lineNumber="36">DeleteGroup="ftp"                                                     # Group_To_Delete</fileline>
            <fileline lineNumber="37">DeleteGroup="audio"                                                   # Group_To_Delete</fileline>
            <fileline lineNumber="38" />
            <fileline lineNumber="39">CreateGroup="AdmApp:20001"                                            # Group_To_Delete</fileline>
            <fileline lineNumber="40">CreateGroup="AdmSgbd:20002"                                           # Group_To_Delete</fileline>
            <fileline lineNumber="41">CreateGroup="AdmWeb:20003"                                            # Group_To_Delete</fileline>
            <fileline lineNumber="42">CreateGroup="AdmSsh:20004"                                            # Group_To_Delete</fileline>
            <fileline lineNumber="43">CreateGroup="AdmGW:20005"                                             # Group_To_Delete</fileline>
            <fileline lineNumber="44">CreateGroup="AdmBase:20005"   </fileline>
            <fileline lineNumber="45" />
            <fileline lineNumber="46">Right_Home="750"</fileline>
            <fileline lineNumber="47">Right_KeyDir="700"</fileline>
            <fileline lineNumber="48">Right_KeyFile="600"</fileline>
            <fileline lineNumber="49" />
            <fileline lineNumber="50">GroupADDLst="    "</fileline>
            <fileline lineNumber="51">KillGrp="      "</fileline>
            <fileline lineNumber="52" />
            <fileline lineNumber="53">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/document.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># document.cnf                                         Version : 1.1.2.1      #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 18/05/2007                                                  #</fileline>
            <fileline lineNumber="5"># Team          : Only me after all                                           #</fileline>
            <fileline lineNumber="6"># Support mail  : doraken@doraken.net                                          #</fileline>
            <fileline lineNumber="7"># Author        : Arnaud Crampet                                              #</fileline>
            <fileline lineNumber="8">#                                                                             #</fileline>
            <fileline lineNumber="9"># Subject : This conf file provide all base parameters for auto documentation #</fileline>
            <fileline lineNumber="10">#                                                                             #</fileline>
            <fileline lineNumber="11">###############################################################################</fileline>
            <fileline lineNumber="12">####</fileline>
            <fileline lineNumber="13"># INFO</fileline>
            <fileline lineNumber="14" />
            <fileline lineNumber="15">Base_Catalog_function="${Base_Dir_Scripts_Data_Catalogs}/function.cat"                  # Is_A_Catalog_FLAG</fileline>
            <fileline lineNumber="16">Base_Catalog_function_depend="${Base_Dir_Scripts_Data_Catalogs}/function_deps.cat"      # Is_A_Catalog_FLAG</fileline>
            <fileline lineNumber="17">Base_Catalog_function_docs="${Base_Dir_Scripts_Data_Catalogs}/function_docs.cat"        # Is_A_Catalog_FLAG</fileline>
            <fileline lineNumber="18">Base_Catalog_function_TMP_dep="${Base_Dir_Scripts_Data_Catalogs}/function_tmp_dep.cat"  # Is_A_Catalog_FLAG</fileline>
            <fileline lineNumber="19">Base_Catalog_function_Final="${Base_Dir_Scripts_Data_Catalogs}/Final_function_deps.cat" # Is_A_Catalog_FLAG</fileline>
            <fileline lineNumber="20" />
            <fileline lineNumber="21">TOPrintFormat="XML"</fileline>
            <fileline lineNumber="22">ConfigState="OK"</fileline>
            <fileline lineNumber="23" />
            <fileline lineNumber="24">Package_Configuration="OK"</fileline>
            <fileline lineNumber="25">ConfigState="OK"</fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/docker.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># docker.cnf                                                                  #       </fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 19/01/2015                                                  #</fileline>
            <fileline lineNumber="5"># Team          : Arnaud Crampt Automation Service                            #</fileline>
            <fileline lineNumber="6"># Support mail  : doraken@doraken.net                                          #</fileline>
            <fileline lineNumber="7"># Author        : XXXXXXX XXXXXXXX                                            #</fileline>
            <fileline lineNumber="8">#                                                                             #</fileline>
            <fileline lineNumber="9"># Subject : This file containe all genrics vars used in docker installation   #</fileline>
            <fileline lineNumber="10">#                                                                             #</fileline>
            <fileline lineNumber="11">###############################################################################</fileline>
            <fileline lineNumber="12">####</fileline>
            <fileline lineNumber="13"># INFO</fileline>
            <fileline lineNumber="14" />
            <fileline lineNumber="15" />
            <fileline lineNumber="16" />
            <fileline lineNumber="17">Docker_Supported_img_local=('fr' 'us')</fileline>
            <fileline lineNumber="18">Docker_supported_img_system=('alpine' 'debian' 'ubuntu' 'alpine')</fileline>
            <fileline lineNumber="19" />
            <fileline lineNumber="20" />
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23" />
            <fileline lineNumber="24" />
            <fileline lineNumber="25" />
            <fileline lineNumber="26">#|# used for control sourcing keep it a last line </fileline>
            <fileline lineNumber="27">ConfigState="OK"</fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/libiconv.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_LIBICONV="${GLB_D_PRODUCTS}/lib_iconv"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">#################### GLB_D_PRODUCTS_LIBICONV  ##############################</fileline>
            <fileline lineNumber="13">PKG_LIBICONV_EXTEND="tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_LIBICONV_EXTEND defined to  : [ ${PKG_LIBICONV_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_LIBICONV="libiconv-1.16"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_LIBICONV defined to  : [ ${PKG_LIBICONV} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_LIBICONV="http://ftp.gnu.org/pub/gnu/libiconv"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "Url LIBICONV defined to  : [ ${URL_LIBICONV} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/mysql.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_MYSQL="${GLB_D_PRODUCTS}/mysql"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">##################  MYSQL 5.0.51   #####################</fileline>
            <fileline lineNumber="13">PKG_MYSQL="mysql-5.0.51"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_MYSQL defined to  : [ ${PKG_MYSQL} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">URL_MYSQL="ftp://ftp.inria.fr/pub/MySQL/Downloads/MySQL-5.0"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Url MYSQL defined to  : [ ${URL_MYSQL} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19" />
            <fileline lineNumber="20">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/zabbix.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_ZABBIX="${GLB_D_PRODUCTS}/zabbix"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">################# Zabbix php #############################</fileline>
            <fileline lineNumber="13">PKG_ZABBIX_EXTEND=".tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_ZABBIX_EXTEND defined to  : [ ${PKG_ZABBIX_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_ZABBIX="zabbix-5.2.6"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package ZABBIX defined to  : [ ${PKG_ZABBIX} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_ZABBIX="https://cdn.zabbix.com/zabbix/sources/stable/5.2"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "URL_ZABBIX defined to  : [ ${URL_ZABBIX} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/amavisd.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_AMAVISD="${GLB_D_PRODUCTS}/amavisd"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">#################### GLB_D_PRODUCTS_AMAVISD  ##############################</fileline>
            <fileline lineNumber="13">PKG_AMAVISD_EXTEND="tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_AMAVISD_EXTEND defined to  : [ ${PKG_AMAVISD_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_AMAVISD="amavisd-new-2.11.1"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_AMAVISD defined to  : [ ${PKG_AMAVISD} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_AMAVISD="http://www.ijs.si/software/amavisd"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "Url AMAVISD defined to  : [ ${URL_AMAVISD} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/libmcrypt.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_LIBMCRYPT="${GLB_D_PRODUCTS}/libmcrypt"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">################# LibMCrypt 2.5.7 ##########################</fileline>
            <fileline lineNumber="13">PKG_LIB_MCRYPT_EXTEND="tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_LIB_MCRYPT_EXTEND defined to  : [ ${PKG_LIB_MCRYPT_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_LIB_MCRYPT="libmcrypt-2.5.8"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_LIB_MCRYPT defined to  : [ ${PKG_LIB_MCRYPT} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_LIB_MCRYPT="https://sourceforge.net/projects/mcrypt/files/Libmcrypt/2.5.8"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "URL_LIB_MCRYPT defined to  : [ ${URL_LIB_MCRYPT} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/mcrypt.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_MCRYPT="${GLB_D_PRODUCTS}/mcrypt"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">################# Mcrypt 2.6.4  ############################</fileline>
            <fileline lineNumber="13">PKG_MCRYPT_EXTEND="tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_MCRYPT_EXTEND defined to  : [ ${PKG_MCRYPT_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_MCRYPT="mcrypt-2.6.8"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_MCRYPT defined to  : [ ${PKG_MCRYPT} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_MCRYPT="https://sourceforge.net/projects/mcrypt/files/MCrypt/2.6.8"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "URL_MCRYPT defined to  : [ ${URL_MCRYPT} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/freetype2.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_FREETYPE2="${GLB_D_PRODUCTS}/freetype2"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">#################### FREETYPE2  ##############################</fileline>
            <fileline lineNumber="13">PKG_FREETYPE2_EXTEND="tar.xz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_FREETYPE2_EXTEND defined to  : [ ${PKG_FREETYPE2_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_FREETYPE2="freetype-2.10.4.tar.xz"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_FREETYPE2 defined to  : [ ${PKG_FREETYPE2} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_FREETYPE2="http://download.savannah.gnu.org/releases/freetype"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "Url FREETYPE2 defined to  : [ ${URL_FREETYPE2} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/tcl.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_TCL="${GLB_D_PRODUCTS}/tcl"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">################# TCL  ##################################</fileline>
            <fileline lineNumber="13">PKG_TCL_EXTEND="tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_TCL_EXTEND defined to  : [ ${PKG_TCL_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_TCL="tcl8.6.11-src"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_TCL defined to  : [ ${PKG_TCL} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_TCL="https://prdownloads.sourceforge.net/tcl"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "Url TCL defined to  : [ ${URL_TCL} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/cvs.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_CVS="${GLB_D_PRODUCTS}/cvs"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">#################### CVS  ##############################</fileline>
            <fileline lineNumber="13">PKG_CVS_EXTEND="tar.xz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_CVS_EXTEND defined to  : [ ${PKG_CVS_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_CVS="cvs-1.11.22"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_CVS defined to  : [ ${PKG_CVS} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_CVS="http://ftp.gnu.org/non-gnu/cvs/source/stable/1.11.22"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "Url CVS defined to  : [ ${URL_CVS} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/xslt.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_XSL="${GLB_D_PRODUCTS}/xsl"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">#################  xslt 1.1.20  #####################</fileline>
            <fileline lineNumber="13">PKG_XSL_EXTEND="tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_XSL_EXTEND defined to  : [ ${PKG_XSL_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_XSL="libxslt-v1.1.34"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_XML defined to  : [ ${PKG_XSL} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_XSL="https://gitlab.gnome.org/GNOME/libxslt/-/archive/v1.1.34"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "Url XML defined to  : [ ${URL_XSL} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/berkeleydb.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_BERKELEYDB="${GLB_D_PRODUCTS}/berkeleydb"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">################ Berkeley DB ( prerequesite of OPENLDAP ) ####</fileline>
            <fileline lineNumber="13">PKG_BerkeleyDb_EXTEND="tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_BerkeleyDb_EXTEND defined to  : [ ${PKG_BerkeleyDb_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_BerkeleyDb="db-18.1.40"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_BerkeleyDb defined to  : [ ${PKG_BerkeleyDb} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_BerkeleyDb="https://download.oracle.com/otn/berkeley-db"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "URL_BerkeleyDb defined to  : [ ${URL_BerkeleyDb} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/curl.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_CURL="${GLB_D_PRODUCTS}/curl"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">################  CURL         ###########################</fileline>
            <fileline lineNumber="13">PKG_CURL_EXTEND=".tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_CURL_EXTEND defined to  : [ ${PKG_CURL_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_CURL="curl-7.76.1"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_CURL defined to  : [ ${PKG_CURL} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_CURL="https://github.com/curl/curl/releases/download/curl-7_76_1"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "URL_CURL defined to  : [ ${URL_CURL} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/re2c.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_RE2C="${GLB_D_PRODUCTS}/re2c"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">################# Re2C 0.10.6 ##############################</fileline>
            <fileline lineNumber="13">PKG_RE2C_EXTEND="tar.xz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_RE2C_EXTEND defined to  : [ ${PKG_RE2C_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_RE2C="re2c-2.1.1"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_RE2C defined to  : [ ${PKG_RE2C} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_RE2C="https://github.com/skvadrik/re2c/releases/download/2.1.1"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "URL_RE2C defined to  : [ ${URL_RE2C} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/zlib.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_ZLIB="${GLB_D_PRODUCTS}/zlib"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">##################  ZLIB 1.2.3   #####################</fileline>
            <fileline lineNumber="13">PKG_ZLIB_EXTEND="tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_ZLIB_EXTEND defined to  : [ ${PKG_ZLIB_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_ZLIB="zlib-1.2.11"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_ZLIB defined to  : [ ${PKG_ZLIB} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_ZLIB="http://www.zlib.net"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "Url ZLIB defined to  : [ ${URL_ZLIB} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/libart.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_LIBART="${GLB_D_PRODUCTS}/libart"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">################ libart ####################################</fileline>
            <fileline lineNumber="13">PKG_LIBART_EXTEND=".tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_LIBART_EXTEND defined to  : [ ${PKG_LIBART_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_LIBART="libart_lgpl-2.3.21"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_LIBART defined to  : [ ${PKG_LIBART} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_LIBART="https://download.gnome.org/sources/libart_lgpl/2.3"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "URL_LIBART defined to  : [ ${URL_LIBART} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/cactid-sipne.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_CACTID="${GLB_D_PRODUCTS}/cactid"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">############### cactid  -- spine       ###########################</fileline>
            <fileline lineNumber="13">PKG_CACTID_EXTEND=".tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_CACTID_EXTEND defined to  : [ ${PKG_CACTID_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_CACTID="cacti-spine-1.2.17"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_CACTID defined to  : [ ${PKG_CACTID} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_CACTID="https://www.cacti.net/downloads/spine"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "URL_CACTID defined to  : [ ${URL_CACTID} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/httpd.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_HTTPD="${GLB_D_PRODUCTS}/httpd"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">################  HTTPD         ###########################</fileline>
            <fileline lineNumber="13">PKG_HTTPD_EXTEND=".tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_HTTPD_EXTEND defined to  : [ ${PKG_HTTPD_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_HTTPD="httpd-2.4.46"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_HTTPD defined to  : [ ${PKG_HTTPD} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_HTTPD="https://apache.mediamirrors.org/httpd"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "URL_HTTPD defined to  : [ ${URL_HTTPD} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/cacti-php.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_CACTI="${GLB_D_PRODUCTS}/cacti"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">################# cacti php #############################</fileline>
            <fileline lineNumber="13">PKG_CACTI_PHP_EXTEND=".tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_CACTI_PHP_EXTEND defined to  : [ ${PKG_CACTI_PHP_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_CACTI_PHP="cacti-1.2.17"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_CACTI_PHP defined to  : [ ${PKG_CACTI_PHP} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_CACTI_PHP="http://www.cacti.net/downloads"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "URL_CACTI_PHP defined to  : [ ${URL_CACTI_PHP} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/mariadb.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_MARIADB="${GLB_D_PRODUCTS}/mariadb"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">##################  MariaDB    #####################</fileline>
            <fileline lineNumber="13">PKG_MARIADB_EXTEND="tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_MARIADB_EXTEND defined to  : [ ${PKG_MARIADB_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_MARIADB="mariadb-10.5.10"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_MARIADB defined to  : [ ${PKG_MARIADB} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_MARIADB="https://ftp.igh.cnrs.fr/pub/mariadb/mariadb-10.5.10/source"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "Url URL_MARIADB defined to  : [ ${URL_MARIADB} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/bind.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9">GLB_D_PRODUCTS_BIND="${GLB_D_PRODUCTS}/bind"</fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11">#################### GLB_D_PRODUCTS_BIND  ##############################</fileline>
            <fileline lineNumber="12">PKG_BIND_EXTEND="tar.xz"</fileline>
            <fileline lineNumber="13">MSG_DISPLAY "Config" "1" "Package PKG_BIND_EXTEND defined to  : [ ${PKG_BIND_EXTEND} ] "</fileline>
            <fileline lineNumber="14" />
            <fileline lineNumber="15">PKG_BIND="bind-9.17.12"</fileline>
            <fileline lineNumber="16">MSG_DISPLAY "Config" "1" "Package PKG_BIND defined to  : [ ${PKG_BIND} ] "</fileline>
            <fileline lineNumber="17" />
            <fileline lineNumber="18">URL_BIND="http://ftp.isc.org/isc/bind9/9.17.12"</fileline>
            <fileline lineNumber="19">MSG_DISPLAY "Config" "1" "Url BIND defined to  : [ ${URL_BIND} ] "</fileline>
            <fileline lineNumber="20" />
            <fileline lineNumber="21" />
            <fileline lineNumber="22">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/rrdtool.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_RRDTOOL="${GLB_D_PRODUCTS}/rrd"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">#################### RRDTOOLS  ##############################</fileline>
            <fileline lineNumber="13">PKG_RRDTOOLS_EXTEND="tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_RRDTOOLS_EXTEND defined to  : [ ${PKG_RRDTOOLS_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_RRDTOOLS="rrdtool-1.7.2"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_RRDTOOLS defined to  : [ ${PKG_RRDTOOLS} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_RRDTOOLS="http://oss.oetiker.ch/rrdtool/pub/"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "Url RRDTOOLS defined to  : [ ${URL_RRDTOOLS} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/expat.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_EXPAT="${GLB_D_PRODUCTS}/expat"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">################# expat  ##################################</fileline>
            <fileline lineNumber="13">PKG_EXPAT_EXTEND="tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_EXPAT_EXTEND defined to  : [ ${PKG_EXPAT_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_EXPAT="expat-2.3.0"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_EXPAT defined to  : [ ${PKG_EXPAT} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_EXPAT="https://github.com/libexpat/libexpat/releases/download/R_2_3_0"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "Url EXPAT defined to  : [ ${URL_EXPAT} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/openssl.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_OPENSSL="${GLB_D_PRODUCTS}/openssl"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">################# OpenSSL 0.9.7 ############################</fileline>
            <fileline lineNumber="13">PKG_OPENSSL_EXTEND="tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_OPENSSL_EXTEND defined to  : [ ${PKG_OPENSSL_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_OPENSSL="OpenSSL_1_1_1k"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_OPENSSL defined to  : [ ${PKG_OPENSSL} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_OPENSSL="https://github.com/openssl/openssl/archive/refs/tags"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "URL_OPENSSL defined to  : [ ${URL_OPENSSL} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/xml.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_XML="${GLB_D_PRODUCTS}/xml"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">#################  xml -2.6.27   #####################</fileline>
            <fileline lineNumber="13">PKG_XML_EXTEND="tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_XML_EXTEND defined to  : [ ${PKG_XML_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_XML="libxml2-v2.9.12"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_XML defined to  : [ ${PKG_XML} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_XML="https://gitlab.gnome.org/GNOME/libxml2/-/archive/v2.9.12"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "Url XML defined to  : [ ${URL_XML} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/gd.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_GD="${GLB_D_PRODUCTS}/gd"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">################  GD 2.0.33         ###########################</fileline>
            <fileline lineNumber="13">PKG_GD_EXTEND=".tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_GD_EXTEND defined to  : [ ${PKG_GD_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_GD="libgd-2.3.1"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_GD defined to  : [ ${PKG_GD} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_GD="https://github.com/libgd/libgd/releases/download/gd-2.3.1"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "URL_GD defined to  : [ ${URL_GD} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/openldap.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_OPENLDAP="${GLB_D_PRODUCTS}/openLDAP"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">################  OPEN LDAP 2.3.27 ###########################</fileline>
            <fileline lineNumber="13">PKG_OPEN_LDAP_EXTEND="tgz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_OPEN_LDAP_EXTEND defined to  : [ ${PKG_OPEN_LDAP_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_OPEN_LDAP="openldap-2.5.4"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_OPEN_LDAP defined to  : [ ${PKG_OPEN_LDAP} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_OPEN_LDAP="https://www.openldap.org/software/download/OpenLDAP/openldap-release"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "URL_OPEN_LDAP defined to  : [ ${URL_OPEN_LDAP} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/postfix.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_POSTFIX="${GLB_D_PRODUCTS}/postfix"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">#################### GLB_D_PRODUCTS_POSTFIX  ##############################</fileline>
            <fileline lineNumber="13">PKG_POSTFIX_EXTEND="tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_POSTFIX defined to  : [ ${PKG_POSTFIX} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_POSTFIX="postfix-3.6.0"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_POSTFIX defined to  : [ ${PKG_POSTFIX} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_POSTFIX="http://postfix.mirrors.ovh.net/postfix-release/official/"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "Url POSTFIX defined to  : [ ${URL_POSTFIX} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/tomcat.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_TOMCAT="${GLB_D_PRODUCTS}/tomcat"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">#################### GLB_D_PRODUCTS_TOMCAT  ##############################</fileline>
            <fileline lineNumber="13">PKG_TOMCAT_EXTEND="tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_TOMCAT_EXTEND defined to  : [ ${PKG_TOMCAT_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_TOMCAT="apache-tomcat-10.0.6-src.tar.gz"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_TOMCAT defined to  : [ ${PKG_TOMCAT} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_TOMCAT="https://downloads.apache.org/tomcat/tomcat-10/v10.0.6/src"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "Url TOMCAT defined to  : [ ${URL_TOMCAT} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/flex.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_FLEX="${GLB_D_PRODUCTS}/flex"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">################## FLEX 2.5.33 #########################</fileline>
            <fileline lineNumber="13">PKG_FLEX_EXTEND="tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_FLEX_EXTEND defined to  : [ ${PKG_FLEX_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_FLEX="flex-2.6.4"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_FLEX defined to  : [ ${PKG_FLEX} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_FLEX="https://github.com/westes/flex/files/981163"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "URL_FLEX defined to  : [ ${URL_FLEX} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/rsync.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_RSYNC="${GLB_D_PRODUCTS}/rsync"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">#################### GLB_D_PRODUCTS_RSYNC  ##############################</fileline>
            <fileline lineNumber="13">PKG_RSYNC_EXTEND="tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_RSYNC_EXTEND defined to  : [ ${PKG_RSYNC_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_RSYNC="rsync-3.2.3"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_RSYNC defined to  : [ ${PKG_RSYNC} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_RSYNC="http://samba.anu.edu.au/ftp/rsync"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "Url RSYNC defined to  : [ ${URL_RSYNC} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/libidn.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_LIBIDN="${GLB_D_PRODUCTS}/libidn"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">#################  libidn-0.6.11   #####################</fileline>
            <fileline lineNumber="13">PKG_LIBIDN_EXTEND="tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_LIBIDN_EXTEND defined to  : [ ${PKG_LIBIDNT_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_LIBIDN="libidn2-2.3.0"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_LIBIDN defined to  : [ ${PKG_LIBIDN} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_LIBIDN="https://gitlab.com/libidn/libidn2/-/archive/2.3.0"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "Url Lib IDN defined to  : [ ${URL_LIBIDN} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/readline.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_READLINE="${GLB_D_PRODUCTS}/readline"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">##################  READLINE 5.2   #####################</fileline>
            <fileline lineNumber="13">PKG_READLINE_EXTEND="tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_READLINE_EXTEND defined to  : [ ${PKG_READLINE_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_READLINE="readline-8.1"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_READLINE defined to  : [ ${PKG_READLINE} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_READLINE="https://ftp.gnu.org/gnu/readline"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "URL_READLINE defined to  : [ ${URL_READLINE} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/mhash.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_MHASH="${GLB_D_PRODUCTS}/mhash"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">################# MHASH 0.3.7.1 ##########################</fileline>
            <fileline lineNumber="13">PKG_MHASH_EXTEND="tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_MHASH_EXTEND defined to  : [ ${PKG_MHASH_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_MHASH="mhash-0.9.9.9"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_MHASH defined to  : [ ${PKG_MHASH} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_MHASH="https://sourceforge.net/projects/mhash/files/mhash/0.9.9.9"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "URL_MHASH defined to  : [ ${URL_MHASH} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/tk.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_TK="${GLB_D_PRODUCTS}/tk"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">################# TK 8.4 #############################</fileline>
            <fileline lineNumber="13">PKG_TK_EXTEND="tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_TK_EXTEND defined to  : [ ${PKG_TK_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_TK="tk8.6.11.1-src"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_TK defined to  : [ ${PKG_TK} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_TK="https://prdownloads.sourceforge.net/tcl/"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "Url TK defined to  : [ ${URL_TK} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/expect.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_EXPECT="${GLB_D_PRODUCTS}/expect"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">################## expect ##############################</fileline>
            <fileline lineNumber="13">PKG_EXPECT_EXTEND="tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_EXPECT_EXTEND defined to  : [ ${PKG_EXPECT_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_EXPECT="expect5.45.4"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_EXPECT defined to  : [ ${PKG_EXPECT} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_EXPECT="https://sourceforge.net/projects/expect/files/Expect/5.45.4"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "Url expect defined to  : [ ${URL_EXPECT} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/php.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_PHP="${GLB_D_PRODUCTS}/php"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">################  PHP      ###########################</fileline>
            <fileline lineNumber="13">PKG_PHP_EXTEND=".tar.xz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_PHP_EXTEND defined to  : [ ${PKG_PHP_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_PHP="php-8.0.6"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_PHP defined to  : [ ${PKG_PHP} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_PHP="https://www.php.net/distributions/"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "URL_PHP defined to  : [ ${URL_PHP} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/ncurses.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_NCURSES="${GLB_D_PRODUCTS}/ncurses"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">################## ncurses-5.6 #########################</fileline>
            <fileline lineNumber="13">PKG_NCURSES_EXTEND="tar.gz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_NCURSES_EXTEND defined to  : [ ${PKG_NCURSES_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_NCURSES="ncurses-6.2"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_NCURSES defined to  : [ ${PKG_NCURSES} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_NCURSES="https://ftp.gnu.org/gnu/ncurses"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "PKG_NCURSES defined to  : [ ${URL_NCURSES} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/netsnmp.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_NETSNMP="${GLB_D_PRODUCTS}/NetSNMP"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">#################### GLB_D_PRODUCTS_NETSNMP  ##############################</fileline>
            <fileline lineNumber="13">PKG_NETSNMP_EXTEND="tar.xz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_NETSNMP_EXTEND defined to  : [ ${PKG_NETSNMP_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_NETSNMP="net-snmp-5.9"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_NETSNMP defined to  : [ ${PKG_NETSNMP} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_NETSNMP="https://sourceforge.net/projects/net-snmp/files/net-snmp/5.9"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "Url NETSNMP defined to  : [ ${URL_NETSNMP} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/sources/libpng.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Package configuratio file                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 16/05/2021                                                  #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet          Support mail  : doraken@doraken.net  #</fileline>
            <fileline lineNumber="6">###############################################################################</fileline>
            <fileline lineNumber="7">####</fileline>
            <fileline lineNumber="8"># INFO</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">GLB_D_PRODUCTS_PNG="${GLB_D_PRODUCTS}/png"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">#################### png  ##############################</fileline>
            <fileline lineNumber="13">PKG_PNG_EXTEND="tar.xz"</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "Config" "1" "Package PKG_PNG_EXTEND defined to  : [ ${PKG_PNG_EXTEND} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">PKG_PNG="libpng-1.6.37"</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Config" "1" "Package PKG_PNG defined to  : [ ${PKG_PNG} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">URL_PNG="http://prdownloads.sourceforge.net/libpng"</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "Config" "1" "Url PNG defined to  : [ ${URL_PNG} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/support.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Apache.cnf                                                                  #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 30/07/2007                                                  #</fileline>
            <fileline lineNumber="5"># Team          : Only me after all                                           #</fileline>
            <fileline lineNumber="6"># Support mail  : doraken@doraken.net                                          #</fileline>
            <fileline lineNumber="7"># Author        : Arnaud Crampet                                              #</fileline>
            <fileline lineNumber="8">#                                                                             #</fileline>
            <fileline lineNumber="9"># Subject : This conf file provide all base parameters apache interactions    #</fileline>
            <fileline lineNumber="10">#                                                                             #</fileline>
            <fileline lineNumber="11">###############################################################################</fileline>
            <fileline lineNumber="12">####</fileline>
            <fileline lineNumber="13"># INFO</fileline>
            <fileline lineNumber="14" />
            <fileline lineNumber="15">BASE_supportmail="arnaud@crampet.net"</fileline>
            <fileline lineNumber="16">BASE_support_team="Only ME"</fileline>
            <fileline lineNumber="17">Base_Author="Arnaud Crampet"</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">function CAST_SUPPORT_MSG </fileline>
            <fileline lineNumber="20">{</fileline>
            <fileline lineNumber="21">#|# </fileline>
            <fileline lineNumber="22">#|# Base usage : CAST_SUPPORT_MSG</fileline>
            <fileline lineNumber="23">#|# Comment : No parameter needed </fileline>
            <fileline lineNumber="24">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="25">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="26">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="27">######################################################</fileline>
            <fileline lineNumber="28">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="29" />
            <fileline lineNumber="30">CAST_SUPPORT_LOGO</fileline>
            <fileline lineNumber="31">echo "you can contact ${Base_Author} at this mail : ${BASE_supportmail}"</fileline>
            <fileline lineNumber="32" />
            <fileline lineNumber="33">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="34">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="35">#################################################### </fileline>
            <fileline lineNumber="36">}</fileline>
            <fileline lineNumber="37" />
            <fileline lineNumber="38" />
            <fileline lineNumber="39">function CAST_SUPPORT_LOGO </fileline>
            <fileline lineNumber="40">{</fileline>
            <fileline lineNumber="41">#|# </fileline>
            <fileline lineNumber="42">#|# Base usage : CAST_SUPPORT_MSG</fileline>
            <fileline lineNumber="43">#|# Comment : No parameter needed </fileline>
            <fileline lineNumber="44">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="45">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="46">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="47">######################################################</fileline>
            <fileline lineNumber="48">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="49" />
            <fileline lineNumber="50">echo ""</fileline>
            <fileline lineNumber="51">echo "│         │              ┌────────────"</fileline>
            <fileline lineNumber="52">echo "│         │              │         ┌──"</fileline>
            <fileline lineNumber="53">echo "│         │              ▼         │  "</fileline>
            <fileline lineNumber="54">echo "│      ┌──▼──┐   ┌──────────────┐  │  "</fileline>
            <fileline lineNumber="55">echo "└─────►│  C  ├──►│ Common       │◄─┘  "</fileline>
            <fileline lineNumber="56">echo "       │  A  │──►│  Application │     "</fileline>
            <fileline lineNumber="57">echo "       │  S  │◄──┤   Scripting  │◄────"</fileline>
            <fileline lineNumber="58">echo "   ┌──►│  T  │──►│    Toolkit   │     "</fileline>
            <fileline lineNumber="59">echo "   │   └─────┘   └──────────────┘◄┐   "</fileline>
            <fileline lineNumber="60">echo "   │    BY : ${Base_Author}       │   "</fileline>
            <fileline lineNumber="61">echo "   │    Mail : ${BASE_supportmail}   │   "</fileline>
            <fileline lineNumber="62">echo "" </fileline>
            <fileline lineNumber="63">sleep 4</fileline>
            <fileline lineNumber="64">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="65">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="66">#################################################### </fileline>
            <fileline lineNumber="67">}</fileline>
            <fileline lineNumber="68" />
            <fileline lineNumber="69" />
            <fileline lineNumber="70">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/rsyslog_Params.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Generics.cnf                                         Version : 1.1.2.5      #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 03/09/2006                                                  #</fileline>
            <fileline lineNumber="5"># Team          : Only me after all                                           #</fileline>
            <fileline lineNumber="6"># Support mail  : doraken@doraken.net                                          #</fileline>
            <fileline lineNumber="7"># Author        : Arnaud Crampet                                              #</fileline>
            <fileline lineNumber="8">#                                                                             #</fileline>
            <fileline lineNumber="9"># Subject : This file containe all genrics vars used in CAST                  #</fileline>
            <fileline lineNumber="10">#                                                                             #</fileline>
            <fileline lineNumber="11">###############################################################################</fileline>
            <fileline lineNumber="12">####</fileline>
            <fileline lineNumber="13"># INFO</fileline>
            <fileline lineNumber="14" />
            <fileline lineNumber="15" />
            <fileline lineNumber="16"># The imjournal module bellow is now used as a message source instead of imuxsock.</fileline>
            <fileline lineNumber="17">GLB_C_RSYSLOG_ModLoad="imuxsock"</fileline>
            <fileline lineNumber="18">GLB_C_RSYSLOG_ModLoad="imjournal"</fileline>
            <fileline lineNumber="19">GLB_C_RSYSLOG_ModLoad="imklog"</fileline>
            <fileline lineNumber="20">GLB_C_RSYSLOG_ModLoad="immark"</fileline>
            <fileline lineNumber="21">GLB_C_RSYSLOG_ModLoad="imudp"</fileline>
            <fileline lineNumber="22">GLB_C_RSYSLOG_UDPServerRun="514"</fileline>
            <fileline lineNumber="23">GLB_C_RSYSLOG_ModLoad="imtcp"</fileline>
            <fileline lineNumber="24">GLB_C_RSYSLOG_InputTCPServerRun="514"</fileline>
            <fileline lineNumber="25">GLB_C_RSYSLOG_WorkDirectory="/var/lib/rsyslog"</fileline>
            <fileline lineNumber="26">GLB_C_RSYSLOG_ActionFileDefaultTemplate="RSYSLOG_TraditionalFileFormat"</fileline>
            <fileline lineNumber="27">GLB_C_RSYSLOG_IncludeConfig="/etc/rsyslog.d/*.conf"</fileline>
            <fileline lineNumber="28">GLB_C_RSYSLOG_OmitLocalLogging="on"</fileline>
            <fileline lineNumber="29">GLB_C_RSYSLOG_IMJournalStateFile="imjournal.state"</fileline>
            <fileline lineNumber="30">GLB_C_RSYSLOG_Messages="*.info;mail.none;authpriv.none;cron.none                ${GLB_P_ROOT_LOG_DIR}/messages"</fileline>
            <fileline lineNumber="31">GLB_C_RSYSLOG_Secure="authpriv.*                                              ${GLB_P_ROOT_LOG_DIR}/secure"</fileline>
            <fileline lineNumber="32">GLB_C_RSYSLOG_MAil="mail.*                                                  -${GLB_P_ROOT_LOG_DIR}/maillog"</fileline>
            <fileline lineNumber="33">GLB_C_RSYSLOG_Cron="cron.*                                                  ${GLB_P_ROOT_LOG_DIR}/cron"</fileline>
            <fileline lineNumber="34">GLB_C_RSYSLOG_Emerge="*.emerg                                                 :omusrmsg:*"</fileline>
            <fileline lineNumber="35">GLB_C_RSYSLOG_Spooler="uucp,news.crit                                          ${GLB_P_ROOT_LOG_DIR}/spooler"</fileline>
            <fileline lineNumber="36">GLB_C_RSYSLOG_Boot="local7.*                                                ${GLB_P_ROOT_LOG_DIR}/boot.log"</fileline>
            <fileline lineNumber="37" />
            <fileline lineNumber="38" />
            <fileline lineNumber="39">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/redis.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># redis.cnf                                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 27/08/2022                                                  #</fileline>
            <fileline lineNumber="5"># Support mail  : doraken@doraken.net                                         #</fileline>
            <fileline lineNumber="6"># Author        : Arnaud Crampet                                              #</fileline>
            <fileline lineNumber="7">#                                                                             #</fileline>
            <fileline lineNumber="8"># Subject : This file containe all genrics vars used in for redis in CAST     #</fileline>
            <fileline lineNumber="9">#                                                                             #</fileline>
            <fileline lineNumber="10">###############################################################################</fileline>
            <fileline lineNumber="11">####</fileline>
            <fileline lineNumber="12"># INFO</fileline>
            <fileline lineNumber="13" />
            <fileline lineNumber="14">GLB_CP_REDIS_SERVERPort="6379"</fileline>
            <fileline lineNumber="15">GLB_CP_REDIS_SERVERHost="127.0.0.1"</fileline>
            <fileline lineNumber="16">GLB_CP_REDIS_SERVERDb="0"</fileline>
            <fileline lineNumber="17">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/azure.cnf</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash</fileline>
            <fileline lineNumber="2">#############</fileline>
            <fileline lineNumber="3"># Author  :  Arnaud Crampet </fileline>
            <fileline lineNumber="4"># Date    :  25/06/2024</fileline>
            <fileline lineNumber="5"># Determine the current directory of the script</fileline>
            <fileline lineNumber="6" />
            <fileline lineNumber="7"># Global Variables</fileline>
            <fileline lineNumber="8">subscriptionId="Dummy"</fileline>
            <fileline lineNumber="9">location="francecentral"</fileline>
            <fileline lineNumber="10">infra_organization="Dummy"</fileline>
            <fileline lineNumber="11">application_organization="Dummy"</fileline>
            <fileline lineNumber="12" />
            <fileline lineNumber="13" />
            <fileline lineNumber="14">GIT_SSH_URL="ssh.dev.azure.com"</fileline>
            <fileline lineNumber="15">GIT_GLB_ORGANISATION="Dummy"</fileline>
            <fileline lineNumber="16">GIT_GLB_PROJECT="azure-tenant"</fileline>
            <fileline lineNumber="17">GIT_HTTPS_URL="https://${GIT_GLB_ORGANISATION}@dev.azure.com/${GIT_GLB_ORGANISATION}/${GIT_GLB_PROJECT}/_git/"</fileline>
            <fileline lineNumber="18">organization=https://dev.azure.com/${GIT_GLB_ORGANISATION} </fileline>
            <fileline lineNumber="19" />
            <fileline lineNumber="20">function show_actual_azure_config ()</fileline>
            <fileline lineNumber="21">{</fileline>
            <fileline lineNumber="22">printf "\n \n"</fileline>
            <fileline lineNumber="23">printf "#----------------------------------------------------------------------------------------------#\n"</fileline>
            <fileline lineNumber="24">printf "|------                              azure configuration :                              -------|\n"</fileline>
            <fileline lineNumber="25">printf "#----------------------------------------------------------------------------------------------#\n" </fileline>
            <fileline lineNumber="26">printf "${GLB_PRINTCOL_4}" "default subscriptionIdset to" ": [" "${subscriptionId}" "]"</fileline>
            <fileline lineNumber="27">printf "${GLB_PRINTCOL_4}" "default location set to" ": [" "${location}" "]"</fileline>
            <fileline lineNumber="28">printf "${GLB_PRINTCOL_4}" "default infra organization  set to" ": [" "${infra_organization}" "]"</fileline>
            <fileline lineNumber="29">printf "${GLB_PRINTCOL_4}" "default applicaiton organization set to" ": [" "${application_organization}" "]"</fileline>
            <fileline lineNumber="30">printf "#----------------------------------------------------------------------------------------------#\n"</fileline>
            <fileline lineNumber="31">printf "\n \n"</fileline>
            <fileline lineNumber="32">}</fileline>
            <fileline lineNumber="33" />
            <fileline lineNumber="34" />
            <fileline lineNumber="35" />
            <fileline lineNumber="36">CODE_APPLI=myapp</fileline>
            <fileline lineNumber="37">ENV=prd</fileline>
            <fileline lineNumber="38">LOCALISATION=fc</fileline>
            <fileline lineNumber="39" />
            <fileline lineNumber="40">COUNTRIES["France Central"]="fc"</fileline>
            <fileline lineNumber="41">COUNTRIES["Australia East"]="ae"</fileline>
            <fileline lineNumber="42">COUNTRIES["Brazil South"]="bs"</fileline>
            <fileline lineNumber="43">COUNTRIES["Canada Central"]="cc"</fileline>
            <fileline lineNumber="44">COUNTRIES["Central India"]="ci"</fileline>
            <fileline lineNumber="45">COUNTRIES["Central US"]="cu"</fileline>
            <fileline lineNumber="46">COUNTRIES["East Asia"]="ea"</fileline>
            <fileline lineNumber="47">COUNTRIES["East US"]="eu"</fileline>
            <fileline lineNumber="48">COUNTRIES["France Central"]="fc"</fileline>
            <fileline lineNumber="49">COUNTRIES["Germany West Central"]="gwc"</fileline>
            <fileline lineNumber="50">COUNTRIES["Israel Central"]="ic"</fileline>
            <fileline lineNumber="51">COUNTRIES["Italy North"]="in"</fileline>
            <fileline lineNumber="52">COUNTRIES["Japan East"]="je"</fileline>
            <fileline lineNumber="53">COUNTRIES["Korea Central"]="kc"</fileline>
            <fileline lineNumber="54">COUNTRIES["Mexico Central"]="mc"</fileline>
            <fileline lineNumber="55">COUNTRIES["North Europe"]="ne"</fileline>
            <fileline lineNumber="56">COUNTRIES["Norway East"]="ne"</fileline>
            <fileline lineNumber="57">COUNTRIES["Poland Central"]="pc"</fileline>
            <fileline lineNumber="58">COUNTRIES["Qatar Central"]="qc"</fileline>
            <fileline lineNumber="59">COUNTRIES["South Africa North"]="san"</fileline>
            <fileline lineNumber="60">COUNTRIES["South Central US"]="scu"</fileline>
            <fileline lineNumber="61">COUNTRIES["Southeast Asia"]="sea"</fileline>
            <fileline lineNumber="62">COUNTRIES["Spain Central"]="sc"</fileline>
            <fileline lineNumber="63">COUNTRIES["Sweden Central"]="sc"</fileline>
            <fileline lineNumber="64">COUNTRIES["Switzerland North"]="sn"</fileline>
            <fileline lineNumber="65">COUNTRIES["UAE North"]="uan"</fileline>
            <fileline lineNumber="66">COUNTRIES["UK South"]="uks"</fileline>
            <fileline lineNumber="67">COUNTRIES["West Europe"]="we"</fileline>
            <fileline lineNumber="68">COUNTRIES["West US 2"]="wu2"</fileline>
            <fileline lineNumber="69">COUNTRIES["West US 3"]="wu3"</fileline>
            <fileline lineNumber="70" />
            <fileline lineNumber="71" />
            <fileline lineNumber="72">AZURE_OBJECTS["Active Directory"]="ad"</fileline>
            <fileline lineNumber="73">AZURE_OBJECTS["Anti-Virus, Anti-Spam"]="av"</fileline>
            <fileline lineNumber="74">AZURE_OBJECTS["Application Security Group"]="as"</fileline>
            <fileline lineNumber="75">AZURE_OBJECTS["Application Server"]="ap"</fileline>
            <fileline lineNumber="76">AZURE_OBJECTS["Archivage, archive solution"]="ar"</fileline>
            <fileline lineNumber="77">AZURE_OBJECTS["Azure Application Gateway"]="ag"</fileline>
            <fileline lineNumber="78">AZURE_OBJECTS["Backup"]="bk"</fileline>
            <fileline lineNumber="79">AZURE_OBJECTS["Batch server, ETL"]="bt"</fileline>
            <fileline lineNumber="80">AZURE_OBJECTS["Connection"]="cn"</fileline>
            <fileline lineNumber="81">AZURE_OBJECTS["DB Server"]="db"</fileline>
            <fileline lineNumber="82">AZURE_OBJECTS["Disk"]="ok"</fileline>
            <fileline lineNumber="83">AZURE_OBJECTS["External Load Balancer"]="el"</fileline>
            <fileline lineNumber="84">AZURE_OBJECTS["ExpressRoute Circuit"]="er"</fileline>
            <fileline lineNumber="85">AZURE_OBJECTS["Filer, files server, NAS"]="fs"</fileline>
            <fileline lineNumber="86">AZURE_OBJECTS["Firewall service"]="fw"</fileline>
            <fileline lineNumber="87">AZURE_OBJECTS["FTP service, SFTP"]="ft"</fileline>
            <fileline lineNumber="88">AZURE_OBJECTS["Gateway"]="gw"</fileline>
            <fileline lineNumber="89">AZURE_OBJECTS["Image OS"]="io"</fileline>
            <fileline lineNumber="90">AZURE_OBJECTS["Internal Load Balancer"]="il"</fileline>
            <fileline lineNumber="91">AZURE_OBJECTS["Key Vault"]="kv"</fileline>
            <fileline lineNumber="92">AZURE_OBJECTS["License server"]="ls"</fileline>
            <fileline lineNumber="93">AZURE_OBJECTS["Load Balancer"]="lb"</fileline>
            <fileline lineNumber="94">AZURE_OBJECTS["Management Groups"]="mg"</fileline>
            <fileline lineNumber="95">AZURE_OBJECTS["Master"]="ma"</fileline>
            <fileline lineNumber="96">AZURE_OBJECTS["Monitoring server"]="ms"</fileline>
            <fileline lineNumber="97">AZURE_OBJECTS["Network Interface"]="ni"</fileline>
            <fileline lineNumber="98">AZURE_OBJECTS["Network Security Group"]="ns"</fileline>
            <fileline lineNumber="99">AZURE_OBJECTS["Network Security Group Rule"]="nr"</fileline>
            <fileline lineNumber="100">AZURE_OBJECTS["Orchestration"]="or"</fileline>
            <fileline lineNumber="101">AZURE_OBJECTS["Patching, Update, fixing"]="up"</fileline>
            <fileline lineNumber="102">AZURE_OBJECTS["Peering"]="pe"</fileline>
            <fileline lineNumber="103">AZURE_OBJECTS["Public IP Address"]="pi"</fileline>
            <fileline lineNumber="104">AZURE_OBJECTS["Proxy"]="pr"</fileline>
            <fileline lineNumber="105">AZURE_OBJECTS["RDP, PMAD, srv de rebond"]="rd"</fileline>
            <fileline lineNumber="106">AZURE_OBJECTS["Recovery Service Vault"]="rv"</fileline>
            <fileline lineNumber="107">AZURE_OBJECTS["Resource Group"]="rg"</fileline>
            <fileline lineNumber="108">AZURE_OBJECTS["Route Table"]="rt"</fileline>
            <fileline lineNumber="109">AZURE_OBJECTS["Scheduler server"]="sc"</fileline>
            <fileline lineNumber="110">AZURE_OBJECTS["Security for server, audit, compliance"]="ss"</fileline>
            <fileline lineNumber="111">AZURE_OBJECTS["SMTP"]="sm"</fileline>
            <fileline lineNumber="112">AZURE_OBJECTS["Storage"]="st"</fileline>
            <fileline lineNumber="113">AZURE_OBJECTS["Storage Account"]="sa"</fileline>
            <fileline lineNumber="114">AZURE_OBJECTS["Subnet"]="sn"</fileline>
            <fileline lineNumber="115">AZURE_OBJECTS["Traffic Manager Profile"]="tm"</fileline>
            <fileline lineNumber="116">AZURE_OBJECTS["Virtual Network"]="vn"</fileline>
            <fileline lineNumber="117">AZURE_OBJECTS["Web Server"]="ws"</fileline>
            <fileline lineNumber="118">AZURE_OBJECTS["Zone DNS interne"]="di"</fileline>
            <fileline lineNumber="119">AZURE_OBJECTS["Zone DNS public"]="dp"</fileline>
            <fileline lineNumber="120" />
            <fileline lineNumber="121" />
            <fileline lineNumber="122">CATEGORIES["Active Directory"]="se"</fileline>
            <fileline lineNumber="123">CATEGORIES["Anti-Virus, Anti-Spam"]="oa"</fileline>
            <fileline lineNumber="124">CATEGORIES["Application Security Group"]="se"</fileline>
            <fileline lineNumber="125">CATEGORIES["Application Server"]="oa"</fileline>
            <fileline lineNumber="126">CATEGORIES["Archivage, archive solution"]="oa"</fileline>
            <fileline lineNumber="127">CATEGORIES["Azure Application Gateway"]="ne"</fileline>
            <fileline lineNumber="128">CATEGORIES["Backup"]="st"</fileline>
            <fileline lineNumber="129">CATEGORIES["Batch server, ETL"]="oa"</fileline>
            <fileline lineNumber="130">CATEGORIES["Connection"]="ne"</fileline>
            <fileline lineNumber="131">CATEGORIES["DB Server"]="oa"</fileline>
            <fileline lineNumber="132">CATEGORIES["Disk"]="st"</fileline>
            <fileline lineNumber="133">CATEGORIES["External Load Balancer"]="ne"</fileline>
            <fileline lineNumber="134">CATEGORIES["ExpressRoute Circuit"]="ne"</fileline>
            <fileline lineNumber="135">CATEGORIES["Filer, files server, NAS"]="st"</fileline>
            <fileline lineNumber="136">CATEGORIES["Firewall service"]="ne"</fileline>
            <fileline lineNumber="137">CATEGORIES["FTP service, SFTP"]="oa"</fileline>
            <fileline lineNumber="138">CATEGORIES["Gateway"]="ne"</fileline>
            <fileline lineNumber="139">CATEGORIES["Image OS"]="st"</fileline>
            <fileline lineNumber="140">CATEGORIES["Internal Load Balancer"]="ne"</fileline>
            <fileline lineNumber="141">CATEGORIES["Key Vault"]="st"</fileline>
            <fileline lineNumber="142">CATEGORIES["License server"]="oa"</fileline>
            <fileline lineNumber="143">CATEGORIES["Load Balancer"]="ne"</fileline>
            <fileline lineNumber="144">CATEGORIES["Management Groups"]="og"</fileline>
            <fileline lineNumber="145">CATEGORIES["Master"]="oa"</fileline>
            <fileline lineNumber="146">CATEGORIES["Monitoring server"]="oa"</fileline>
            <fileline lineNumber="147">CATEGORIES["Network Interface"]="ne"</fileline>
            <fileline lineNumber="148">CATEGORIES["Network Security Group"]="se"</fileline>
            <fileline lineNumber="149">CATEGORIES["Network Security Group Rule"]="se"</fileline>
            <fileline lineNumber="150">CATEGORIES["Orchestration"]="oa"</fileline>
            <fileline lineNumber="151">CATEGORIES["Patching, Update, fixing"]="se"</fileline>
            <fileline lineNumber="152">CATEGORIES["Peering"]="ne"</fileline>
            <fileline lineNumber="153">CATEGORIES["Public IP Address"]="ne"</fileline>
            <fileline lineNumber="154">CATEGORIES["Proxy"]="ne"</fileline>
            <fileline lineNumber="155">CATEGORIES["RDP, PMAD, srv de rebond"]="se"</fileline>
            <fileline lineNumber="156">CATEGORIES["Recovery Service Vault"]="st"</fileline>
            <fileline lineNumber="157">CATEGORIES["Resource Group"]="og"</fileline>
            <fileline lineNumber="158">CATEGORIES["Route Table"]="ne"</fileline>
            <fileline lineNumber="159">CATEGORIES["Scheduler server"]="oa"</fileline>
            <fileline lineNumber="160">CATEGORIES["Security for server, audit, compliance"]="se"</fileline>
            <fileline lineNumber="161">CATEGORIES["SMTP"]="oa"</fileline>
            <fileline lineNumber="162">CATEGORIES["Storage"]="st"</fileline>
            <fileline lineNumber="163">CATEGORIES["Storage Account"]="st"</fileline>
            <fileline lineNumber="164">CATEGORIES["Subnet"]="ne"</fileline>
            <fileline lineNumber="165">CATEGORIES["Traffic Manager Profile"]="ne"</fileline>
            <fileline lineNumber="166">CATEGORIES["Virtual Network"]="ne"</fileline>
            <fileline lineNumber="167">CATEGORIES["Web Server"]="oa"</fileline>
            <fileline lineNumber="168">CATEGORIES["Zone DNS interne"]="ne"</fileline>
            <fileline lineNumber="169">CATEGORIES["Zone DNS public"]="ne"</fileline>
            <fileline lineNumber="170" />
            <fileline lineNumber="171" />
            <fileline lineNumber="172">ENVIRONMENTS_AZ["development environment"]="dev"</fileline>
            <fileline lineNumber="173">ENVIRONMENTS_AZ["qualification environment"]="qua"</fileline>
            <fileline lineNumber="174">ENVIRONMENTS_AZ["integration environment"]="int"</fileline>
            <fileline lineNumber="175">ENVIRONMENTS_AZ["testing environment"]="rec"</fileline>
            <fileline lineNumber="176">ENVIRONMENTS_AZ["pre-production"]="ppr"</fileline>
            <fileline lineNumber="177">ENVIRONMENTS_AZ["production environment"]="prd"</fileline>
            <fileline lineNumber="178">ENVIRONMENTS_AZ["training environment"]="for"</fileline>
            <fileline lineNumber="179">ENVIRONMENTS_AZ["maintenance environment"]="mnt"</fileline>
            <fileline lineNumber="180" />
            <fileline lineNumber="181" />
            <fileline lineNumber="182" />
            <fileline lineNumber="183">export ENVIRONMENTS_AZ</fileline>
            <fileline lineNumber="184" />
            <fileline lineNumber="185">show_actual_azure_config</fileline>
            <fileline lineNumber="186" />
        </content>
    </file>
    <file>
        <filename>./conf/SubConf/SSH_Params.cnf</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># SSH_params.cnf                                       Version : 1.1.2.5      #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 21/02/2016                                                  #</fileline>
            <fileline lineNumber="5"># Team          : Only me after all                                           #</fileline>
            <fileline lineNumber="6"># Support mail  : doraken@doraken.net                                          #</fileline>
            <fileline lineNumber="7"># Author        : Arnaud Crampet                                              #</fileline>
            <fileline lineNumber="8">#                                                                             #</fileline>
            <fileline lineNumber="9"># Subject : This file containe all sshd configuration parameters              #</fileline>
            <fileline lineNumber="10">#                                                                             #</fileline>
            <fileline lineNumber="11">###############################################################################</fileline>
            <fileline lineNumber="12">####</fileline>
            <fileline lineNumber="13"># INFO</fileline>
            <fileline lineNumber="14" />
            <fileline lineNumber="15">###############################################################################</fileline>
            <fileline lineNumber="16">####</fileline>
            <fileline lineNumber="17"># Generics variables</fileline>
            <fileline lineNumber="18"># Here you find all generic information variable used for scripts</fileline>
            <fileline lineNumber="19"># all theses parameters are standadized</fileline>
            <fileline lineNumber="20">#|#</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">GLB_C_SSHD_Port="22"</fileline>
            <fileline lineNumber="24">GLB_C_SSHD_AddressFamily="any"</fileline>
            <fileline lineNumber="25">GLB_C_SSHD_Address="0.0.0.0"</fileline>
            <fileline lineNumber="26">GLB_C_SSHD_Protocol="2"</fileline>
            <fileline lineNumber="27">GLB_C_SSHD_HostKey="/etc/ssh/ssh_host_rsa_key"</fileline>
            <fileline lineNumber="28">GLB_C_SSHD_HostKey="/etc/ssh/ssh_host_ecdsa_key"</fileline>
            <fileline lineNumber="29">GLB_C_SSHD_HostKey="/etc/ssh/ssh_host_ed25519_key"</fileline>
            <fileline lineNumber="30">GLB_C_SSHD_SyslogFacility="AUTHPRIV"</fileline>
            <fileline lineNumber="31">GLB_C_SSHD_LogLevel="INFO"</fileline>
            <fileline lineNumber="32">GLB_C_SSHD_LoginGraceTime="2m"</fileline>
            <fileline lineNumber="33">GLB_C_SSHD_PermitRootLogin="no"</fileline>
            <fileline lineNumber="34">GLB_C_SSHD_StrictModes="yes"</fileline>
            <fileline lineNumber="35">GLB_C_SSHD_MaxAuthTries="6"</fileline>
            <fileline lineNumber="36">GLB_C_SSHD_MaxSessions="10"</fileline>
            <fileline lineNumber="37">GLB_C_SSHD_RSAAuthentication="No"</fileline>
            <fileline lineNumber="38">GLB_C_SSHD_PubkeyAuthentication="yes"</fileline>
            <fileline lineNumber="39">GLB_C_SSHD_AuthorizedKeysFile=".ssh/authorized_keys"</fileline>
            <fileline lineNumber="40">GLB_C_SSHD_RhostsRSAAuthentication="no"</fileline>
            <fileline lineNumber="41">GLB_C_SSHD_HostbasedAuthentication="no"</fileline>
            <fileline lineNumber="42">GLB_C_SSHD_PasswordAuthentication="no"</fileline>
            <fileline lineNumber="43">GLB_C_SSHD_PermitEmptyPasswords="no"</fileline>
            <fileline lineNumber="44">GLB_C_SSHD_ChallengeResponseAuthentication="no"</fileline>
            <fileline lineNumber="45">GLB_C_SSHD_UsePAM="yes"</fileline>
            <fileline lineNumber="46">GLB_C_SSHD_AllowAgentForwarding="yes"</fileline>
            <fileline lineNumber="47">GLB_C_SSHD_AllowTcpForwarding="yes"</fileline>
            <fileline lineNumber="48">GLB_C_SSHD_X11Forwarding="yes"</fileline>
            <fileline lineNumber="49">GLB_C_SSHD_X11DisplayOffset="0"</fileline>
            <fileline lineNumber="50">GLB_C_SSHD_X11UseLocalhost="yes"</fileline>
            <fileline lineNumber="51">GLB_C_SSHD_PermitTTY="yes"</fileline>
            <fileline lineNumber="52">GLB_C_SSHD_PrintMotd="yes"</fileline>
            <fileline lineNumber="53">GLB_C_SSHD_PrintLastLog="yes"</fileline>
            <fileline lineNumber="54">GLB_C_SSHD_TCPKeepAlive="yes"</fileline>
            <fileline lineNumber="55">GLB_C_SSHD_UseLogin="no"</fileline>
            <fileline lineNumber="56">GLB_C_SSHD_UsePrivilegeSeparation="sandbox"   </fileline>
            <fileline lineNumber="57">GLB_C_SSHD_PermitUserEnvironment="no"</fileline>
            <fileline lineNumber="58">GLB_C_SSHD_PidFile="/var/run/sshd.pid"</fileline>
            <fileline lineNumber="59">GLB_C_SSHD_PermitTunnel="no"</fileline>
            <fileline lineNumber="60">GLB_C_SSHD_AcceptEnv="LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES"</fileline>
            <fileline lineNumber="61">GLB_C_SSHD_AcceptEnv="LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT"</fileline>
            <fileline lineNumber="62">GLB_C_SSHD_AcceptEnv="LC_IDENTIFICATION LC_ALL LANGUAGE"</fileline>
            <fileline lineNumber="63">GLB_C_SSHD_AcceptEnv="XMODIFIERS"</fileline>
            <fileline lineNumber="64">GLB_C_SSHD_Subsystem="sftp    /usr/libexec/openssh/sftp-server"</fileline>
            <fileline lineNumber="65" />
            <fileline lineNumber="66" />
            <fileline lineNumber="67">#|# used for control sourcing keep it a last line </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/control_lib.sh</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># Control.lib                                          Version : 1.1.2.3      #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 25/11/2006                                                  #</fileline>
            <fileline lineNumber="5"># Team          : Only me after all                                           #</fileline>
            <fileline lineNumber="6"># Support mail  : doraken@doraken.net                                          #</fileline>
            <fileline lineNumber="7"># Author        : Arnaud Crampet                                              #</fileline>
            <fileline lineNumber="8">#                                                                             #</fileline>
            <fileline lineNumber="9"># Subject : This library provide base control and error messaging runtime     #</fileline>
            <fileline lineNumber="10">#                                                                             #</fileline>
            <fileline lineNumber="11">###############################################################################</fileline>
            <fileline lineNumber="12">####</fileline>
            <fileline lineNumber="13"># INFO</fileline>
            <fileline lineNumber="14" />
            <fileline lineNumber="15" />
            <fileline lineNumber="16" />
            <fileline lineNumber="17">function CTRL_Stop_point</fileline>
            <fileline lineNumber="18">{</fileline>
            <fileline lineNumber="19">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="20">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="21">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="22">######################################################</fileline>
            <fileline lineNumber="23">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="24" />
            <fileline lineNumber="25" />
            <fileline lineNumber="26">if [ "${Can_Stop_level}" = "${Stop_Level}" ]</fileline>
            <fileline lineNumber="27">   then</fileline>
            <fileline lineNumber="28">        MSG_DISPLAY "info" "0" "Stop requested by configuration : Stoped at ${Stop_Level} "</fileline>
            <fileline lineNumber="29">        exit 0</fileline>
            <fileline lineNumber="30">fi</fileline>
            <fileline lineNumber="31">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="32">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="33">####################################################</fileline>
            <fileline lineNumber="34">}</fileline>
            <fileline lineNumber="35" />
            <fileline lineNumber="36">################## Control execution Runtime</fileline>
            <fileline lineNumber="37" />
            <fileline lineNumber="38">function CTRL_Result_func</fileline>
            <fileline lineNumber="39">{</fileline>
            <fileline lineNumber="40">#|# Var to set  :</fileline>
            <fileline lineNumber="41">#|# CRF_Result_Action             : Use this var to set The las action returne code         ( Mandatory )</fileline>
            <fileline lineNumber="42">#|# CRF_Generic_Base_MSG          : use this var to set base message of control             ( Mandatory )</fileline>
            <fileline lineNumber="43">#|# CRF_Generic_Base_MSG_ERR      : Use this var to set additional iformation on error      ( Mandatory )</fileline>
            <fileline lineNumber="44">#|# CRF_Result_ERR_Level          : Use this var to set the level of test severity on fail  ( Mandatory )</fileline>
            <fileline lineNumber="45">#|# CRF_Action_ONFAIL             : Use this var to set and action to do after CTRL fail    (  OPTIONAL )</fileline>
            <fileline lineNumber="46">#|# CRF_Action_ONOK               : Use this var to set and action to do after CTRL is OK   (  OPTIONAL )</fileline>
            <fileline lineNumber="47">#|# ${1}                          : Use this var to set [ CRF_Result_Action ]</fileline>
            <fileline lineNumber="48">#|# ${2}                          : Use this var to set [ CRF_Generic_Base_MSG ]</fileline>
            <fileline lineNumber="49">#|# ${3}                          : Use this var to set [ CRF_Generic_Base_MSG_ERR ]</fileline>
            <fileline lineNumber="50">#|# ${4}                          : Use this var to set [ CRF_Result_ERR_Level ]</fileline>
            <fileline lineNumber="51">#|# ${5}                          : Use this var to set [ CRF_Action_ONFAIL ]</fileline>
            <fileline lineNumber="52">#|# ${6}                          : Use this var to set [ CRF_Action_ONOK ]</fileline>
            <fileline lineNumber="53">#|#</fileline>
            <fileline lineNumber="54">#|# Base usage  : CTRL_Result_func "${?}" "Generic_Base_Param_MSG" "Generic_Base_Param_MSG_ERR" "Result_ERR_Level" "On fail action" "on success action"</fileline>
            <fileline lineNumber="55">#|#</fileline>
            <fileline lineNumber="56">#|# Description : This function is used to check result of a past action and choose action</fileline>
            <fileline lineNumber="57">#|#</fileline>
            <fileline lineNumber="58">#|# Send Back   : Message / Exit / function</fileline>
            <fileline lineNumber="59">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="60">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="61">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="62">######################################################</fileline>
            <fileline lineNumber="63">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="64" />
            <fileline lineNumber="65" />
            <fileline lineNumber="66">local CRF_Result_Action="${1}"</fileline>
            <fileline lineNumber="67">local RF_Generic_Base_MSG="${2}"</fileline>
            <fileline lineNumber="68">local CRF_Generic_Base_MSG_ERR="${3}"</fileline>
            <fileline lineNumber="69">local CRF_Result_ERR_Level="${4}"</fileline>
            <fileline lineNumber="70">local CRF_Action_ONFAIL="${5}"</fileline>
            <fileline lineNumber="71">local CRF_Action_ONOK="${6}"</fileline>
            <fileline lineNumber="72" />
            <fileline lineNumber="73" />
            <fileline lineNumber="74">if [ "${CRF_Result_Action}" = "0" ]</fileline>
            <fileline lineNumber="75">   then</fileline>
            <fileline lineNumber="76">        MSG_DISPLAY "EdSMessage" "0" ""</fileline>
            <fileline lineNumber="77">        if ! [ -z "${CRF_Action_ONOK}" ]</fileline>
            <fileline lineNumber="78">              then</fileline>
            <fileline lineNumber="79">                  _Ido="${CRF_Action_ONOK}"</fileline>
            <fileline lineNumber="80">                  CRF_Action_ONOK=""</fileline>
            <fileline lineNumber="81">                  ${_Ido}</fileline>
            <fileline lineNumber="82">        fi</fileline>
            <fileline lineNumber="83">   else</fileline>
            <fileline lineNumber="84">        MSG_DISPLAY "EdEMessage" "1" "${CRF_Generic_Base_MSG} ${CRF_Generic_Base_MSG_ERR} [ ERROR  ] " "${CRF_Result_ERR_Level}"</fileline>
            <fileline lineNumber="85">        if ! [ -z "${CRF_Action_ONFAIL}" ]</fileline>
            <fileline lineNumber="86">              then</fileline>
            <fileline lineNumber="87">              	   _Ido="${CRF_Action_ONFAIL}"</fileline>
            <fileline lineNumber="88">              	   CRF_Action_ONFAIL=""    </fileline>
            <fileline lineNumber="89">                   ${_Ido}</fileline>
            <fileline lineNumber="90">        fi</fileline>
            <fileline lineNumber="91">fi</fileline>
            <fileline lineNumber="92">Generic_Base_Param_MSG_ERR=""</fileline>
            <fileline lineNumber="93">CRF_Generic_Base_MSG=""</fileline>
            <fileline lineNumber="94">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="95">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="96">####################################################</fileline>
            <fileline lineNumber="97">}</fileline>
            <fileline lineNumber="98" />
            <fileline lineNumber="99">function CTRL_Result_Echeck</fileline>
            <fileline lineNumber="100">{</fileline>
            <fileline lineNumber="101">#|# Var to set  :</fileline>
            <fileline lineNumber="102">#|# CRF_Result_Action             : Use this var to set The las action returne code         ( Mandatory )</fileline>
            <fileline lineNumber="103">#|# CRF_Result_ERR_Level          : Use this var to set the level of test severity on fail  ( Mandatory )</fileline>
            <fileline lineNumber="104">#|# CRF_Action_ONFAIL             : Use this var to set and action to do after CTRL fail    (  OPTIONAL )</fileline>
            <fileline lineNumber="105">#|# CRF_Action_ONOK               : Use this var to set and action to do after CTRL is OK   (  OPTIONAL )</fileline>
            <fileline lineNumber="106">#|# ${1}                          : Use this var to set [ CRF_Result_Action ]</fileline>
            <fileline lineNumber="107">#|# ${2}                          : Use this var to set [ CRF_Result_ERR_Level ]</fileline>
            <fileline lineNumber="108">#|# ${3}                          : Use this var to set [ CRF_Action_ONFAIL ]</fileline>
            <fileline lineNumber="109">#|# ${4}                          : Use this var to set [ CRF_Action_ONOK ]</fileline>
            <fileline lineNumber="110">#|#</fileline>
            <fileline lineNumber="111">#|# Base usage  : CTRL_Result_func "${?}" "Result_ERR_Level" "On fail action" "on success action"</fileline>
            <fileline lineNumber="112">#|#</fileline>
            <fileline lineNumber="113">#|# Description : This function is used to check result of a past action and choose action</fileline>
            <fileline lineNumber="114">#|#</fileline>
            <fileline lineNumber="115">#|# Send Back   : Message / Exit / function</fileline>
            <fileline lineNumber="116">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="117">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="118">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="119">######################################################</fileline>
            <fileline lineNumber="120">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="121" />
            <fileline lineNumber="122" />
            <fileline lineNumber="123">local CRF_Result_Action="${1}"</fileline>
            <fileline lineNumber="124">local CRF_Result_ERR_Level="${2}"</fileline>
            <fileline lineNumber="125">local CRF_Action_ONFAIL="${3}"</fileline>
            <fileline lineNumber="126">local CRF_Action_ONOK="${4}"</fileline>
            <fileline lineNumber="127" />
            <fileline lineNumber="128" />
            <fileline lineNumber="129">if [ "${CRF_Result_Action}" = "0" ]</fileline>
            <fileline lineNumber="130">   then</fileline>
            <fileline lineNumber="131">        MSG_DISPLAY "EdSMessage" "1" ""</fileline>
            <fileline lineNumber="132">        if ! [ -z "${CRF_Action_ONOK}" ]</fileline>
            <fileline lineNumber="133">              then</fileline>
            <fileline lineNumber="134">                  _Ido="${CRF_Action_ONOK}"</fileline>
            <fileline lineNumber="135">                  CRF_Action_ONOK=""</fileline>
            <fileline lineNumber="136">                  ${_Ido}</fileline>
            <fileline lineNumber="137">        fi</fileline>
            <fileline lineNumber="138">   else</fileline>
            <fileline lineNumber="139">         MSG_DISPLAY "EdEMessage" "1" ""</fileline>
            <fileline lineNumber="140">        if ! [ -z "${CRF_Action_ONFAIL}" ]</fileline>
            <fileline lineNumber="141">              then</fileline>
            <fileline lineNumber="142">              	   _Ido="${CRF_Action_ONFAIL}"</fileline>
            <fileline lineNumber="143">              	   CRF_Action_ONFAIL=""    </fileline>
            <fileline lineNumber="144">                   ${_Ido}</fileline>
            <fileline lineNumber="145">        fi</fileline>
            <fileline lineNumber="146">        if [ ${CRF_Result_ERR_Level} -gt 0 ] </fileline>
            <fileline lineNumber="147">            then </fileline>
            <fileline lineNumber="148">                  exit ${CRF_Result_ERR_Level}</fileline>
            <fileline lineNumber="149">        fi</fileline>
            <fileline lineNumber="150">fi</fileline>
            <fileline lineNumber="151">Generic_Base_Param_MSG_ERR=""</fileline>
            <fileline lineNumber="152">CRF_Generic_Base_MSG=""</fileline>
            <fileline lineNumber="153">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="154">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="155">####################################################</fileline>
            <fileline lineNumber="156">}</fileline>
            <fileline lineNumber="157" />
            <fileline lineNumber="158">###############  System check</fileline>
            <fileline lineNumber="159" />
            <fileline lineNumber="160">function CTRL_USER_EXIST</fileline>
            <fileline lineNumber="161">{</fileline>
            <fileline lineNumber="162">#|# _user_tc : Use this var to set the username to check</fileline>
            <fileline lineNumber="163">#|# Returne_Code_CTRL_USER_EXIST : This var is used to send back information of result of control</fileline>
            <fileline lineNumber="164">#|# Basic usage :</fileline>
            <fileline lineNumber="165">#|#               _user_tc="My_account"</fileline>
            <fileline lineNumber="166">#|#               CTRL_USER_EXIST</fileline>
            <fileline lineNumber="167">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="168">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="169">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="170">######################################################</fileline>
            <fileline lineNumber="171">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="172" />
            <fileline lineNumber="173">local _user_tc="${1}"</fileline>
            <fileline lineNumber="174" />
            <fileline lineNumber="175">MSG_DISPLAY "check" "0" "Seaching user ${_user_tc} "</fileline>
            <fileline lineNumber="176">USR_EXTRACTED=$(cat /etc/passwd | grep ${_user_tc} | awk -F: '{ print $1 }')</fileline>
            <fileline lineNumber="177">if [ "${USR_EXTRACTED}" = "${_user_tc}" ]</fileline>
            <fileline lineNumber="178">   then</fileline>
            <fileline lineNumber="179">        MSG_DISPLAY "EdSMEessage" "0"</fileline>
            <fileline lineNumber="180">        Returne_Code_CTRL_USER_EXIST="OK"</fileline>
            <fileline lineNumber="181">   else</fileline>
            <fileline lineNumber="182">        MSG_DISPLAY "EdEMessage" "1"</fileline>
            <fileline lineNumber="183">        Returne_Code_CTRL_USER_EXIST="NOK"</fileline>
            <fileline lineNumber="184">fi</fileline>
            <fileline lineNumber="185">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="186">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="187">####################################################</fileline>
            <fileline lineNumber="188">}</fileline>
            <fileline lineNumber="189" />
            <fileline lineNumber="190">function CTRL_GROUP_EXIST</fileline>
            <fileline lineNumber="191">{</fileline>
            <fileline lineNumber="192">#|# Base_Group_To_Check : Use this var to set the group name to check</fileline>
            <fileline lineNumber="193">#|# Returne_Code_CTRL_GROUP_EXIST : This var is used to send back information of result of control</fileline>
            <fileline lineNumber="194">#|# Basic usage :</fileline>
            <fileline lineNumber="195">#|#               _user_tc="My_group"</fileline>
            <fileline lineNumber="196">#|#               Base_Group_To_Check</fileline>
            <fileline lineNumber="197">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="198">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="199">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="200">######################################################</fileline>
            <fileline lineNumber="201">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="202" />
            <fileline lineNumber="203" />
            <fileline lineNumber="204">USR_EXTRACTED=$(cat /etc/group | grep ${Base_Group_To_Check} | awk -F: '{ print $1 }')</fileline>
            <fileline lineNumber="205">if [ "${USR_EXTRACTED}" = "${_user_tc}" ]</fileline>
            <fileline lineNumber="206">   then</fileline>
            <fileline lineNumber="207">                MSG_DISPLAY "debug" "0" "USER ${Base_Group_To_Check} : [ ALREADY PRESENT ] "</fileline>
            <fileline lineNumber="208">        Returne_Code_CTRL_GROUP_EXIST="OK"</fileline>
            <fileline lineNumber="209">   else</fileline>
            <fileline lineNumber="210">        MSG_DISPLAY "debug" "0" "USER ${Base_Group_To_Check} : [ NOT PRESENT ] "</fileline>
            <fileline lineNumber="211">        Returne_Code_CTRL_GROUP_EXIST="NOK"</fileline>
            <fileline lineNumber="212">fi</fileline>
            <fileline lineNumber="213" />
            <fileline lineNumber="214">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="215">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="216">####################################################</fileline>
            <fileline lineNumber="217">}</fileline>
            <fileline lineNumber="218" />
            <fileline lineNumber="219">function Empty_Var_Control</fileline>
            <fileline lineNumber="220">{</fileline>
            <fileline lineNumber="221">#|# Var to set  :</fileline>
            <fileline lineNumber="222">#|# EVC_Var_To_Test       : Use this var to set the path to test                                 ( Mandatory )</fileline>
            <fileline lineNumber="223">#|# EVC_Var_Name_To_Test  : Use this var to set the name of the var to test for display messages ( Mandatory )</fileline>
            <fileline lineNumber="224">#|# EVC_Level_Of_ERR      : Use this var to set the severity level of an empty vars              ( Mandatory )</fileline>
            <fileline lineNumber="225">#|# EVC_MSG_add           : Use this var to set complementary message                            ( OPTIONAL )</fileline>
            <fileline lineNumber="226">#|# EVC_Action_ONFAIL     : Use this var to set anb action to do after CTRL fail                 ( OPTIONAL )</fileline>
            <fileline lineNumber="227">#|# EVC_Action_ONOK       : Use this var to set anb action to do after CTRL is OK                ( OPTIONAL )</fileline>
            <fileline lineNumber="228">#|# ${1}                  : Used to set [ Base_Var_to_test ]</fileline>
            <fileline lineNumber="229">#|# ${2}                  : Used to set [ Base_Var_Name_To_Test ]</fileline>
            <fileline lineNumber="230">#|# ${3}                  : Used to set [ Level_Of_ERR ]</fileline>
            <fileline lineNumber="231">#|# ${4}                  : Used to set [ EVC_MSG_add ]</fileline>
            <fileline lineNumber="232">#|# ${5}                  : Used to set [ Action_ONFAIL ]</fileline>
            <fileline lineNumber="233">#|# ${6}                  : Used to set [ Action_ONOK ]</fileline>
            <fileline lineNumber="234">#|#</fileline>
            <fileline lineNumber="235">#|# Base usage  : Empty_Var_Control "My_VAR" "My_Var_Name" "Level_Of_ERR" [ "MSG_add" "Action_ONFAIL" "Action_ONOK" ]</fileline>
            <fileline lineNumber="236">#|#</fileline>
            <fileline lineNumber="237">#|# Description : This function is used to check if a var is empty</fileline>
            <fileline lineNumber="238">#|#</fileline>
            <fileline lineNumber="239">#|# Send Back   : Send back result of check</fileline>
            <fileline lineNumber="240">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="241">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="242">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="243">######################################################</fileline>
            <fileline lineNumber="244">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="245" />
            <fileline lineNumber="246" />
            <fileline lineNumber="247">local EVC_Var_To_Test="${1}"</fileline>
            <fileline lineNumber="248">local EVC_Var_Name_To_Test="${2}"</fileline>
            <fileline lineNumber="249">local EVC_Level_Of_ERR="${3:-1}"</fileline>
            <fileline lineNumber="250">local EVC_MSG_add="${4}"</fileline>
            <fileline lineNumber="251">local EVC_Action_ONFAIL="${5}"</fileline>
            <fileline lineNumber="252">local EVC_Action_ONOK="${6}"</fileline>
            <fileline lineNumber="253" />
            <fileline lineNumber="254">if [[ -z "${EVC_Var_To_Test}" ]]</fileline>
            <fileline lineNumber="255">   then</fileline>
            <fileline lineNumber="256">       if [[ ! -z "${EVC_Action_ONFAIL}" ]]</fileline>
            <fileline lineNumber="257">              then</fileline>
            <fileline lineNumber="258">                   MSG_DISPLAY "Info" "0" "current function path : [ ${Function_PATH} ] "</fileline>
            <fileline lineNumber="259">                   MSG_DISPLAY "check" "0" "Error variable ${EVC_Var_Name_To_Test} [ Not Set ]" </fileline>
            <fileline lineNumber="260">                   MSG_DISPLAY "EdWMessage" "0" "executing :  ${EVC_Action_ONFAIL}"</fileline>
            <fileline lineNumber="261">                   ${EVC_Action_ONFAIL}</fileline>
            <fileline lineNumber="262">              else</fileline>
            <fileline lineNumber="263">                   MSG_DISPLAY "Info" "0" "current function path : [ ${Function_PATH} ] "</fileline>
            <fileline lineNumber="264">                   MSG_DISPLAY "check" "0" "Error variable ${EVC_Var_Name_To_Test} [ Not Set ]" </fileline>
            <fileline lineNumber="265">                   MSG_DISPLAY "EdEMessage" "${EVC_Level_Of_ERR}" ""</fileline>
            <fileline lineNumber="266">           fi</fileline>
            <fileline lineNumber="267">   else</fileline>
            <fileline lineNumber="268">       MSG_DISPLAY "debug" "0" " Value of ${EVC_Var_Name_To_Test}  : [ Value is ${EVC_Var_To_Test} ]"</fileline>
            <fileline lineNumber="269">       if [[ ! -z "${EVC_Action_ONOK}" ]]</fileline>
            <fileline lineNumber="270">          then</fileline>
            <fileline lineNumber="271">              ${EVC_Action_ONOK}</fileline>
            <fileline lineNumber="272">       fi</fileline>
            <fileline lineNumber="273">fi</fileline>
            <fileline lineNumber="274">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="275">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="276">####################################################</fileline>
            <fileline lineNumber="277">}</fileline>
            <fileline lineNumber="278" />
            <fileline lineNumber="279">LibState="OK"</fileline>
        </content>
    </file>
    <file>
        <filename>./lib/doc/document_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 28/06/2024</fileline>
            <fileline lineNumber="4"># generic auto documentation from CAST </fileline>
            <fileline lineNumber="5" />
            <fileline lineNumber="6">function Get_all_function_names_to_document</fileline>
            <fileline lineNumber="7">{</fileline>
            <fileline lineNumber="8">#|#</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="11">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="12">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="13">######################################################</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">Do_file_remove "${Base_Catalog_function}" "" "" "0"</fileline>
            <fileline lineNumber="17">Do_file_remove "${Base_Catalog_function_depend}" "" "" "0"</fileline>
            <fileline lineNumber="18">Do_file_remove "${Base_Catalog_function_docs}" "" "" "0"</fileline>
            <fileline lineNumber="19">Do_file_remove "${Base_Catalog_function_TMP_dep}" "" "" "0"</fileline>
            <fileline lineNumber="20" />
            <fileline lineNumber="21">for libs in $(find  ${_local_lib_dir} -type f -name "*_lib.sh" ) </fileline>
            <fileline lineNumber="22">    do</fileline>
            <fileline lineNumber="23">       MSG_DISPLAY "info" "1" "Found Library file : [ ${libs} ]"</fileline>
            <fileline lineNumber="24">       File_Read "Get_all_function_core_to_document" &lt; ${libs}</fileline>
            <fileline lineNumber="25">done</fileline>
            <fileline lineNumber="26">Get_all_function_dep_to_document</fileline>
            <fileline lineNumber="27">#Do_document_catalogue_refine</fileline>
            <fileline lineNumber="28">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="29">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="30">####################################################</fileline>
            <fileline lineNumber="31">}</fileline>
            <fileline lineNumber="32" />
            <fileline lineNumber="33">function Get_all_function_core_to_document</fileline>
            <fileline lineNumber="34">{</fileline>
            <fileline lineNumber="35">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="36">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="37">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="38">######################################################</fileline>
            <fileline lineNumber="39">#MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="40" />
            <fileline lineNumber="41">local geted_item="${1}"</fileline>
            <fileline lineNumber="42">Part_Item="$( echo  "${geted_item}" | awk '{ print $1 }' )"</fileline>
            <fileline lineNumber="43" />
            <fileline lineNumber="44" />
            <fileline lineNumber="45" />
            <fileline lineNumber="46">case ${Part_Item} in</fileline>
            <fileline lineNumber="47">             function) Function_name="$( echo  "${geted_item}" | awk '{ print $2 }' )"</fileline>
            <fileline lineNumber="48">     	               echo  "Found function declaration : [ ${Function_name} ] "</fileline>
            <fileline lineNumber="49">     	               echo  "librairy;${libs};function;${Function_name}" &gt;&gt; ${Base_Catalog_function}</fileline>
            <fileline lineNumber="50">     	               ;;</fileline>
            <fileline lineNumber="51">                   \{) MSG_DISPLAY "debug" "0" "Start of function : [ ${Function_name} ]"</fileline>
            <fileline lineNumber="52">                       ;;</fileline>
            <fileline lineNumber="53">                   \}) MSG_DISPLAY "debug" "0" "End of function : [ ${Function_name} ]"</fileline>
            <fileline lineNumber="54">                       Function_name=""</fileline>
            <fileline lineNumber="55">                       ;;</fileline>
            <fileline lineNumber="56">               \#\|\#) if [ ! -z "${Function_name}" ]</fileline>
            <fileline lineNumber="57">                          then</fileline>
            <fileline lineNumber="58">                  	       geted_item="$( echo  ${geted_item} | awk -F '#' '{ print $3 }' )"</fileline>
            <fileline lineNumber="59">                           MSG_DISPLAY "debug" "0"   "Document : [  librairy;${libs};function;${functions_name};Document;${geted_item} ] "</fileline>
            <fileline lineNumber="60">                           echo  "librairy;${libs};function;${Function_name};Document;${geted_item}" &gt;&gt; ${Base_Catalog_function_docs}</fileline>
            <fileline lineNumber="61">                        fi</fileline>
            <fileline lineNumber="62">                        ;;</fileline>
            <fileline lineNumber="63">    Empty_Var_Control)  DGFC_EMPT_CTRL_CALL="$(echo  "${geted_item}" | awk '{ $6 }')"</fileline>
            <fileline lineNumber="64">                        if [ ! -z "${DGFC_EMPT_CTRL_CALL}" ]</fileline>
            <fileline lineNumber="65">                           then</fileline>
            <fileline lineNumber="66">                                MSG_DISPLAY "info"  "0" "Line of ${Function_name} : [ ${geted_item} ] "</fileline>
            <fileline lineNumber="67">                                MSG_DISPLAY "debug" "0" "first Element of line ${Function_name} : [ ${Part_Item} ] "</fileline>
            <fileline lineNumber="68">                                echo  "librairy;${libs};function;${Function_name};Item;${DGFC_EMPT_CTRL_CALL}" &gt;&gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="69">                        fi</fileline>
            <fileline lineNumber="70">                        DGFC_EMPT_CTRL_CALL="$(echo  "${geted_item}" | awk '{ $7 }')"</fileline>
            <fileline lineNumber="71">                        if [ ! -z "${DGFC_EMPT_CTRL_CALL}" ]</fileline>
            <fileline lineNumber="72">                           then</fileline>
            <fileline lineNumber="73">                                MSG_DISPLAY "info"  "0" "Line of ${Function_name} : [ ${geted_item} ] "</fileline>
            <fileline lineNumber="74">                                MSG_DISPLAY "debug" "0"   "first Element of line ${Function_name} : [ ${Part_Item} ] "</fileline>
            <fileline lineNumber="75">                                echo  "librairy;${libs};function;${Function_name};Item;${DGFC_EMPT_CTRL_CALL}" &gt;&gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="76">                        fi</fileline>
            <fileline lineNumber="77">                        ;;</fileline>
            <fileline lineNumber="78">                     *) if [ ! -z "${Function_name}" ]</fileline>
            <fileline lineNumber="79">                           then</fileline>
            <fileline lineNumber="80">                               MSG_DISPLAY "info"  "0"  "Line of ${Function_name} : [ ${geted_item} ] "</fileline>
            <fileline lineNumber="81">                               MSG_DISPLAY "debug" "0"   "first Element of line ${Function_name} : [ ${Part_Item} ] "</fileline>
            <fileline lineNumber="82">                               echo  "librairy;${libs};function;${Function_name};Item;${Part_Item}" &gt;&gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="83">                         fi</fileline>
            <fileline lineNumber="84">                         ;;</fileline>
            <fileline lineNumber="85">esac</fileline>
            <fileline lineNumber="86">geted_item=""</fileline>
            <fileline lineNumber="87" />
            <fileline lineNumber="88">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="89">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="90">####################################################</fileline>
            <fileline lineNumber="91">}</fileline>
            <fileline lineNumber="92" />
            <fileline lineNumber="93">function Get_all_function_dep_to_document</fileline>
            <fileline lineNumber="94">{</fileline>
            <fileline lineNumber="95">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="96">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="97">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="98">######################################################</fileline>
            <fileline lineNumber="99">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="100" />
            <fileline lineNumber="101" />
            <fileline lineNumber="102">document_filter_dep_tmp_cat</fileline>
            <fileline lineNumber="103" />
            <fileline lineNumber="104" />
            <fileline lineNumber="105">Number_Of_Func="$(cat ${Base_Catalog_function} | sort -u |wc -l)"</fileline>
            <fileline lineNumber="106">Set_system_counter "init"</fileline>
            <fileline lineNumber="107" />
            <fileline lineNumber="108">for DGD_get_line in $( cat ${Base_Catalog_function} | sort -u )</fileline>
            <fileline lineNumber="109">   do</fileline>
            <fileline lineNumber="110">   	 Set_system_counter "0"</fileline>
            <fileline lineNumber="111">   	 DGD_function_name="$( echo ${DGD_get_line} | awk -F ";" '{ print $4 }' )"</fileline>
            <fileline lineNumber="112">     DGD_Lib_name="$( echo ${DGD_get_line} | awk -F ";" '{ print $2 }' )"</fileline>
            <fileline lineNumber="113" />
            <fileline lineNumber="114">     PRINT_MSG=" Curent function : [ ${DGD_function_name} ]"</fileline>
            <fileline lineNumber="115">     MSG_DISPLAY "debug" "0" "${PRINT_MSG}"</fileline>
            <fileline lineNumber="116">     PRINT_MSG=" Current Lib     : [ ${DGD_Lib_name} ]"</fileline>
            <fileline lineNumber="117">     MSG_DISPLAY "debug" "0" "${PRINT_MSG}"</fileline>
            <fileline lineNumber="118">     PRINT_MSG=" Function Number : [ ${External_Return_Counter} of ${Number_Of_Func}  ] "</fileline>
            <fileline lineNumber="119">     for DGD_Check_Item in $( cat ${Base_Catalog_function_TMP_dep} | grep "${DGD_Lib_name}" | grep "function;${DGD_function_name}" | awk -F ";" '{ print $6 }' )</fileline>
            <fileline lineNumber="120">         do</fileline>
            <fileline lineNumber="121">         	echo  " Check item  [ ${DGD_Check_Item} ]"</fileline>
            <fileline lineNumber="122">         	if [ -z ${DGD_Check_Item} ]</fileline>
            <fileline lineNumber="123">         	   then</fileline>
            <fileline lineNumber="124">         	   	   echo  ""  &gt; /dev/null</fileline>
            <fileline lineNumber="125">               else</fileline>
            <fileline lineNumber="126">                   DGB_DEP="$(cat ${Base_Catalog_function} | grep "${DGD_Check_Item}$"  )"</fileline>
            <fileline lineNumber="127">         	            if [ -z "${DGB_DEP}" ]</fileline>
            <fileline lineNumber="128">         	               then</fileline>
            <fileline lineNumber="129">                               echo  "" &gt; /dev/null</fileline>
            <fileline lineNumber="130">                           else</fileline>
            <fileline lineNumber="131">         	   	               MSG_DISPLAY "info"  "0"  "Found dependence : [ ${DGB_DEP} ]"</fileline>
            <fileline lineNumber="132">                               Depend_On_Item="$(eval cat ${Base_Catalog_function} | grep -w ${DGB_DEP} )"</fileline>
            <fileline lineNumber="133">                               printable_Function_name="\"${Function_name}\""</fileline>
            <fileline lineNumber="134">                               printable_Depend_On_Item="\"${Depend_On_Item}\""</fileline>
            <fileline lineNumber="135">                               MSG_DISPLAY "debug" "0" "Function ${printable_Function_name} Depend on : [ ${printable_Depend_On_Item} ] "</fileline>
            <fileline lineNumber="136">                               FONT_set_Basic_Font</fileline>
            <fileline lineNumber="137">                               Depend_On_Item="dependonlib;$(echo ${Depend_On_Item} | awk -F\; '{ print $2}');dependonfunction;$(echo ${Depend_On_Item} | awk -F\; '{ print $4 }')"</fileline>
            <fileline lineNumber="138">                               echo  "         ${Depend_On_Item}         "</fileline>
            <fileline lineNumber="139">                               echo  "librairy;${DGD_Lib_name};function;${DGD_function_name};${Depend_On_Item}" &gt;&gt; ${Base_Catalog_function_depend}</fileline>
            <fileline lineNumber="140">                        fi</fileline>
            <fileline lineNumber="141" />
            <fileline lineNumber="142">            fi</fileline>
            <fileline lineNumber="143">      done</fileline>
            <fileline lineNumber="144">done</fileline>
            <fileline lineNumber="145" />
            <fileline lineNumber="146" />
            <fileline lineNumber="147">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="148">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="149">####################################################</fileline>
            <fileline lineNumber="150">}</fileline>
            <fileline lineNumber="151" />
            <fileline lineNumber="152" />
            <fileline lineNumber="153">function Get_all_function_call_to_document</fileline>
            <fileline lineNumber="154">{</fileline>
            <fileline lineNumber="155">#|# Internal_item_checked                              : Use this var to set the item to check if it s a function call</fileline>
            <fileline lineNumber="156">#|# ${1}                                               : Use this var to set Internal_item_checked</fileline>
            <fileline lineNumber="157">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="158">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="159">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="160">######################################################</fileline>
            <fileline lineNumber="161">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="162" />
            <fileline lineNumber="163">local Internal_item_checked="${1}"</fileline>
            <fileline lineNumber="164" />
            <fileline lineNumber="165">if [ -z "${Iterate_Get_all_function_call_to_document}" ]</fileline>
            <fileline lineNumber="166">   then</fileline>
            <fileline lineNumber="167">   	    date &gt; ${Base_Catalog_function_depend}</fileline>
            <fileline lineNumber="168">   	    Iterate_Get_all_function_call_to_document="1"</fileline>
            <fileline lineNumber="169">   else</fileline>
            <fileline lineNumber="170">        Iterate_Get_all_function_call_to_document="$( expr ${Iterate_Get_all_function_call_to_document} + 1 )"</fileline>
            <fileline lineNumber="171">fi</fileline>
            <fileline lineNumber="172">case ${Internal_item_checked} in</fileline>
            <fileline lineNumber="173">                "\#")  MSG_DISPLAY "info"  "0"  "current Item : [ ${Internal_item_checked} type : [ Comment ] ] "</fileline>
            <fileline lineNumber="174">                       ;;</fileline>
            <fileline lineNumber="175">                   *)  if [ ! -z "${Internal_item_checked}" ]</fileline>
            <fileline lineNumber="176">                          then</fileline>
            <fileline lineNumber="177">                              cat ${Base_Catalog_function} | awk -F\; '{ print $4}' | grep -w "${Internal_item_checked}" &gt; /dev/null</fileline>
            <fileline lineNumber="178">                              if [ "${?}" = "0" ]</fileline>
            <fileline lineNumber="179">                                 then</fileline>
            <fileline lineNumber="180">                                     Depend_On_Item="$(cat ${Base_Catalog_function} | grep -w "${Internal_item_checked}")"</fileline>
            <fileline lineNumber="181">                                     printable_Function_name="\"${Function_name}\""</fileline>
            <fileline lineNumber="182">                                     printable_Depend_On_Item="\"${Depend_On_Item}\""</fileline>
            <fileline lineNumber="183">                                     MSG_DISPLAY "debug" "0" "Function ${printable_Function_name} Depend on : [ ${printable_Depend_On_Item} ] "</fileline>
            <fileline lineNumber="184">                                     FONT_set_Basic_Font</fileline>
            <fileline lineNumber="185">                                     Depend_On_Item="$(echo ${Depend_On_Item} | awk -F\; '{ print "dependonlib;" $2 ";dependonfunction;" $4 }')"</fileline>
            <fileline lineNumber="186">                                     echo  "librairy;${libs};function;${functions_name};${Depend_On_Item}" &gt;&gt; ${Base_Catalog_function_depend}</fileline>
            <fileline lineNumber="187">                              fi</fileline>
            <fileline lineNumber="188">                       fi</fileline>
            <fileline lineNumber="189">                       ;;</fileline>
            <fileline lineNumber="190">esac</fileline>
            <fileline lineNumber="191" />
            <fileline lineNumber="192" />
            <fileline lineNumber="193">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="194">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="195">####################################################</fileline>
            <fileline lineNumber="196">}</fileline>
            <fileline lineNumber="197" />
            <fileline lineNumber="198">function Do_document_catalogue_refine</fileline>
            <fileline lineNumber="199">{</fileline>
            <fileline lineNumber="200">#|# Var to set  : None</fileline>
            <fileline lineNumber="201">#|#             : Use this var to set</fileline>
            <fileline lineNumber="202">#|#             : Use this var to set</fileline>
            <fileline lineNumber="203">#|# ${1}</fileline>
            <fileline lineNumber="204">#|# ${2}</fileline>
            <fileline lineNumber="205">#|#</fileline>
            <fileline lineNumber="206">#|# Base usage  : None</fileline>
            <fileline lineNumber="207">#|#</fileline>
            <fileline lineNumber="208">#|# Description : This function is used to refine and sort all catalogs</fileline>
            <fileline lineNumber="209">#|#</fileline>
            <fileline lineNumber="210">#|# Send Back   : None</fileline>
            <fileline lineNumber="211">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="212">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="213">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="214">######################################################</fileline>
            <fileline lineNumber="215">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="216" />
            <fileline lineNumber="217">Get_system_random_,number</fileline>
            <fileline lineNumber="218" />
            <fileline lineNumber="219">for items in $( cat ${Base_Dir_Scripts_CNF}/document.cnf | grep "Is_A_Catalog_FLAG" | awk -F "=" '{ print "\$\{" $1 "\}" }')</fileline>
            <fileline lineNumber="220">do</fileline>
            <fileline lineNumber="221">	eval echo  "${items}"</fileline>
            <fileline lineNumber="222">done</fileline>
            <fileline lineNumber="223" />
            <fileline lineNumber="224">echo  ${Catalogs_lst}</fileline>
            <fileline lineNumber="225" />
            <fileline lineNumber="226" />
            <fileline lineNumber="227" />
            <fileline lineNumber="228">Tmp_file_cat_refine="${Base_Dir_Scripts_Tmp}/${EXTERNAL_randomized_var}_func_dep_cat.cat"</fileline>
            <fileline lineNumber="229">cat ${Base_Catalog_function_depend} | sort -u &gt; ${Tmp_file_cat_refine}</fileline>
            <fileline lineNumber="230">cat ${Tmp_file_cat_refine} &gt; ${Base_Catalog_function_depend}</fileline>
            <fileline lineNumber="231" />
            <fileline lineNumber="232">Get_system_random_,number</fileline>
            <fileline lineNumber="233" />
            <fileline lineNumber="234">Tmp_file_cat_refine="${Base_Dir_Scripts_Tmp}/${EXTERNAL_randomized_var}_func_doc_cat.cat"</fileline>
            <fileline lineNumber="235">cat ${Base_Catalog_function_docs} | sort -u &gt; ${Tmp_file_cat_refine}</fileline>
            <fileline lineNumber="236">cat ${Tmp_file_cat_refine} &gt; ${Base_Catalog_function_docs}</fileline>
            <fileline lineNumber="237" />
            <fileline lineNumber="238">Do_document_catalogue_parsing</fileline>
            <fileline lineNumber="239">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="240">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="241">####################################################</fileline>
            <fileline lineNumber="242">}</fileline>
            <fileline lineNumber="243" />
            <fileline lineNumber="244">function Do_document_catalogue_parsing</fileline>
            <fileline lineNumber="245">{</fileline>
            <fileline lineNumber="246">#|# Var to set  : None</fileline>
            <fileline lineNumber="247">#|#             : Use this var to set</fileline>
            <fileline lineNumber="248">#|#             : Use this var to set</fileline>
            <fileline lineNumber="249">#|# ${1}</fileline>
            <fileline lineNumber="250">#|# ${2}</fileline>
            <fileline lineNumber="251">#|#</fileline>
            <fileline lineNumber="252">#|# Base usage  : None</fileline>
            <fileline lineNumber="253">#|#</fileline>
            <fileline lineNumber="254">#|# Description : This function is used to refine and sort all catalogs</fileline>
            <fileline lineNumber="255">#|#</fileline>
            <fileline lineNumber="256">#|# Send Back   : None</fileline>
            <fileline lineNumber="257">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="258">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="259">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="260">######################################################</fileline>
            <fileline lineNumber="261">for functions_names in $(cat ${Base_Catalog_function} | grep "librairy" )</fileline>
            <fileline lineNumber="262">    do</fileline>
            <fileline lineNumber="263">       echo  "1|${functions_names}" &gt;&gt; ${Base_Catalog_function_Final}</fileline>
            <fileline lineNumber="264">       for Dependances_functions in $(cat ${Base_Catalog_function_depend} | grep "^${functions_names}")</fileline>
            <fileline lineNumber="265">           do</fileline>
            <fileline lineNumber="266">           	 echo  "2|${Dependances_functions}" &gt;&gt; ${Base_Catalog_function_Final}</fileline>
            <fileline lineNumber="267">       done</fileline>
            <fileline lineNumber="268">       for Doc_functions in $(cat ${Base_Catalog_function_docs} | grep "^${functions_names}")</fileline>
            <fileline lineNumber="269">           do</fileline>
            <fileline lineNumber="270">           	 echo  "3|${Doc_functions}" &gt;&gt; ${Base_Catalog_function_Final}</fileline>
            <fileline lineNumber="271">       done</fileline>
            <fileline lineNumber="272">done</fileline>
            <fileline lineNumber="273">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="274">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="275">####################################################</fileline>
            <fileline lineNumber="276">}</fileline>
            <fileline lineNumber="277" />
            <fileline lineNumber="278">function Do_document_catalogue_to_xml</fileline>
            <fileline lineNumber="279">{</fileline>
            <fileline lineNumber="280">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="281">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="282">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="283">######################################################</fileline>
            <fileline lineNumber="284">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="285" />
            <fileline lineNumber="286" />
            <fileline lineNumber="287">File_Read "autodoc_filter_line_Printer " &lt; ${Base_Catalog_function_depend}</fileline>
            <fileline lineNumber="288" />
            <fileline lineNumber="289">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="290">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="291">####################################################</fileline>
            <fileline lineNumber="292">}</fileline>
            <fileline lineNumber="293" />
            <fileline lineNumber="294">function Get_document_function_by_file</fileline>
            <fileline lineNumber="295">{</fileline>
            <fileline lineNumber="296">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="297">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="298">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="299">######################################################</fileline>
            <fileline lineNumber="300">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="301" />
            <fileline lineNumber="302">local Internal_Geted_line="${1}"</fileline>
            <fileline lineNumber="303" />
            <fileline lineNumber="304">File_Read "autodoc_filter_line_Printer " &lt; ${Base_Catalog_function_depend}</fileline>
            <fileline lineNumber="305" />
            <fileline lineNumber="306">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="307">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="308">####################################################</fileline>
            <fileline lineNumber="309">}</fileline>
            <fileline lineNumber="310" />
            <fileline lineNumber="311">function Do_document_generate</fileline>
            <fileline lineNumber="312">{</fileline>
            <fileline lineNumber="313">#|# Var to set  : None</fileline>
            <fileline lineNumber="314">#|# TOPrintFormat  : Use this var to set Output format of the Documentation</fileline>
            <fileline lineNumber="315">#|# ${1}           : Use this var to set [ TOPrintFormat ]</fileline>
            <fileline lineNumber="316">#|#</fileline>
            <fileline lineNumber="317">#|# Base usage  : Do_document_generate "format"</fileline>
            <fileline lineNumber="318">#|#</fileline>
            <fileline lineNumber="319">#|# Description : This function change type of output from txt to XML</fileline>
            <fileline lineNumber="320">#|#</fileline>
            <fileline lineNumber="321">#|# Send Back   : XML MANHTML or TXT function</fileline>
            <fileline lineNumber="322">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="323">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="324">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="325">######################################################</fileline>
            <fileline lineNumber="326">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="327" />
            <fileline lineNumber="328">local TOPrintFormat="${1}"</fileline>
            <fileline lineNumber="329" />
            <fileline lineNumber="330" />
            <fileline lineNumber="331">autodoc_filter_line_BASE_PATH</fileline>
            <fileline lineNumber="332" />
            <fileline lineNumber="333">MSG_DISPLAY "check" "1" "Output format for documentation : [ ${TOPrintFormat} ] "</fileline>
            <fileline lineNumber="334">case ${TOPrintFormat} in</fileline>
            <fileline lineNumber="335">	XML|xml) MSG_DISPLAY "EdSMessage" "2" "Supported Output format"</fileline>
            <fileline lineNumber="336">             Document_Print_global_Print_xml</fileline>
            <fileline lineNumber="337">	         ;;</fileline>
            <fileline lineNumber="338">	TXT|txt)  MSG_DISPLAY "EdSMessage" "2" "Supported Output format"</fileline>
            <fileline lineNumber="339">              Document_Print_global_Print_txt</fileline>
            <fileline lineNumber="340">	         ;;</fileline>
            <fileline lineNumber="341">	MANHTML|manhtml)  MSG_DISPLAY "EdSMessage" "2" "Supported Output format"</fileline>
            <fileline lineNumber="342">                      Document_Print_function_man_page</fileline>
            <fileline lineNumber="343">	         ;;</fileline>
            <fileline lineNumber="344">          *) MSG_DISPLAY "EdEMessage" "2" "Unsupported Output format for documentation : [ ${TOPrintFormat} ] "</fileline>
            <fileline lineNumber="345">             ;;</fileline>
            <fileline lineNumber="346">esac</fileline>
            <fileline lineNumber="347" />
            <fileline lineNumber="348" />
            <fileline lineNumber="349">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="350">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="351">####################################################</fileline>
            <fileline lineNumber="352">}</fileline>
            <fileline lineNumber="353" />
            <fileline lineNumber="354"># Sourcing control variable </fileline>
            <fileline lineNumber="355">LibState="OK"</fileline>
            <fileline lineNumber="356" />
        </content>
    </file>
    <file>
        <filename>./lib/doc/worl_lib.sh</filename>
        <content>
            <fileline lineNumber="1">function set_word_title() </fileline>
            <fileline lineNumber="2">{</fileline>
            <fileline lineNumber="3">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="4">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="5">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="6">######################################################</fileline>
            <fileline lineNumber="7">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="8" />
            <fileline lineNumber="9">local _file="${1}"</fileline>
            <fileline lineNumber="10">local _text="${2}"</fileline>
            <fileline lineNumber="11">local _title_level="${3}"</fileline>
            <fileline lineNumber="12" />
            <fileline lineNumber="13">Empty_Var_Control "${_file}"         "_file"         "4"</fileline>
            <fileline lineNumber="14">Empty_Var_Control "${_text}"         "_text"         "4"</fileline>
            <fileline lineNumber="15">Empty_Var_Control "${_title_level}"  "_title_level"  "4"</fileline>
            <fileline lineNumber="16" />
            <fileline lineNumber="17" />
            <fileline lineNumber="18">printf "     &lt;w:p w14:paraId=\"643DEAB8\"                               " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="19">printf "              w14:textId=\"77777777\"                           " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="20">printf "              w:rsidR=\"00913340\"                              " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="21">printf "              w:rsidRDefault=\"00913340\"                       " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="22">printf "              w:rsidP=\"00913340\"&gt;                             " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="23">printf "             &lt;w:pPr&gt;                                            " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="24">printf "                 &lt;w:pStyle w:val=\"Titre${_title_level}\" /&gt;    " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="25">printf "             &lt;/w:pPr&gt;                                           " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="26">printf "             &lt;w:r&gt;                                              " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="27">printf "                 &lt;w:t&gt;${_text}&lt;/w:t&gt;                            " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="28">printf "             &lt;/w:r&gt;                                             " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="29">printf "         &lt;/w:p&gt;                                                 " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="30" />
            <fileline lineNumber="31">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="32">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="33">#################################################### </fileline>
            <fileline lineNumber="34">}</fileline>
            <fileline lineNumber="35" />
            <fileline lineNumber="36">function set_word_text_chapter()</fileline>
            <fileline lineNumber="37">{</fileline>
            <fileline lineNumber="38">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="39">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="40">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="41">######################################################</fileline>
            <fileline lineNumber="42">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="43" />
            <fileline lineNumber="44">local _file="${1}"</fileline>
            <fileline lineNumber="45">local _text="${2}"</fileline>
            <fileline lineNumber="46" />
            <fileline lineNumber="47" />
            <fileline lineNumber="48">Empty_Var_Control "${_file}"         "_file"         "4"</fileline>
            <fileline lineNumber="49">Empty_Var_Control "${_text}"         "_text"         "4"</fileline>
            <fileline lineNumber="50" />
            <fileline lineNumber="51" />
            <fileline lineNumber="52">printf "        &lt;w:p w14:paraId=\"4B4CAE2E\"                        " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="53">printf "             w14:textId=\"049C0C5D\"                        " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="54">printf "             w:rsidR=\"00913340\"                           " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="55">printf "             w:rsidRDefault=\"00913340\"&gt;                   " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="56">printf "            &lt;w:r&gt;                                           " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="57">printf "                &lt;w:t xml:space=\"preserve\"&gt;${_text}&lt;/w:t&gt;  " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="58">printf "            &lt;/w:r&gt;                                          " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="59">printf "        &lt;/w:p&gt;                                              " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="60" />
            <fileline lineNumber="61">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="62">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="63">#################################################### </fileline>
            <fileline lineNumber="64">}</fileline>
            <fileline lineNumber="65" />
            <fileline lineNumber="66">function do_add_table_columns()</fileline>
            <fileline lineNumber="67">{</fileline>
            <fileline lineNumber="68">local _file="${1}"</fileline>
            <fileline lineNumber="69">local _colum_number="${2}"</fileline>
            <fileline lineNumber="70" />
            <fileline lineNumber="71">Empty_Var_Control "${_file}"         "_file"          "4"</fileline>
            <fileline lineNumber="72">Empty_Var_Control "${_colum_number}" "_colum_number"  "4"</fileline>
            <fileline lineNumber="73" />
            <fileline lineNumber="74">printf "            &lt;w:tblGrid&gt;                                                     " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="75">for columns in {1..${_colum_number}}</fileline>
            <fileline lineNumber="76">    do</fileline>
            <fileline lineNumber="77">        printf "                &lt;w:gridCol w:w=\"2265\" /&gt;                                  " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="78">done</fileline>
            <fileline lineNumber="79">printf "            &lt;/w:tblGrid&gt;                                                    " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="80">}</fileline>
            <fileline lineNumber="81" />
            <fileline lineNumber="82">function do_add_start_table_row()</fileline>
            <fileline lineNumber="83">{</fileline>
            <fileline lineNumber="84">printf "            &lt;w:tr w:rsidR=\"00913340\"                                      " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="85">printf "                  w14:paraId=\"7B8A2F36\"                                   " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="86">printf "                  w14:textId=\"77777777\"                                   " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="87">printf "                  w:rsidTr=\"00913340\"&gt;                                    " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="88">}</fileline>
            <fileline lineNumber="89" />
            <fileline lineNumber="90">function do_add_end_table_row() </fileline>
            <fileline lineNumber="91">{</fileline>
            <fileline lineNumber="92">printf "            &lt;/w:tr&gt;                                                         " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="93">}</fileline>
            <fileline lineNumber="94" />
            <fileline lineNumber="95">function do_add_cell()</fileline>
            <fileline lineNumber="96">{</fileline>
            <fileline lineNumber="97" />
            <fileline lineNumber="98">local _file="${1}"</fileline>
            <fileline lineNumber="99">local _colum_number="${2}"</fileline>
            <fileline lineNumber="100" />
            <fileline lineNumber="101">Empty_Var_Control "${_file}" "_file"  "4"</fileline>
            <fileline lineNumber="102">Empty_Var_Control "${_text}" "_text"  "4"</fileline>
            <fileline lineNumber="103" />
            <fileline lineNumber="104">printf "                &lt;w:tc&gt;                                                      " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="105">printf "                    &lt;w:tcPr&gt;                                                " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="106">printf "                        &lt;w:tcW w:w=\"2265\"                                 " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="107">printf "                               w:type=\"dxa\" /&gt;                            " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="108">printf "                    &lt;/w:tcPr&gt;                                               " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="109">printf "                    &lt;w:p w14:paraId=\"73448C25\"                            " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="110">printf "                         w14:textId=\"0DCCF4B0\"                            " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="111">printf "                         w:rsidR=\"00913340\"                               " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="112">printf "                         w:rsidRDefault=\"00913340\"                        " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="113">printf "                         w:rsidP=\"00913340\"&gt;                              " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="114">printf "                        &lt;w:r&gt;                                               " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="115">printf "                            &lt;w:t&gt;${_text}&lt;/w:t&gt;                             " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="116">printf "                        &lt;/w:r&gt;                                              " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="117">printf "                    &lt;/w:p&gt;                                                  " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="118">printf "                &lt;/w:tc&gt;                                                     " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="119">}</fileline>
            <fileline lineNumber="120" />
            <fileline lineNumber="121" />
            <fileline lineNumber="122">function do_add_start_table()</fileline>
            <fileline lineNumber="123">{</fileline>
            <fileline lineNumber="124">local _file="${1}"</fileline>
            <fileline lineNumber="125" />
            <fileline lineNumber="126">Empty_Var_Control "${_file}" "_file"  "4"</fileline>
            <fileline lineNumber="127">printf "   &lt;w:tbl&gt;                                                                  " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="128">printf "            &lt;w:tblPr&gt;                                                       " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="129">printf "                &lt;w:tblStyle w:val=\"Grilledutableau\" /&gt;                    " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="130">printf "                &lt;w:tblW w:w=\"0\"                                           " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="131">printf "                        w:type=\"auto\" /&gt;                                  " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="132">printf "                &lt;w:tblLook w:val=\"04A0\"                                   " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="133">printf "                           w:firstRow=\"1\"                                 " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="134">printf "                           w:lastRow=\"0\"                                  " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="135">printf "                           w:firstColumn=\"1\"                              " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="136">printf "                           w:lastColumn=\"0\"                               " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="137">printf "                           w:noHBand=\"0\"                                  " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="138">printf "                           w:noVBand=\"1\" /&gt;                               " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="139">printf "            &lt;/w:tblPr&gt;                                                      " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="140">}</fileline>
            <fileline lineNumber="141" />
            <fileline lineNumber="142">function do_add_end_table() </fileline>
            <fileline lineNumber="143">{</fileline>
            <fileline lineNumber="144">local _file="${1}"</fileline>
            <fileline lineNumber="145" />
            <fileline lineNumber="146">Empty_Var_Control "${_file}" "_file"  "4"</fileline>
            <fileline lineNumber="147" />
            <fileline lineNumber="148">printf "        &lt;/w:tbl&gt;                                                            " &gt;&gt; ${_file}</fileline>
            <fileline lineNumber="149" />
            <fileline lineNumber="150">}</fileline>
            <fileline lineNumber="151" />
            <fileline lineNumber="152" />
            <fileline lineNumber="153">function Set_word_neutral_table_test()</fileline>
            <fileline lineNumber="154">{</fileline>
            <fileline lineNumber="155">local _file="${1}" </fileline>
            <fileline lineNumber="156">add_start_table         "${_file}"</fileline>
            <fileline lineNumber="157" />
            <fileline lineNumber="158">do_add_table_columns     "${_file}" "5"</fileline>
            <fileline lineNumber="159">do_add_start_table_row   "${_file}" </fileline>
            <fileline lineNumber="160">do_add_cell              "${_file}" "column 1 line header" </fileline>
            <fileline lineNumber="161">do_add_cell              "${_file}" "column 2 line header"</fileline>
            <fileline lineNumber="162">do_add_cell              "${_file}" "column 3 line header"</fileline>
            <fileline lineNumber="163">do_add_cell              "${_file}" "column 4 line header"</fileline>
            <fileline lineNumber="164">do_add_cell              "${_file}" "column 5 line header"</fileline>
            <fileline lineNumber="165">do_add_end_table_row     "${_file}"</fileline>
            <fileline lineNumber="166" />
            <fileline lineNumber="167" />
            <fileline lineNumber="168">do_add_start_table_row  </fileline>
            <fileline lineNumber="169">do_add_cell              "${_file}" "column 1 line 1" </fileline>
            <fileline lineNumber="170">do_add_cell              "${_file}"  "column 2 line 1"</fileline>
            <fileline lineNumber="171">do_add_cell              "${_file}" "column 3 line 1"</fileline>
            <fileline lineNumber="172">do_add_cell              "${_file}" "column 4 line 1"</fileline>
            <fileline lineNumber="173">do_add_cell              "${_file}" "column 5 line 1"</fileline>
            <fileline lineNumber="174">do_add_end_table_row</fileline>
            <fileline lineNumber="175" />
            <fileline lineNumber="176">do_add_start_table_row   "${_file}"</fileline>
            <fileline lineNumber="177">do_add_cell              "${_file}" "column 1 line 2" </fileline>
            <fileline lineNumber="178">do_add_cell              "${_file}" "column 2 line 2"</fileline>
            <fileline lineNumber="179">do_add_cell              "${_file}" "column 3 line 2"</fileline>
            <fileline lineNumber="180">do_add_cell              "${_file}" "column 4 line 2"</fileline>
            <fileline lineNumber="181">do_add_cell              "${_file}" "column 5 line 2"</fileline>
            <fileline lineNumber="182">do_add_end_table_row     "${_file}"</fileline>
            <fileline lineNumber="183" />
            <fileline lineNumber="184">do_add_start_table_row   "${_file}"</fileline>
            <fileline lineNumber="185">do_add_cell              "${_file}" "column 1 line 3" </fileline>
            <fileline lineNumber="186">do_add_cell              "${_file}" "column 2 line 3"</fileline>
            <fileline lineNumber="187">do_add_cell              "${_file}" "column 3 line 3"</fileline>
            <fileline lineNumber="188">do_add_cell              "${_file}" "column 4 line 3"</fileline>
            <fileline lineNumber="189">do_add_cell              "${_file}" "column 5 line 3"</fileline>
            <fileline lineNumber="190">do_add_end_table_row     "${_file}"</fileline>
            <fileline lineNumber="191" />
            <fileline lineNumber="192">do_add_end_table         "${_file}"</fileline>
            <fileline lineNumber="193">}</fileline>
            <fileline lineNumber="194" />
            <fileline lineNumber="195" />
            <fileline lineNumber="196"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/doc/menu/document_menu_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 28/06/2024</fileline>
            <fileline lineNumber="4"># generic autodocumentation abstraction menu  from CAST </fileline>
            <fileline lineNumber="5">function document_Base_menu                                  # DOC_Base_MENU_L0</fileline>
            <fileline lineNumber="6">{</fileline>
            <fileline lineNumber="7">#|# Var to set  : None</fileline>
            <fileline lineNumber="8">#|#</fileline>
            <fileline lineNumber="9">#|# Base usage  : document_Base_menu</fileline>
            <fileline lineNumber="10">#|#</fileline>
            <fileline lineNumber="11">#|# Description : This function generate menu to manage autodoc functions</fileline>
            <fileline lineNumber="12">#|#</fileline>
            <fileline lineNumber="13">#|# Send Back   : Menu</fileline>
            <fileline lineNumber="14">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="15">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="16">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="17">######################################################</fileline>
            <fileline lineNumber="18">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="19" />
            <fileline lineNumber="20" />
            <fileline lineNumber="21">Menu_Get_items "# DOC_Base_MENU_L1" "2" "${Base_Dir_Scripts_Lib}/doc/menu/document_menu.lib" "Autodoc menu :"</fileline>
            <fileline lineNumber="22" />
            <fileline lineNumber="23">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="24">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="25">####################################################</fileline>
            <fileline lineNumber="26">}</fileline>
            <fileline lineNumber="27" />
            <fileline lineNumber="28" />
            <fileline lineNumber="29">function Document_generate_XML                               # DOC_Base_MENU_L1</fileline>
            <fileline lineNumber="30">{</fileline>
            <fileline lineNumber="31">#|# Var to set  : None</fileline>
            <fileline lineNumber="32">#|#</fileline>
            <fileline lineNumber="33">#|# Base usage  : Document_generate_XML</fileline>
            <fileline lineNumber="34">#|#</fileline>
            <fileline lineNumber="35">#|# Description : This function generate autodoc in XML format by calling</fileline>
            <fileline lineNumber="36">#|#               Do_document_generate</fileline>
            <fileline lineNumber="37">#|# Send Back   : function call with parameter</fileline>
            <fileline lineNumber="38">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="39">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="40">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="41">######################################################</fileline>
            <fileline lineNumber="42">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="43" />
            <fileline lineNumber="44" />
            <fileline lineNumber="45">Do_document_generate "xml"</fileline>
            <fileline lineNumber="46" />
            <fileline lineNumber="47">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="48">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="49">####################################################</fileline>
            <fileline lineNumber="50">}</fileline>
            <fileline lineNumber="51" />
            <fileline lineNumber="52">function Document_generate_Text                              # DOC_Base_MENU_L1</fileline>
            <fileline lineNumber="53">{</fileline>
            <fileline lineNumber="54">#|# Var to set  : None</fileline>
            <fileline lineNumber="55">#|#</fileline>
            <fileline lineNumber="56">#|# Base usage  : Document_generate_Text</fileline>
            <fileline lineNumber="57">#|#</fileline>
            <fileline lineNumber="58">#|# Description : This function generate autodoc in txt format by calling</fileline>
            <fileline lineNumber="59">#|#               Do_document_generate</fileline>
            <fileline lineNumber="60">#|# Send Back   : function call with parameter</fileline>
            <fileline lineNumber="61">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="62">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="63">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="64">######################################################</fileline>
            <fileline lineNumber="65">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="66" />
            <fileline lineNumber="67" />
            <fileline lineNumber="68">Do_document_generate "txt"</fileline>
            <fileline lineNumber="69" />
            <fileline lineNumber="70">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="71">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="72">####################################################</fileline>
            <fileline lineNumber="73">}</fileline>
            <fileline lineNumber="74" />
            <fileline lineNumber="75">function Document_generate_HTML                              # DOC_Base_MENU_L1</fileline>
            <fileline lineNumber="76">{</fileline>
            <fileline lineNumber="77">#|# Var to set  : None</fileline>
            <fileline lineNumber="78">#|#</fileline>
            <fileline lineNumber="79">#|# Base usage  : Document_generate_HTML</fileline>
            <fileline lineNumber="80">#|#</fileline>
            <fileline lineNumber="81">#|# Description : This function generate autodoc in HTML format by calling</fileline>
            <fileline lineNumber="82">#|#               Do_document_generate</fileline>
            <fileline lineNumber="83">#|# Send Back   : function call with parameter</fileline>
            <fileline lineNumber="84">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="85">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="86">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="87">######################################################</fileline>
            <fileline lineNumber="88">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="89" />
            <fileline lineNumber="90" />
            <fileline lineNumber="91">Do_document_generate "MANHTML"</fileline>
            <fileline lineNumber="92" />
            <fileline lineNumber="93">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="94">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="95">####################################################</fileline>
            <fileline lineNumber="96">}</fileline>
            <fileline lineNumber="97" />
            <fileline lineNumber="98">function Document_Generate_Catalogues                        # DOC_Base_MENU_L1</fileline>
            <fileline lineNumber="99">{</fileline>
            <fileline lineNumber="100">#|# Var to set  : None</fileline>
            <fileline lineNumber="101">#|#</fileline>
            <fileline lineNumber="102">#|# Base usage  : Document_Generate_Catalogues</fileline>
            <fileline lineNumber="103">#|#</fileline>
            <fileline lineNumber="104">#|# Description : This function generate autodoc cata by callilogues by calling</fileline>
            <fileline lineNumber="105">#|#               Get_all_function_names_to_document</fileline>
            <fileline lineNumber="106">#|# Send Back   : function call with parameter</fileline>
            <fileline lineNumber="107">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="108">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="109">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="110">######################################################</fileline>
            <fileline lineNumber="111">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="112" />
            <fileline lineNumber="113" />
            <fileline lineNumber="114">Get_all_function_names_to_document</fileline>
            <fileline lineNumber="115" />
            <fileline lineNumber="116">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="117">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="118">####################################################</fileline>
            <fileline lineNumber="119">}</fileline>
            <fileline lineNumber="120" />
            <fileline lineNumber="121"># Sourcing control variable </fileline>
            <fileline lineNumber="122">LibState="OK"</fileline>
            <fileline lineNumber="123" />
        </content>
    </file>
    <file>
        <filename>./lib/doc/Filters/autodoc_filters_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 28/06/2024</fileline>
            <fileline lineNumber="4"># generic autodocumentation filter from CAST </fileline>
            <fileline lineNumber="5" />
            <fileline lineNumber="6">function autodoc_filter_line_Printer</fileline>
            <fileline lineNumber="7">{</fileline>
            <fileline lineNumber="8">#|# Internal_Geted_line                   : use this var to set the line to parse</fileline>
            <fileline lineNumber="9">#|# ${1}                                  : Use this var to set Internal_Geted_line</fileline>
            <fileline lineNumber="10">#|# Basic usage : Do_document_catalogue_to_xml_sub_line_parser "Line to parse"</fileline>
            <fileline lineNumber="11">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="12">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="13">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="14">######################################################</fileline>
            <fileline lineNumber="15">Internal_Geted_line="${1}"</fileline>
            <fileline lineNumber="16" />
            <fileline lineNumber="17">echo  "${Internal_Geted_line}"</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19" />
            <fileline lineNumber="20">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="21">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="22">####################################################</fileline>
            <fileline lineNumber="23">}</fileline>
            <fileline lineNumber="24" />
            <fileline lineNumber="25">function autodoc_filter_line_BASE_PATH</fileline>
            <fileline lineNumber="26">{</fileline>
            <fileline lineNumber="27">#|# No parameters are used for this function</fileline>
            <fileline lineNumber="28">#|# This function is used to cut off all path information in doc's catalogues</fileline>
            <fileline lineNumber="29">#|# Basic usage : autodoc_filter_line_BASE_PATH</fileline>
            <fileline lineNumber="30">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="31">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="32">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="33">######################################################</fileline>
            <fileline lineNumber="34" />
            <fileline lineNumber="35">MSG_DISPLAY "info" "1" "Filtering file : [ ${Base_Catalog_function} ] "</fileline>
            <fileline lineNumber="36" />
            <fileline lineNumber="37">Filter_Base_Path_in_Cat "${Base_Catalog_function}"</fileline>
            <fileline lineNumber="38" />
            <fileline lineNumber="39">MSG_DISPLAY "info" "1" "Filtering file : [ ${Base_Catalog_function_depend} ] "</fileline>
            <fileline lineNumber="40" />
            <fileline lineNumber="41">Filter_Base_Path_in_Cat "${Base_Catalog_function_depend}"</fileline>
            <fileline lineNumber="42" />
            <fileline lineNumber="43">MSG_DISPLAY "info" "1" "Filtering file : [ ${Base_Catalog_function_docs} ] "</fileline>
            <fileline lineNumber="44" />
            <fileline lineNumber="45">Filter_Base_Path_in_Cat "${Base_Catalog_function_docs}"</fileline>
            <fileline lineNumber="46" />
            <fileline lineNumber="47" />
            <fileline lineNumber="48" />
            <fileline lineNumber="49">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="50">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="51">####################################################</fileline>
            <fileline lineNumber="52">}</fileline>
            <fileline lineNumber="53" />
            <fileline lineNumber="54" />
            <fileline lineNumber="55">function Filter_Base_Path_in_Cat</fileline>
            <fileline lineNumber="56">{</fileline>
            <fileline lineNumber="57">#|# BASE_FILE_TO_FILTER                   : use this var to set the file to filter</fileline>
            <fileline lineNumber="58">#|# ${1}                                  : Use this var to set BASE_FILE_TO_FILTER</fileline>
            <fileline lineNumber="59">#|# Basic usage : Filter_Base_Path_in_Cat "File To filter"</fileline>
            <fileline lineNumber="60">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="61">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="62">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="63">######################################################</fileline>
            <fileline lineNumber="64">BASE_FILE_TO_FILTER="${1}"</fileline>
            <fileline lineNumber="65">Protected_PATH="$( echo  ${Base_Dir_Scripts} |   sed  -e  's/\//\\\//g')"</fileline>
            <fileline lineNumber="66" />
            <fileline lineNumber="67">MSG_DISPLAY "debug" "0" "Protected Path var is set to : [ ${Protected_PATH} ]"</fileline>
            <fileline lineNumber="68" />
            <fileline lineNumber="69">eval sed -e 's/${Protected_PATH}//g' ${BASE_FILE_TO_FILTER} &gt; ${BASE_FILE_TO_FILTER}.new</fileline>
            <fileline lineNumber="70">cat ${BASE_FILE_TO_FILTER}.new &gt; ${BASE_FILE_TO_FILTER}</fileline>
            <fileline lineNumber="71">Do_file_remove "${BASE_FILE_TO_FILTER}.new"</fileline>
            <fileline lineNumber="72" />
            <fileline lineNumber="73">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="74">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="75">####################################################</fileline>
            <fileline lineNumber="76">}</fileline>
            <fileline lineNumber="77" />
            <fileline lineNumber="78">function document_filter_dep_tmp_cat</fileline>
            <fileline lineNumber="79">{</fileline>
            <fileline lineNumber="80">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="81">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="82">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="83">######################################################</fileline>
            <fileline lineNumber="84">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="85" />
            <fileline lineNumber="86" />
            <fileline lineNumber="87">egrep -v ";Item;;$"     ${Base_Catalog_function_TMP_dep} &gt; ${Base_Dir_Scripts_Tmp}/filter_cat.tmp &amp;&amp; cat    ${Base_Dir_Scripts_Tmp}/filter_cat.tmp  &gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="88">egrep -v ";Item;$"      ${Base_Catalog_function_TMP_dep} &gt; ${Base_Dir_Scripts_Tmp}/filter_cat.tmp &amp;&amp; cat    ${Base_Dir_Scripts_Tmp}/filter_cat.tmp  &gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="89">egrep -v ";Item;;$"     ${Base_Catalog_function_TMP_dep} &gt; ${Base_Dir_Scripts_Tmp}/filter_cat.tmp &amp;&amp; cat    ${Base_Dir_Scripts_Tmp}/filter_cat.tmp  &gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="90">egrep -v ";Item;.$"     ${Base_Catalog_function_TMP_dep} &gt; ${Base_Dir_Scripts_Tmp}/filter_cat.tmp &amp;&amp; cat    ${Base_Dir_Scripts_Tmp}/filter_cat.tmp  &gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="91">egrep -v ";Item;###$"   ${Base_Catalog_function_TMP_dep} &gt; ${Base_Dir_Scripts_Tmp}/filter_cat.tmp &amp;&amp; cat    ${Base_Dir_Scripts_Tmp}/filter_cat.tmp  &gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="92">egrep -v ";Item;\=$"    ${Base_Catalog_function_TMP_dep} &gt; ${Base_Dir_Scripts_Tmp}/filter_cat.tmp &amp;&amp; cat    ${Base_Dir_Scripts_Tmp}/filter_cat.tmp  &gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="93">egrep -v ";Item;\[$"    ${Base_Catalog_function_TMP_dep} &gt; ${Base_Dir_Scripts_Tmp}/filter_cat.tmp &amp;&amp; cat    ${Base_Dir_Scripts_Tmp}/filter_cat.tmp  &gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="94">egrep -v ";Item;\]$"    ${Base_Catalog_function_TMP_dep} &gt; ${Base_Dir_Scripts_Tmp}/filter_cat.tmp &amp;&amp; cat    ${Base_Dir_Scripts_Tmp}/filter_cat.tmp  &gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="95">egrep -v ";Item;\*$"    ${Base_Catalog_function_TMP_dep} &gt; ${Base_Dir_Scripts_Tmp}/filter_cat.tmp &amp;&amp; cat    ${Base_Dir_Scripts_Tmp}/filter_cat.tmp  &gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="96">egrep -v ";Item;:$"     ${Base_Catalog_function_TMP_dep} &gt; ${Base_Dir_Scripts_Tmp}/filter_cat.tmp &amp;&amp; cat    ${Base_Dir_Scripts_Tmp}/filter_cat.tmp  &gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="97">egrep -v ";Item;eval$"  ${Base_Catalog_function_TMP_dep} &gt; ${Base_Dir_Scripts_Tmp}/filter_cat.tmp &amp;&amp; cat    ${Base_Dir_Scripts_Tmp}/filter_cat.tmp  &gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="98">egrep -v ";Item;if$"    ${Base_Catalog_function_TMP_dep} &gt; ${Base_Dir_Scripts_Tmp}/filter_cat.tmp &amp;&amp; cat    ${Base_Dir_Scripts_Tmp}/filter_cat.tmp  &gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="99">egrep -v ";Item;then$"  ${Base_Catalog_function_TMP_dep} &gt; ${Base_Dir_Scripts_Tmp}/filter_cat.tmp &amp;&amp; cat    ${Base_Dir_Scripts_Tmp}/filter_cat.tmp  &gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="100">egrep -v ";Item;else$"  ${Base_Catalog_function_TMP_dep} &gt; ${Base_Dir_Scripts_Tmp}/filter_cat.tmp &amp;&amp; cat    ${Base_Dir_Scripts_Tmp}/filter_cat.tmp  &gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="101">egrep -v ";Item;fi$"    ${Base_Catalog_function_TMP_dep} &gt; ${Base_Dir_Scripts_Tmp}/filter_cat.tmp &amp;&amp; cat    ${Base_Dir_Scripts_Tmp}/filter_cat.tmp  &gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="102">egrep -v ";Item;for$"   ${Base_Catalog_function_TMP_dep} &gt; ${Base_Dir_Scripts_Tmp}/filter_cat.tmp &amp;&amp; cat    ${Base_Dir_Scripts_Tmp}/filter_cat.tmp  &gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="103">egrep -v ";Item;do$"    ${Base_Catalog_function_TMP_dep} &gt; ${Base_Dir_Scripts_Tmp}/filter_cat.tmp &amp;&amp; cat    ${Base_Dir_Scripts_Tmp}/filter_cat.tmp  &gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="104">egrep -v ";Item;done$"  ${Base_Catalog_function_TMP_dep} &gt; ${Base_Dir_Scripts_Tmp}/filter_cat.tmp &amp;&amp; cat    ${Base_Dir_Scripts_Tmp}/filter_cat.tmp  &gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="105">egrep -v ";Item;while$" ${Base_Catalog_function_TMP_dep} &gt; ${Base_Dir_Scripts_Tmp}/filter_cat.tmp &amp;&amp; cat    ${Base_Dir_Scripts_Tmp}/filter_cat.tmp  &gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="106">egrep -v ";Item;case$"  ${Base_Catalog_function_TMP_dep} &gt; ${Base_Dir_Scripts_Tmp}/filter_cat.tmp &amp;&amp; cat    ${Base_Dir_Scripts_Tmp}/filter_cat.tmp  &gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="107">egrep -v ";Item;export$"  ${Base_Catalog_function_TMP_dep} &gt; ${Base_Dir_Scripts_Tmp}/filter_cat.tmp &amp;&amp; cat    ${Base_Dir_Scripts_Tmp}/filter_cat.tmp  &gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="108">egrep -v ";Item;############$"     ${Base_Catalog_function_TMP_dep} &gt; ${Base_Dir_Scripts_Tmp}/filter_cat.tmp &amp;&amp; cat    ${Base_Dir_Scripts_Tmp}/filter_cat.tmp  &gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="109">egrep -v ";Item;######################################################$"     ${Base_Catalog_function_TMP_dep} &gt; ${Base_Dir_Scripts_Tmp}/filter_cat.tmp &amp;&amp; cat    ${Base_Dir_Scripts_Tmp}/filter_cat.tmp  &gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="110" />
            <fileline lineNumber="111">sort -u  ${Base_Catalog_function_TMP_dep}                &gt; ${Base_Dir_Scripts_Tmp}/filter_cat.tmp &amp;&amp; cat    ${Base_Dir_Scripts_Tmp}/filter_cat.tmp  &gt; ${Base_Catalog_function_TMP_dep}</fileline>
            <fileline lineNumber="112">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="113">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="114">####################################################</fileline>
            <fileline lineNumber="115">}</fileline>
            <fileline lineNumber="116" />
            <fileline lineNumber="117"># Sourcing control variable </fileline>
            <fileline lineNumber="118">LibState="OK"</fileline>
            <fileline lineNumber="119" />
        </content>
    </file>
    <file>
        <filename>./lib/doc/sub/document_xml_sub_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 28/06/2024</fileline>
            <fileline lineNumber="4"># generic xml auto documentation from CAST </fileline>
            <fileline lineNumber="5" />
            <fileline lineNumber="6" />
            <fileline lineNumber="7">function Document_Print_global_Print_xml</fileline>
            <fileline lineNumber="8">{</fileline>
            <fileline lineNumber="9">#|# Var to set  : None</fileline>
            <fileline lineNumber="10">#|#</fileline>
            <fileline lineNumber="11">#|# Base usage  : Document_Print_global_Print_xml</fileline>
            <fileline lineNumber="12">#|#</fileline>
            <fileline lineNumber="13">#|# Description : This fuction generate documentation xml output</fileline>
            <fileline lineNumber="14">#|#</fileline>
            <fileline lineNumber="15">#|# Send Back   : xml flow</fileline>
            <fileline lineNumber="16">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="17">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="18">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="19">######################################################</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">for Libraries_geted in $( cat ${Base_Catalog_function} | awk -F ";" '{ print $2 }' | sort -u )</fileline>
            <fileline lineNumber="24">      do</fileline>
            <fileline lineNumber="25">        Document_doc_xml="${Base_Dir_Scripts_Data_doc_xml}/$( echo  ${Libraries_geted} | awk -F "/" '{ print $NF}' | awk -F "." '{ print $1".xml"}' )"</fileline>
            <fileline lineNumber="26">        New_Lib_Name="$(echo ${Libraries_geted} | awk -F "/" '{ print $NF}')" &gt; ${Document_doc_xml}</fileline>
            <fileline lineNumber="27">        echo  "&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;"                &gt;&gt; ${Document_doc_xml}</fileline>
            <fileline lineNumber="28">        echo  "&lt;?xml-stylesheet type=\"text/xsl\" href=\"autodoc.xsl\"?&gt;" &gt;&gt; ${Document_doc_xml}</fileline>
            <fileline lineNumber="29">        echo  " &lt;Library&gt;"                                                &gt;&gt; ${Document_doc_xml}</fileline>
            <fileline lineNumber="30">        echo  " &lt;LibraryName&gt;${New_Lib_Name}&lt;/LibraryName&gt;"               &gt;&gt; ${Document_doc_xml}</fileline>
            <fileline lineNumber="31">        Document_Print_function_xml</fileline>
            <fileline lineNumber="32">        echo  " &lt;/Library&gt;"                                               &gt;&gt; ${Document_doc_xml}</fileline>
            <fileline lineNumber="33">done</fileline>
            <fileline lineNumber="34">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="35">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="36">####################################################</fileline>
            <fileline lineNumber="37">}</fileline>
            <fileline lineNumber="38" />
            <fileline lineNumber="39">function Document_Print_function_xml</fileline>
            <fileline lineNumber="40">{</fileline>
            <fileline lineNumber="41">#|# Var to set  : None</fileline>
            <fileline lineNumber="42">#|#</fileline>
            <fileline lineNumber="43">#|# Base usage  : Document_Print_function_xml</fileline>
            <fileline lineNumber="44">#|#</fileline>
            <fileline lineNumber="45">#|# Description : This function is used whithout parameter and can only be called by</fileline>
            <fileline lineNumber="46">#|# Document_Print_global_Print_xml</fileline>
            <fileline lineNumber="47">#|#</fileline>
            <fileline lineNumber="48">#|# Send Back   : xml flow</fileline>
            <fileline lineNumber="49">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="50">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="51">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="52">######################################################</fileline>
            <fileline lineNumber="53">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="54" />
            <fileline lineNumber="55" />
            <fileline lineNumber="56">MSG_DISPLAY "debug" "0" " Value of Base_Catalog_function : [ ${Base_Catalog_function} ]"</fileline>
            <fileline lineNumber="57">MSG_DISPLAY "debug" "0" " Value of New_Lib_Name          : [ ${New_Lib_Name} ]"</fileline>
            <fileline lineNumber="58" />
            <fileline lineNumber="59">for Function_geted in $( cat ${Base_Catalog_function} | grep ${New_Lib_Name} | awk -F ";" '{ print $4 }' )</fileline>
            <fileline lineNumber="60">    do</fileline>
            <fileline lineNumber="61">      echo  "&lt;Function&gt;"                                     &gt;&gt; ${Document_doc_xml}</fileline>
            <fileline lineNumber="62">      echo  "&lt;FunctionName&gt;${Function_geted}&lt;/FunctionName&gt;" &gt;&gt; ${Document_doc_xml}</fileline>
            <fileline lineNumber="63">      Document_Print_Dependences_xml</fileline>
            <fileline lineNumber="64">      echo  "&lt;DocText&gt;"                                      &gt;&gt; ${Document_doc_xml}</fileline>
            <fileline lineNumber="65">      cat ${Base_Catalog_function_docs} | grep "\;${Function_geted}\;" |  awk -F ";" '{ print "    " $6}' &gt;&gt; ${Document_doc_xml}</fileline>
            <fileline lineNumber="66">      echo  "&lt;/DocText&gt;"                                     &gt;&gt; ${Document_doc_xml}</fileline>
            <fileline lineNumber="67">      echo  "&lt;/Function&gt;"                                    &gt;&gt; ${Document_doc_xml}</fileline>
            <fileline lineNumber="68">done</fileline>
            <fileline lineNumber="69">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="70">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="71">####################################################</fileline>
            <fileline lineNumber="72">}</fileline>
            <fileline lineNumber="73" />
            <fileline lineNumber="74">function Document_Print_Dependences_xml</fileline>
            <fileline lineNumber="75">{</fileline>
            <fileline lineNumber="76">#|# Var to set  : None</fileline>
            <fileline lineNumber="77">#|#</fileline>
            <fileline lineNumber="78">#|# Base usage  : Document_Print_Dependences_xml</fileline>
            <fileline lineNumber="79">#|#</fileline>
            <fileline lineNumber="80">#|# Description : This function is used whithout parameter and can only be called by</fileline>
            <fileline lineNumber="81">#|# Document_Print_function_xml</fileline>
            <fileline lineNumber="82">#|#</fileline>
            <fileline lineNumber="83">#|# Send Back   : xml flow</fileline>
            <fileline lineNumber="84">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="85">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="86">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="87">######################################################</fileline>
            <fileline lineNumber="88">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="89" />
            <fileline lineNumber="90" />
            <fileline lineNumber="91">Internal_Geted_line="${1}"</fileline>
            <fileline lineNumber="92">echo  "&lt;DependOn&gt;" &gt;&gt; ${Document_doc_xml}</fileline>
            <fileline lineNumber="93">for Dependences_Geted in  $( cat ${Base_Catalog_function_depend} | grep "\;${Function_geted}\;" |  awk -F ";" '{ print $8 ";"  $6  }' | sort -u )</fileline>
            <fileline lineNumber="94">    do</fileline>
            <fileline lineNumber="95">      echo  "&lt;FunctionDepend&gt;"                                                                    &gt;&gt; ${Document_doc_xml}</fileline>
            <fileline lineNumber="96">      echo  "${Dependences_Geted}" | awk -F ";" '{print "&lt;FunctionName&gt;" $1 "&lt;/FunctionName&gt;" }'  &gt;&gt; ${Document_doc_xml}</fileline>
            <fileline lineNumber="97">      echo  "${Dependences_Geted}" | awk -F ";" '{print "&lt;FunctionLib&gt;" $2 "&lt;/FunctionLib&gt;" }'    &gt;&gt; ${Document_doc_xml}</fileline>
            <fileline lineNumber="98">      echo  "&lt;/FunctionDepend&gt;"                                                                   &gt;&gt; ${Document_doc_xml}</fileline>
            <fileline lineNumber="99">done</fileline>
            <fileline lineNumber="100">echo  "&lt;/DependOn&gt;" &gt;&gt; ${Document_doc_xml}</fileline>
            <fileline lineNumber="101">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="102">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="103">####################################################</fileline>
            <fileline lineNumber="104">}</fileline>
            <fileline lineNumber="105" />
            <fileline lineNumber="106"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/doc/sub/document_txt_sub_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 28/06/2024</fileline>
            <fileline lineNumber="4"># generic txt autodocumentation  from CAST </fileline>
            <fileline lineNumber="5" />
            <fileline lineNumber="6">function Document_Print_global_Print_txt</fileline>
            <fileline lineNumber="7">{</fileline>
            <fileline lineNumber="8">#|# Var to set  : None</fileline>
            <fileline lineNumber="9">#|#</fileline>
            <fileline lineNumber="10">#|# Base usage  : Document_Print_global_Print_txt</fileline>
            <fileline lineNumber="11">#|#</fileline>
            <fileline lineNumber="12">#|# Description : This fuction generate documentation txt output</fileline>
            <fileline lineNumber="13">#|#</fileline>
            <fileline lineNumber="14">#|# Send Back   : TXT flow</fileline>
            <fileline lineNumber="15">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="16">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="17">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="18">######################################################</fileline>
            <fileline lineNumber="19">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="20" />
            <fileline lineNumber="21" />
            <fileline lineNumber="22">for Libraries_geted in $( cat ${Base_Catalog_function} | awk -F ";" '{ print $2 }' | sort -u )</fileline>
            <fileline lineNumber="23">      do</fileline>
            <fileline lineNumber="24">        Document_doc_txt="${Base_Dir_Scripts_Data_doc_txt}/$( echo  ${Libraries_geted} | awk -F "/" '{ print $NF}' | awk -F "." '{ print $1".txt"}' )"</fileline>
            <fileline lineNumber="25">        New_Lib_Name="$(echo ${Libraries_geted} | awk -F "/" '{ print $NF}')"</fileline>
            <fileline lineNumber="26">        echo  " Used lib : [ ${New_Lib_Name}   ] "  &gt; ${Document_doc_txt}</fileline>
            <fileline lineNumber="27">        Document_Print_function_txt</fileline>
            <fileline lineNumber="28">done</fileline>
            <fileline lineNumber="29">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="30">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="31">####################################################</fileline>
            <fileline lineNumber="32">}</fileline>
            <fileline lineNumber="33" />
            <fileline lineNumber="34">function Document_Print_function_txt</fileline>
            <fileline lineNumber="35">{</fileline>
            <fileline lineNumber="36">#|# Var to set  : None</fileline>
            <fileline lineNumber="37">#|#</fileline>
            <fileline lineNumber="38">#|# Base usage  : Document_Print_function_txt</fileline>
            <fileline lineNumber="39">#|#</fileline>
            <fileline lineNumber="40">#|# Description : #|# This function is used whithout parameter and can only be called by</fileline>
            <fileline lineNumber="41">#|# Document_Print_global_Print_txt</fileline>
            <fileline lineNumber="42">#|#</fileline>
            <fileline lineNumber="43">#|# Send Back   : txt flow</fileline>
            <fileline lineNumber="44">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="45">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="46">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="47">######################################################</fileline>
            <fileline lineNumber="48">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="49" />
            <fileline lineNumber="50" />
            <fileline lineNumber="51">for Function_geted in $( cat ${Base_Catalog_function} | grep ${New_Lib_Name} | awk -F ";" '{ print $4 }' )</fileline>
            <fileline lineNumber="52">    do</fileline>
            <fileline lineNumber="53">      echo  " Information for function : [ ${Function_geted} ]"  &gt;&gt; ${Document_doc_txt}</fileline>
            <fileline lineNumber="54">      echo  " This function depend on : "                        &gt;&gt; ${Document_doc_txt}</fileline>
            <fileline lineNumber="55">      Document_Print_Dependences_txt</fileline>
            <fileline lineNumber="56">      echo  " How to use this function  "                        &gt;&gt; ${Document_doc_txt}</fileline>
            <fileline lineNumber="57">      echo  "  "                                                 &gt;&gt; ${Document_doc_txt}</fileline>
            <fileline lineNumber="58">      cat ${Base_Catalog_function_docs} | grep "\;${Function_geted}\;" |  awk -F ";" '{ print "    " $6}' &gt;&gt; ${Document_doc_txt}</fileline>
            <fileline lineNumber="59">      echo  "                                                 " &gt;&gt; ${Document_doc_txt}</fileline>
            <fileline lineNumber="60">      echo  " ----------------------------------------------- " &gt;&gt; ${Document_doc_txt}</fileline>
            <fileline lineNumber="61">      echo  "                                                 " &gt;&gt; ${Document_doc_txt}</fileline>
            <fileline lineNumber="62" />
            <fileline lineNumber="63">done</fileline>
            <fileline lineNumber="64">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="65">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="66">####################################################</fileline>
            <fileline lineNumber="67">}</fileline>
            <fileline lineNumber="68" />
            <fileline lineNumber="69">function Document_Print_Dependences_txt</fileline>
            <fileline lineNumber="70">{</fileline>
            <fileline lineNumber="71">#|# Var to set  : None</fileline>
            <fileline lineNumber="72">#|#</fileline>
            <fileline lineNumber="73">#|# Base usage  : Document_Print_Dependences_txt</fileline>
            <fileline lineNumber="74">#|#</fileline>
            <fileline lineNumber="75">#|# Description : This function is used whithout parameter and can only be called by</fileline>
            <fileline lineNumber="76">#|# Document_Print_function_txt</fileline>
            <fileline lineNumber="77">#|#</fileline>
            <fileline lineNumber="78">#|# Send Back   : txt flow</fileline>
            <fileline lineNumber="79">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="80">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="81">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="82">######################################################</fileline>
            <fileline lineNumber="83">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="84" />
            <fileline lineNumber="85" />
            <fileline lineNumber="86">Internal_Geted_line="${1}"</fileline>
            <fileline lineNumber="87">for Dependences_Geted in  $( cat ${Base_Catalog_function_depend} | grep "\;${Function_geted}\;" |  awk -F ";" '{ print $8 ";"  $6  }')</fileline>
            <fileline lineNumber="88">    do</fileline>
            <fileline lineNumber="89">      Function_Dep_To_Print="$( echo  ${Dependences_Geted} | awk -F ";" '{print $1 " Found in lib : " $2 }')"</fileline>
            <fileline lineNumber="90">      echo  "                            ${Function_Dep_To_Print}"                                            &gt;&gt; ${Document_doc_txt}</fileline>
            <fileline lineNumber="91">done</fileline>
            <fileline lineNumber="92">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="93">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="94">####################################################</fileline>
            <fileline lineNumber="95">}</fileline>
            <fileline lineNumber="96" />
            <fileline lineNumber="97" />
            <fileline lineNumber="98" />
            <fileline lineNumber="99">function Dummy_function</fileline>
            <fileline lineNumber="100">{</fileline>
            <fileline lineNumber="101">#|# Var to set  : None</fileline>
            <fileline lineNumber="102">#|#             : Use this var to set</fileline>
            <fileline lineNumber="103">#|#             : Use this var to set</fileline>
            <fileline lineNumber="104">#|# ${1}        : Use this var to set [  ]</fileline>
            <fileline lineNumber="105">#|# ${2}        : Use this var to set [  ]</fileline>
            <fileline lineNumber="106">#|#</fileline>
            <fileline lineNumber="107">#|# Base usage  : None</fileline>
            <fileline lineNumber="108">#|#</fileline>
            <fileline lineNumber="109">#|# Description : None</fileline>
            <fileline lineNumber="110">#|#</fileline>
            <fileline lineNumber="111">#|# Send Back   : None</fileline>
            <fileline lineNumber="112">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="113">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="114">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="115">######################################################</fileline>
            <fileline lineNumber="116">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="117" />
            <fileline lineNumber="118" />
            <fileline lineNumber="119">MSG_DISPLAY "info" "1" "this is a model function"</fileline>
            <fileline lineNumber="120" />
            <fileline lineNumber="121">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="122">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="123">####################################################</fileline>
            <fileline lineNumber="124">}</fileline>
            <fileline lineNumber="125" />
            <fileline lineNumber="126"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/doc/sub/document_html_sub_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 28/06/2024</fileline>
            <fileline lineNumber="4"># generic html auto documentation from CAST </fileline>
            <fileline lineNumber="5" />
            <fileline lineNumber="6">function Document_Print_function_man_page</fileline>
            <fileline lineNumber="7">{</fileline>
            <fileline lineNumber="8">#|# Var to set  : None</fileline>
            <fileline lineNumber="9">#|#</fileline>
            <fileline lineNumber="10">#|# Base usage  : Document_Print_function_man_page</fileline>
            <fileline lineNumber="11">#|#</fileline>
            <fileline lineNumber="12">#|# Description : This function is used whithout parameter and can only be called by</fileline>
            <fileline lineNumber="13">#|#</fileline>
            <fileline lineNumber="14">#|#</fileline>
            <fileline lineNumber="15">#|# Send Back   : html flow</fileline>
            <fileline lineNumber="16">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="17">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="18">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="19">######################################################</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23">MSG_DISPLAY "debug" "0" " Value of Base_Catalog_function : [ ${Base_Catalog_function} ]"</fileline>
            <fileline lineNumber="24">MSG_DISPLAY "debug" "0" " Value of New_Lib_Name          : [ ${New_Lib_Name} ]"</fileline>
            <fileline lineNumber="25">for New_Lib_Name in $(for Tvar in $( cat ../data/catalogue/function.cat | awk -F ";" '{ print $2 }') ; do  basename ${Tvar} ; done | sort -u)</fileline>
            <fileline lineNumber="26">    do</fileline>
            <fileline lineNumber="27">      for Function_geted in $( cat ${Base_Catalog_function} | grep ${New_Lib_Name} | awk -F ";" '{ print $4 }' )</fileline>
            <fileline lineNumber="28">          do</fileline>
            <fileline lineNumber="29">             DPFMP_Base_File_name="$( echo  ${Function_geted} | awk -F "." '{ print $1 }' )"</fileline>
            <fileline lineNumber="30">             Document_doc_man="${Base_Dir_Scripts_Data_doc_man_html}/${DPFMP_Base_File_name}.html"</fileline>
            <fileline lineNumber="31">             echo  "&lt;HTML&gt;"                                                                                   &gt;&gt; ${Document_doc_man}</fileline>
            <fileline lineNumber="32">             echo  "    &lt;BODY&gt;"                                                                               &gt;&gt; ${Document_doc_man}</fileline>
            <fileline lineNumber="33">             echo  "       &lt;PRE&gt;&lt;!-- Manpage converted by pcd autodoc by Arnaud Crampet  --&gt;&lt;/PRE&gt;"           &gt;&gt; ${Document_doc_man}</fileline>
            <fileline lineNumber="34">             echo  "         &lt;PRE&gt;&lt;H2&gt;SYNOPSIS&lt;/H2&gt;&lt;/PRE&gt;"                                                    &gt;&gt; ${Document_doc_man}</fileline>
            <fileline lineNumber="35">             echo  " &lt;B&gt;                                 "                                                    &gt;&gt; ${Document_doc_man}</fileline>
            <fileline lineNumber="36">             cat ${Base_Catalog_function_docs} | grep "\;${Function_geted}\;" |  awk -F ";" '{ print "    " $6}' &gt;&gt; ${Document_doc_man}</fileline>
            <fileline lineNumber="37">             echo  "&lt;/B&gt;"                                                                                     &gt;&gt; ${Document_doc_man}</fileline>
            <fileline lineNumber="38">             echo  "&lt;ADDRESS&gt;contact PCD at : ${CAST_MAINTENER_MAIL} &lt;ADDRESS&gt;"                                     &gt;&gt; ${Document_doc_man}                                                                                 &gt;&gt; ${Document_doc_xml}</fileline>
            <fileline lineNumber="39">             echo  "     &lt;/BODY&gt; "                                                                            &gt;&gt; ${Document_doc_man}</fileline>
            <fileline lineNumber="40">             echo  "&lt;/HTML&gt;"                                                                                  &gt;&gt; ${Document_doc_man}</fileline>
            <fileline lineNumber="41">       done</fileline>
            <fileline lineNumber="42">done</fileline>
            <fileline lineNumber="43">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="44">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="45">####################################################</fileline>
            <fileline lineNumber="46">}</fileline>
            <fileline lineNumber="47" />
            <fileline lineNumber="48" />
            <fileline lineNumber="49"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/doc/xml_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 28/06/2024</fileline>
            <fileline lineNumber="4"># generic xml from CAST </fileline>
            <fileline lineNumber="5" />
            <fileline lineNumber="6" />
            <fileline lineNumber="7">function XML_Get_Model </fileline>
            <fileline lineNumber="8">{</fileline>
            <fileline lineNumber="9">#|# XML_Model_To_Use                : Use this var to set which XML base model to use to generate XML CODE</fileline>
            <fileline lineNumber="10">#|# ${1}                            : Use this var to set XML_Model_To_Use</fileline>
            <fileline lineNumber="11">#|# XML_ARRAY_DATA                  : Use this var to set which liste of data to fiil in </fileline>
            <fileline lineNumber="12">#|# ${2}                            : Use this var to set XML_ARRAY_DATA</fileline>
            <fileline lineNumber="13">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="14">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="15">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="16">######################################################</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">local XML_Model_To_Use="${1}"</fileline>
            <fileline lineNumber="20">local XML_ARRAY_DATA="${2}"</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22">Empty_Var_Control "${XML_Model_To_Use}"  "XML_Model_To_Use"  "4"</fileline>
            <fileline lineNumber="23">Empty_Var_Control "${XML_ARRAY_DATA}"    "XML_ARRAY_DATA"    "4"</fileline>
            <fileline lineNumber="24" />
            <fileline lineNumber="25">eval eval set -A XML_ARRAY_DATA $(echo  "\$\{${XML_ARRAY_DATA}\[\@\]\}")</fileline>
            <fileline lineNumber="26">for List in ${XML_ARRAY_DATA[@]}</fileline>
            <fileline lineNumber="27">    do</fileline>
            <fileline lineNumber="28">      MSG_DISPLAY "debug" "0" "XML Array def [ ${List} ]"</fileline>
            <fileline lineNumber="29">done </fileline>
            <fileline lineNumber="30" />
            <fileline lineNumber="31">if [ ${XML_Conf_init} = "0" ]</fileline>
            <fileline lineNumber="32">   then </fileline>
            <fileline lineNumber="33">       MSG_DISPLAY "debug" "0" "XML base definition file Sourced [ Sourcing ]"</fileline>
            <fileline lineNumber="34">   	   Do_file_sourcing_control "xml_base_def.def" "${Base_Dir_Scripts_Data_Xml_DEF}"</fileline>
            <fileline lineNumber="35">       MSG_DISPLAY "debug" "0" "XML base definition file Sourced [ OK ]"</fileline>
            <fileline lineNumber="36">       XML_Conf_init="1"</fileline>
            <fileline lineNumber="37">   else</fileline>
            <fileline lineNumber="38">       MSG_DISPLAY "debug" "0" "XML base definition file Sourced [ already OK ]"</fileline>
            <fileline lineNumber="39">fi      </fileline>
            <fileline lineNumber="40">${XML_Model_To_Use}</fileline>
            <fileline lineNumber="41" />
            <fileline lineNumber="42">Set_system_counter "init"</fileline>
            <fileline lineNumber="43">Base_Spacer=""</fileline>
            <fileline lineNumber="44">Base_print_elm="0"</fileline>
            <fileline lineNumber="45">for XML_MODEL_ARRAY in ${XML_BASE_ARRAY[@]}</fileline>
            <fileline lineNumber="46">   do </fileline>
            <fileline lineNumber="47">   	  Set_system_counter</fileline>
            <fileline lineNumber="48">      Actual_XML_Array="${External_Return_Counter}"</fileline>
            <fileline lineNumber="49">   	  MSG_DISPLAY "debug" "0" "XML model array Number [ ${External_Return_Counter} ]" </fileline>
            <fileline lineNumber="50" />
            <fileline lineNumber="51">   	  for Possible_feed in ${XML_fill_in_array[@]}</fileline>
            <fileline lineNumber="52">   	     do </fileline>
            <fileline lineNumber="53">   	     	MSG_DISPLAY "debug" "0" "Possible_feed [ ${Possible_feed} ]" </fileline>
            <fileline lineNumber="54">   	     	if  [ ! "${OK_feed}" = "1" ]</fileline>
            <fileline lineNumber="55">   	     	    then </fileline>
            <fileline lineNumber="56">   	     	        case ${Possible_feed} in </fileline>
            <fileline lineNumber="57">                         ${Actual_XML_Array}) XML_Get_Model_Sub_feeder_POS</fileline>
            <fileline lineNumber="58">                                              OK_feed="1"</fileline>
            <fileline lineNumber="59">   	     	                                  Feeded_done="1"</fileline>
            <fileline lineNumber="60">                                              ;;</fileline>
            <fileline lineNumber="61">                                           *) OK_feed="0"</fileline>
            <fileline lineNumber="62">                                              ;;</fileline>
            <fileline lineNumber="63">                     esac</fileline>
            <fileline lineNumber="64">                else </fileline>
            <fileline lineNumber="65">                    MSG_DISPLAY "debug" "0" "Dummy Cycle [ x ]" </fileline>
            <fileline lineNumber="66">             fi </fileline>
            <fileline lineNumber="67">      done</fileline>
            <fileline lineNumber="68">      if [ "${OK_feed}" = "1" ] </fileline>
            <fileline lineNumber="69">         then </fileline>
            <fileline lineNumber="70">         	 MSG_DISPLAY "debug" "0" "Need to close [ NOT NEEDED ]"</fileline>
            <fileline lineNumber="71">         else</fileline>
            <fileline lineNumber="72">             XML_Get_Model_Sub_feeder_NOPOS</fileline>
            <fileline lineNumber="73">      fi  </fileline>
            <fileline lineNumber="74">      OK_feed=""</fileline>
            <fileline lineNumber="75" />
            <fileline lineNumber="76">done</fileline>
            <fileline lineNumber="77" />
            <fileline lineNumber="78">for closes in ${CLOSE_XML} </fileline>
            <fileline lineNumber="79">    do </fileline>
            <fileline lineNumber="80">      Base_Spacer="$( echo  "${Base_Spacer}" | cut -b 9- )"  </fileline>
            <fileline lineNumber="81">      echo  "${Base_Spacer}${closes}"</fileline>
            <fileline lineNumber="82">done </fileline>
            <fileline lineNumber="83">Base_Spacer_do=""</fileline>
            <fileline lineNumber="84">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="85">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="86">#################################################### </fileline>
            <fileline lineNumber="87">}</fileline>
            <fileline lineNumber="88" />
            <fileline lineNumber="89">function XML_Get_Model_Sub_feeder_POS</fileline>
            <fileline lineNumber="90">{</fileline>
            <fileline lineNumber="91">#|# Sub function of XML_Get_Model_Sub_feeder Do not call directly</fileline>
            <fileline lineNumber="92">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="93">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="94">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="95">######################################################</fileline>
            <fileline lineNumber="96">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="97" />
            <fileline lineNumber="98">if [ "${Base_Spacer_do}" = "1" ]</fileline>
            <fileline lineNumber="99">   then</fileline>
            <fileline lineNumber="100">   	   Base_Spacer_do="1"</fileline>
            <fileline lineNumber="101">   else</fileline>
            <fileline lineNumber="102">       Base_Spacer="${Base_Spacer}     "</fileline>
            <fileline lineNumber="103">       No_More_Space="${Base_Spacer}" </fileline>
            <fileline lineNumber="104">       Base_Spacer_do="1"</fileline>
            <fileline lineNumber="105">fi</fileline>
            <fileline lineNumber="106">echo  "${No_More_Space}&lt;${XML_MODEL_ARRAY}&gt;${XML_ARRAY_DATA[Base_print_elm]}&lt;/${XML_MODEL_ARRAY}&gt;"</fileline>
            <fileline lineNumber="107">Base_print_elm="$(expr ${Base_print_elm} + 1)"</fileline>
            <fileline lineNumber="108" />
            <fileline lineNumber="109">OK_feed="1"</fileline>
            <fileline lineNumber="110">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="111">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="112">#################################################### </fileline>
            <fileline lineNumber="113">}</fileline>
            <fileline lineNumber="114" />
            <fileline lineNumber="115" />
            <fileline lineNumber="116">function XML_Get_Model_Sub_feeder_NOPOS</fileline>
            <fileline lineNumber="117">{</fileline>
            <fileline lineNumber="118">#|# Sub function of XML_Get_Model_Sub_feeder Do not call directly</fileline>
            <fileline lineNumber="119">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="120">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="121">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="122">######################################################</fileline>
            <fileline lineNumber="123">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="124" />
            <fileline lineNumber="125" />
            <fileline lineNumber="126">CLOSE_XML="&lt;/${XML_MODEL_ARRAY}&gt; ${CLOSE_XML}"</fileline>
            <fileline lineNumber="127">echo  "${Base_Spacer}&lt;${XML_MODEL_ARRAY}&gt;"</fileline>
            <fileline lineNumber="128">Base_Spacer="${Base_Spacer}     "</fileline>
            <fileline lineNumber="129">OK_feed="0"</fileline>
            <fileline lineNumber="130">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="131">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="132">#################################################### </fileline>
            <fileline lineNumber="133">}</fileline>
            <fileline lineNumber="134" />
            <fileline lineNumber="135" />
            <fileline lineNumber="136"># Sourcing control variable </fileline>
            <fileline lineNumber="137">LibState="OK"  </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/web/mail_lib.sh</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2">#  mail.lib                                                                   #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 17/03/2008                                                  #</fileline>
            <fileline lineNumber="5"># Team          : Only me                                          #</fileline>
            <fileline lineNumber="6"># Support mail  : doraken@doraken.net                                          #</fileline>
            <fileline lineNumber="7"># Author        : Arnaud Crampet                                              #</fileline>
            <fileline lineNumber="8">#                                                                             #</fileline>
            <fileline lineNumber="9"># Subject : This library provide base functions to handle mails sending       #</fileline>
            <fileline lineNumber="10">#                                                                             #</fileline>
            <fileline lineNumber="11">###############################################################################</fileline>
            <fileline lineNumber="12">####</fileline>
            <fileline lineNumber="13"># INFO </fileline>
            <fileline lineNumber="14" />
            <fileline lineNumber="15">function Mail_check_Mailler</fileline>
            <fileline lineNumber="16">{</fileline>
            <fileline lineNumber="17">#|# Var to set  : None</fileline>
            <fileline lineNumber="18">#|# MS_User_reciever            : Use this var to set mail to sent a mail</fileline>
            <fileline lineNumber="19">#|# MS_User_Subject             : Use this var to set to set subject of the mail </fileline>
            <fileline lineNumber="20">#|# MS_User_Attached_File       : Use this var to set to set wich file to send with mail </fileline>
            <fileline lineNumber="21">#|# MS_User_Message             : Use this var to set to set Message of the mail  </fileline>
            <fileline lineNumber="22">#|# ${1}        : Use this var to set [ MS_User_reciever ]                </fileline>
            <fileline lineNumber="23">#|# ${2}        : Use this var to set [ MS_User_Subject ]   </fileline>
            <fileline lineNumber="24">#|# ${3}        : Use this var to set [ MS_User_Attached_File ]                </fileline>
            <fileline lineNumber="25">#|# ${4}        : Use this var to set [ MS_User_Message ]                 </fileline>
            <fileline lineNumber="26">#|#</fileline>
            <fileline lineNumber="27">#|# Base usage  : Mail_Send "MS_User_reciever" "MS_User_Subject" "MS_User_Attached_File" "MS_User_Message" </fileline>
            <fileline lineNumber="28">#|#</fileline>
            <fileline lineNumber="29">#|# Description : None</fileline>
            <fileline lineNumber="30">#|#</fileline>
            <fileline lineNumber="31">#|# Send Back   : None</fileline>
            <fileline lineNumber="32">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="33">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="34">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="35">######################################################</fileline>
            <fileline lineNumber="36">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="37" />
            <fileline lineNumber="38" />
            <fileline lineNumber="39">if  [ "${Global_Tool_mutt_Status}" = "ENABLED" ] </fileline>
            <fileline lineNumber="40">  then</fileline>
            <fileline lineNumber="41">  	  Global_Mail_Mode="MUTT"</fileline>
            <fileline lineNumber="42">  elif [ "${Global_Tool_mailx_Status}" = "ENABLED" ] </fileline>
            <fileline lineNumber="43">       then</fileline>
            <fileline lineNumber="44">            Global_Mail_Mode="mailx"</fileline>
            <fileline lineNumber="45">  elif [ "${Global_Tool_mail_Status}" = "ENABLED" ] </fileline>
            <fileline lineNumber="46">       then </fileline>
            <fileline lineNumber="47">       	   Global_Mail_Mode="mail"</fileline>
            <fileline lineNumber="48">       else</fileline>
            <fileline lineNumber="49">           MSG_DISPLAY "EdEMessage" "1" "No mail utility activated"</fileline>
            <fileline lineNumber="50">fi  </fileline>
            <fileline lineNumber="51" />
            <fileline lineNumber="52">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="53">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="54">#################################################### 	</fileline>
            <fileline lineNumber="55">}</fileline>
            <fileline lineNumber="56" />
            <fileline lineNumber="57">function Mail_check_att</fileline>
            <fileline lineNumber="58">{</fileline>
            <fileline lineNumber="59">#|# Var to set  : None</fileline>
            <fileline lineNumber="60">#|# MCA_User_Attached_File            : Use this var to set mail to sent a mail</fileline>
            <fileline lineNumber="61">#|# ${1}        : Use this var to set [ MS_User_reciever ]                </fileline>
            <fileline lineNumber="62">#|#</fileline>
            <fileline lineNumber="63">#|# Base usage  : Mail_Send "MS_User_reciever" "MS_User_Subject" "MS_User_Attached_File" "MS_User_Message" </fileline>
            <fileline lineNumber="64">#|#</fileline>
            <fileline lineNumber="65">#|# Description : None</fileline>
            <fileline lineNumber="66">#|#</fileline>
            <fileline lineNumber="67">#|# Send Back   : None</fileline>
            <fileline lineNumber="68">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="69">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="70">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="71">######################################################</fileline>
            <fileline lineNumber="72">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="73" />
            <fileline lineNumber="74" />
            <fileline lineNumber="75" />
            <fileline lineNumber="76" />
            <fileline lineNumber="77">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="78">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="79">#################################################### 	</fileline>
            <fileline lineNumber="80">}</fileline>
            <fileline lineNumber="81" />
            <fileline lineNumber="82">function Mail_Send</fileline>
            <fileline lineNumber="83">{</fileline>
            <fileline lineNumber="84">#|# Var to set  : None</fileline>
            <fileline lineNumber="85">#|# MS_User_reciever            : Use this var to set mail to sent a mail</fileline>
            <fileline lineNumber="86">#|# MS_User_Subject             : Use this var to set to set subject of the mail </fileline>
            <fileline lineNumber="87">#|# MS_User_Attached_File       : Use this var to set to set wich file to send with mail </fileline>
            <fileline lineNumber="88">#|# MS_User_Message             : Use this var to set to set Message of the mail  </fileline>
            <fileline lineNumber="89">#|# ${1}        : Use this var to set [ MS_User_reciever ]                </fileline>
            <fileline lineNumber="90">#|# ${2}        : Use this var to set [ MS_User_Subject ]   </fileline>
            <fileline lineNumber="91">#|# ${3}        : Use this var to set [ MS_User_Attached_File ]                </fileline>
            <fileline lineNumber="92">#|# ${4}        : Use this var to set [ MS_User_Message ]                 </fileline>
            <fileline lineNumber="93">#|#</fileline>
            <fileline lineNumber="94">#|# Base usage  : Mail_Send "MS_User_reciever" "MS_User_Subject" "MS_User_Attached_File" "MS_User_Message" </fileline>
            <fileline lineNumber="95">#|#</fileline>
            <fileline lineNumber="96">#|# Description : None</fileline>
            <fileline lineNumber="97">#|#</fileline>
            <fileline lineNumber="98">#|# Send Back   : None</fileline>
            <fileline lineNumber="99">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="100">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="101">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="102">######################################################</fileline>
            <fileline lineNumber="103">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="104" />
            <fileline lineNumber="105" />
            <fileline lineNumber="106">local MS_User_reciever="${1}"</fileline>
            <fileline lineNumber="107">local MS_User_Subject="${2}"</fileline>
            <fileline lineNumber="108">local MS_User_Attached_File="${3}"</fileline>
            <fileline lineNumber="109">local MS_User_Message="${4}"</fileline>
            <fileline lineNumber="110" />
            <fileline lineNumber="111">Mail_check_Mailler</fileline>
            <fileline lineNumber="112" />
            <fileline lineNumber="113">Empty_Var_Control "${MS_User_reciever}"      "MS_User_reciever"      "4"  "can t send message to nobody" </fileline>
            <fileline lineNumber="114">Empty_Var_Control "${MS_User_Subject}"       "MS_User_Subject"       "4"  "Use defaul subject [ from script ${Action_Type} ]" "MS_User_Subject=\"from script ${Action_Type}\"" </fileline>
            <fileline lineNumber="115">MS_File_On_ok_Simple="Global_Mail_Mode=$( echo  "${Global_Mail_Mode}_ATT" )" </fileline>
            <fileline lineNumber="116">MS_File_On_ko_simple=""</fileline>
            <fileline lineNumber="117">Empty_Var_Control "${MS_User_Attached_File}" "MS_User_Attached_File"  "4"  "No file to send" "${MS_File_On_ko_simple}" "${MS_File_On_ok_Simple}" </fileline>
            <fileline lineNumber="118">Empty_Var_Control "${MS_User_Message}"       "MS_User_Message"        "4" "" </fileline>
            <fileline lineNumber="119" />
            <fileline lineNumber="120" />
            <fileline lineNumber="121" />
            <fileline lineNumber="122">case ${Global_Mail_Mode} in </fileline>
            <fileline lineNumber="123">        MAIL_ATT) if [ "${Global_Tool_uuencode_Status}" = "ENABLED" ] </fileline>
            <fileline lineNumber="124">                   then </fileline>
            <fileline lineNumber="125">                   	   MF_Simple_Filename="$( echo ${MS_User_Attached_File} | awk -F "/" '{ print $NF }')"</fileline>
            <fileline lineNumber="126">                       MS_Mail_commande_line="${Global_Tool_uuencode_bin}  ${MS_User_Attached_File} ${MF_Simple_Filename} | cat ${MS_User_Message} - |   ${Global_Tool_mail_bin} -s ${MS_User_Subject} ${MS_User_reciever}"</fileline>
            <fileline lineNumber="127">                   else </fileline>
            <fileline lineNumber="128">                       MS_Mail_commande_line="cat ${MS_User_Message} | ${Global_Tool_mail_bin} -s ${MS_User_Subject} ${MS_User_reciever}"</fileline>
            <fileline lineNumber="129">                  fi</fileline>
            <fileline lineNumber="130">                  ;; </fileline>
            <fileline lineNumber="131">       MAILX_ATT) if [ "${Global_Uuencode_Mode}" = "ENABLED" ] </fileline>
            <fileline lineNumber="132">                    then </fileline>
            <fileline lineNumber="133">                   	   MF_Simple_Filename="$( echo ${MS_User_Attached_File} | awk -F "/" '{ print $NF }')"</fileline>
            <fileline lineNumber="134">                       MS_Mail_commande_line="${Global_Tool_uuencode_bin}  ${MS_User_Attached_File} ${MF_Simple_Filename} | cat ${MS_User_Message} - |   ${Global_Tool_mailx_bin} -s ${MS_User_Subject} ${MS_User_reciever}"</fileline>
            <fileline lineNumber="135">                   else </fileline>
            <fileline lineNumber="136">                       MS_Mail_commande_line="cat ${MS_User_Message} |  ${Global_Tool_mailx_bin} -s ${MS_User_Subject} ${MS_User_reciever}"</fileline>
            <fileline lineNumber="137">                  fi</fileline>
            <fileline lineNumber="138">                  ;;</fileline>
            <fileline lineNumber="139">        MUTT_ATT) if [ "${Global_Uuencode_Mode}" = "ENABLED" ] </fileline>
            <fileline lineNumber="140">                     then </fileline>
            <fileline lineNumber="141">                         MS_Mail_commande_line="${Global_Tool_mutt_bin} -s \" ${MS_User_Subject}\" -a ${MS_User_Attached_File} ${MS_User_reciever}  &lt; ${MS_User_Message}"</fileline>
            <fileline lineNumber="142">                     else </fileline>
            <fileline lineNumber="143">                         MS_Mail_commande_line="${Global_Tool_mutt_bin} -s \" ${MS_User_Subject}\" ${MS_User_reciever}  &lt; ${MS_User_Message}"</fileline>
            <fileline lineNumber="144">                   fi</fileline>
            <fileline lineNumber="145">                   ;;</fileline>
            <fileline lineNumber="146">             MAIL) MS_Mail_commande_line=" cat ${MS_User_Message} |   ${Global_Tool_mail_bin} -s ${MS_User_Subject} ${MS_User_reciever}"</fileline>
            <fileline lineNumber="147">                   ;; </fileline>
            <fileline lineNumber="148">            MAILX) MS_Mail_commande_line=" cat ${MS_User_Message} |   ${Global_Tool_mailx_bin} -s ${MS_User_Subject} ${MS_User_reciever}"</fileline>
            <fileline lineNumber="149">                   ;;</fileline>
            <fileline lineNumber="150">             MUTT) MS_Mail_commande_line="${Global_Tool_mutt_bin} -s \" ${MS_User_Subject}\" ${MS_User_reciever}  &lt; ${MS_User_Message}"</fileline>
            <fileline lineNumber="151">                   ;;</fileline>
            <fileline lineNumber="152">                *) MSG_DISPLAY "EdEMessage" "2" "Not supported case ${Global_Mail_Mode}"</fileline>
            <fileline lineNumber="153">                   ;;</fileline>
            <fileline lineNumber="154">esac </fileline>
            <fileline lineNumber="155" />
            <fileline lineNumber="156">${MS_Mail_commande_line}</fileline>
            <fileline lineNumber="157" />
            <fileline lineNumber="158">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="159">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="160">#################################################### </fileline>
            <fileline lineNumber="161">}</fileline>
            <fileline lineNumber="162" />
            <fileline lineNumber="163"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/web/html_lib.sh</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2">#  HTML.lib                                              Version : 1.1.2.2    #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 08/12/2006                                                  #</fileline>
            <fileline lineNumber="5"># Team          : Only me after all                                                                     #</fileline>
            <fileline lineNumber="6"># Support mail  : doraken@doraken.net                                          #</fileline>
            <fileline lineNumber="7"># Author        : Arnaud Crampet                                              #</fileline>
            <fileline lineNumber="8">#                                                                             #</fileline>
            <fileline lineNumber="9"># Subject : This library provide base html generate runtime                   #</fileline>
            <fileline lineNumber="10">#                                                                             #</fileline>
            <fileline lineNumber="11">###############################################################################</fileline>
            <fileline lineNumber="12">####</fileline>
            <fileline lineNumber="13"># INFO</fileline>
            <fileline lineNumber="14" />
            <fileline lineNumber="15" />
            <fileline lineNumber="16">################### File system reports functions #############################</fileline>
            <fileline lineNumber="17" />
            <fileline lineNumber="18">function HTML_Table_Head_Report_FS</fileline>
            <fileline lineNumber="19">{</fileline>
            <fileline lineNumber="20">#|# Var to set  :</fileline>
            <fileline lineNumber="21">#|# HTML_File_to_export       : Use this var to set name of the report file</fileline>
            <fileline lineNumber="22">#|# Server_Name_To_report     : Use this var to set name of server on which we report</fileline>
            <fileline lineNumber="23">#|#</fileline>
            <fileline lineNumber="24">#|# Base usage  : HTML_Table_Head_Report_FS "Html file to generate" "Server"</fileline>
            <fileline lineNumber="25">#|#</fileline>
            <fileline lineNumber="26">#|# Description : This fuction create Table header in HTML code for FS reporting</fileline>
            <fileline lineNumber="27">#|#</fileline>
            <fileline lineNumber="28">#|# Send Back   : HTML code</fileline>
            <fileline lineNumber="29">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="30">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="31">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="32">######################################################</fileline>
            <fileline lineNumber="33">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="34" />
            <fileline lineNumber="35" />
            <fileline lineNumber="36">local HTML_File_to_export="${1}"</fileline>
            <fileline lineNumber="37">local Server_Name_To_report="${2}"</fileline>
            <fileline lineNumber="38">local HTML_Table_Head_Report_FS="${3}"</fileline>
            <fileline lineNumber="39" />
            <fileline lineNumber="40">Empty_Var_Control "${HTML_File_to_export}"       "HTML_File_to_export"       "4"</fileline>
            <fileline lineNumber="41">Empty_Var_Control "${Server_Name_To_report}"     "Server_Name_To_report"     "4"</fileline>
            <fileline lineNumber="42">Empty_Var_Control "${HTML_Table_Head_Report_FS}" "HTML_Table_Head_Report_FS" "4"</fileline>
            <fileline lineNumber="43" />
            <fileline lineNumber="44" />
            <fileline lineNumber="45">echo  "&lt;table style=\"text-align: left; width: 750px; border-width:1px;\" cellpadding=\"2\" cellspacing=\"2\"&gt;"         &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="46">echo  "&lt;tbody&gt;"                                                                                                         &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="47">echo  "&lt;tr&gt;"                                                                                                            &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="48">echo  "    &lt;td width=\'450\'&gt;Mount Point &lt;/td&gt;"                                                                         &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="49">echo  "    &lt;td &gt;Status &lt;/td&gt;"                                                                                           &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="50">echo  "    &lt;td &gt;Space used in percent&lt;/td&gt;"                                                                             &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="51">echo  "    &lt;td &gt;Free space &lt;/td&gt;"                                                                                       &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="52">echo  "    &lt;/td&gt;"                                                                                                       &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="53">echo  "&lt;/tr&gt;"                                                                                                           &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="54" />
            <fileline lineNumber="55">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="56">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="57">####################################################</fileline>
            <fileline lineNumber="58">}</fileline>
            <fileline lineNumber="59" />
            <fileline lineNumber="60" />
            <fileline lineNumber="61">function HTML_Table_Close_Report_FS</fileline>
            <fileline lineNumber="62">{</fileline>
            <fileline lineNumber="63">#|# Var to set  :</fileline>
            <fileline lineNumber="64">#|# HTML_File_to_export       : Use this var to set name of the report file</fileline>
            <fileline lineNumber="65">#|# Server_Name_To_report     : Use this var to set name of server on which we report</fileline>
            <fileline lineNumber="66">#|#</fileline>
            <fileline lineNumber="67">#|# Base usage  : HTML_Table_Close_Report_FS "Html file to generate" "Server"</fileline>
            <fileline lineNumber="68">#|#</fileline>
            <fileline lineNumber="69">#|# Description : This fuction create Table end in HTML code for FS reporting</fileline>
            <fileline lineNumber="70">#|#</fileline>
            <fileline lineNumber="71">#|# Send Back   : HTML code</fileline>
            <fileline lineNumber="72">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="73">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="74">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="75">######################################################</fileline>
            <fileline lineNumber="76">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="77" />
            <fileline lineNumber="78" />
            <fileline lineNumber="79">HTML_File_to_export="${1}"</fileline>
            <fileline lineNumber="80" />
            <fileline lineNumber="81">Empty_Var_Control "${HTML_File_to_export}"       "HTML_File_to_export"       "4"</fileline>
            <fileline lineNumber="82" />
            <fileline lineNumber="83" />
            <fileline lineNumber="84">echo  " &lt;/tbody&gt;" &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="85">echo  "&lt;/table&gt;"  &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="86">echo  "&lt;br&gt;"      &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="87">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="88">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="89">####################################################</fileline>
            <fileline lineNumber="90">}</fileline>
            <fileline lineNumber="91" />
            <fileline lineNumber="92" />
            <fileline lineNumber="93">function HTML_Error_Html_Report_FS</fileline>
            <fileline lineNumber="94">{</fileline>
            <fileline lineNumber="95">#|# Var to set  :</fileline>
            <fileline lineNumber="96">#|# HTML_File_to_export  : Use this var to set name of the report file</fileline>
            <fileline lineNumber="97">#|#</fileline>
            <fileline lineNumber="98">#|# Base usage  : HTML_Error_Html_Report_FS "Html file to generate"</fileline>
            <fileline lineNumber="99">#|#</fileline>
            <fileline lineNumber="100">#|# Description : This fuction create Table end in HTML code for FS reporting</fileline>
            <fileline lineNumber="101">#|#</fileline>
            <fileline lineNumber="102">#|# Send Back   : HTML code</fileline>
            <fileline lineNumber="103">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="104">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="105">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="106">######################################################</fileline>
            <fileline lineNumber="107">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="108" />
            <fileline lineNumber="109" />
            <fileline lineNumber="110">HTML_File_to_export="${1}"</fileline>
            <fileline lineNumber="111">Empty_Var_Control "${HTML_File_to_export}"       "HTML_File_to_export"       "4"</fileline>
            <fileline lineNumber="112" />
            <fileline lineNumber="113">echo  "&lt;tr&gt; &lt;td style=\"vertical-align: top; font-weight: bold; color: rgb(255, 0, 0);\"&gt; ${Device_Mnts_To_State} &lt;/td&gt;"  &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="114">echo  "&lt;td style=\"vertical-align: top; font-weight: bold; color: rgb(255, 0, 0);\"&gt; ${State_Case} &lt;/td&gt;"                 &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="115">echo  "&lt;td style=\"vertical-align: top; font-weight: bold; color: rgb(255, 0, 0);\"&gt; ${Device_perc_To_State} &lt;/td&gt;"       &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="116">echo  "&lt;td style=\"vertical-align: top; font-weight: bold; color: rgb(255, 0, 0);\"&gt; ${Device_Free_To_State} &lt;/td&gt;&lt;/tr&gt;"  &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="117" />
            <fileline lineNumber="118">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="119">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="120">####################################################</fileline>
            <fileline lineNumber="121">}</fileline>
            <fileline lineNumber="122" />
            <fileline lineNumber="123" />
            <fileline lineNumber="124">function HTML_Warn_Html_Report_FS</fileline>
            <fileline lineNumber="125">{</fileline>
            <fileline lineNumber="126">#|# Var to set  :</fileline>
            <fileline lineNumber="127">#|# HTML_File_to_export  : Use this var to set name of the report file</fileline>
            <fileline lineNumber="128">#|#</fileline>
            <fileline lineNumber="129">#|# Base usage  : HTML_Warn_Html_Report_FS "Html file to generate"</fileline>
            <fileline lineNumber="130">#|#</fileline>
            <fileline lineNumber="131">#|# Description : This fuction create Table end in HTML code for FS reporting</fileline>
            <fileline lineNumber="132">#|#</fileline>
            <fileline lineNumber="133">#|# Send Back   : HTML code</fileline>
            <fileline lineNumber="134">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="135">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="136">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="137">######################################################</fileline>
            <fileline lineNumber="138">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="139" />
            <fileline lineNumber="140" />
            <fileline lineNumber="141">HTML_File_to_export="${1}"</fileline>
            <fileline lineNumber="142">Empty_Var_Control "${HTML_File_to_export}"       "HTML_File_to_export"       "4"</fileline>
            <fileline lineNumber="143" />
            <fileline lineNumber="144">echo  "&lt;tr&gt; &lt;td style=\"vertical-align: top; font-weight: bold; color: rgb(255, 153, 0);\"&gt; ${Device_Mnts_To_State} &lt;/td&gt;"    &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="145">echo  "&lt;td style=\"vertical-align: top; font-weight: bold; color: rgb(255, 153, 0);\"&gt; ${State_Case} &lt;/td&gt;"                   &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="146">echo  "&lt;td style=\"vertical-align: top; font-weight: bold; color: rgb(255, 153, 0);\"&gt; ${Device_perc_To_State} &lt;/td&gt;"         &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="147">echo  "&lt;td style=\"vertical-align: top; font-weight: bold; color: rgb(255, 153, 0);\"&gt; ${Device_Free_To_State} &lt;/td&gt;&lt;/tr&gt;"    &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="148" />
            <fileline lineNumber="149">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="150">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="151">####################################################</fileline>
            <fileline lineNumber="152">}</fileline>
            <fileline lineNumber="153" />
            <fileline lineNumber="154">function HTML_Good_Html_Report_FS</fileline>
            <fileline lineNumber="155">{</fileline>
            <fileline lineNumber="156">#|# Var to set  :</fileline>
            <fileline lineNumber="157">#|# HTML_File_to_export  : Use this var to set name of the report file</fileline>
            <fileline lineNumber="158">#|# ${1}                 : Use this var to set [ HTML_File_to_export ]</fileline>
            <fileline lineNumber="159">#|#</fileline>
            <fileline lineNumber="160">#|# Base usage  : HTML_Good_Html_Report_FS "Html file to generate"</fileline>
            <fileline lineNumber="161">#|#</fileline>
            <fileline lineNumber="162">#|# Description : This fuction Table HTML code for Good state FS</fileline>
            <fileline lineNumber="163">#|#</fileline>
            <fileline lineNumber="164">#|# Send Back   : HTML code</fileline>
            <fileline lineNumber="165">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="166">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="167">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="168">######################################################</fileline>
            <fileline lineNumber="169">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="170" />
            <fileline lineNumber="171" />
            <fileline lineNumber="172">HTML_File_to_export="${1}"</fileline>
            <fileline lineNumber="173">Empty_Var_Control "${HTML_File_to_export}"       "HTML_File_to_export"       "4"</fileline>
            <fileline lineNumber="174" />
            <fileline lineNumber="175">echo  "&lt;tr&gt; &lt;td style=\"vertical-align: top; color: rgb(0, 0, 0);\"&gt; ${Device_Mnts_To_State} &lt;/td&gt;"    &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="176">echo  "&lt;td style=\"vertical-align: top; color: rgb(0, 0, 0);\"&gt; ${State_Case} &lt;/td&gt;"                   &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="177">echo  "&lt;td style=\"vertical-align: top; color: rgb(0, 0, 0);\"&gt; ${Device_perc_To_State} &lt;/td&gt;"         &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="178">echo  "&lt;td style=\"vertical-align: top; color: rgb(0, 0, 0);\"&gt; ${Device_Free_To_State} &lt;/td&gt; &lt;/tr&gt;"   &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="179" />
            <fileline lineNumber="180">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="181">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="182">####################################################</fileline>
            <fileline lineNumber="183">}</fileline>
            <fileline lineNumber="184" />
            <fileline lineNumber="185">#################### generics HTML function</fileline>
            <fileline lineNumber="186" />
            <fileline lineNumber="187">function HTML_Head_Report</fileline>
            <fileline lineNumber="188">{</fileline>
            <fileline lineNumber="189">#|# Var to set  :</fileline>
            <fileline lineNumber="190">#|# HTML_File_to_export  : Use this var to set name of the report file</fileline>
            <fileline lineNumber="191">#|#</fileline>
            <fileline lineNumber="192">#|# Base usage  : HTML_Good_Html_Report_FS "Html file to generate"</fileline>
            <fileline lineNumber="193">#|#</fileline>
            <fileline lineNumber="194">#|# Description : This fuction header HTML code for reports</fileline>
            <fileline lineNumber="195">#|#</fileline>
            <fileline lineNumber="196">#|# Send Back   : HTML code</fileline>
            <fileline lineNumber="197">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="198">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="199">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="200">######################################################</fileline>
            <fileline lineNumber="201">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="202" />
            <fileline lineNumber="203" />
            <fileline lineNumber="204">HTML_File_to_export="${1}"</fileline>
            <fileline lineNumber="205">Empty_Var_Control "${HTML_File_to_export}"       "HTML_File_to_export"       "4"</fileline>
            <fileline lineNumber="206" />
            <fileline lineNumber="207">echo  "&lt;html&gt;"                                                                                                              &gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="208">echo  "&lt;head&gt;"                                                                                                             &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="209">echo  "&lt;Style type=\"text/css\"&gt; td { border:thin dotted blue; font-weight: bold;} &lt;/style&gt;"                               &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="210">echo  "&lt;meta content=\"text/html; charset=ISO-8859-1\" http-equiv=\"content-type\"&gt;"                                       &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="211">echo  "&lt;title&gt;&lt;/title&gt;"                                                                                                    &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="212">echo  "&lt;/head&gt;"                                                                                                            &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="213">echo  "&lt;body&gt;"                                                                                                             &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="214">echo  "Config and Deploy PF report ON ${CURENT_WORK_DIR} for server ${current_server} &lt;br&gt;"                                &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="215">echo  "&lt;br&gt;"                                                                                                               &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="216">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="217">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="218">####################################################</fileline>
            <fileline lineNumber="219">}</fileline>
            <fileline lineNumber="220" />
            <fileline lineNumber="221" />
            <fileline lineNumber="222" />
            <fileline lineNumber="223">function HTML_footer_report_gen</fileline>
            <fileline lineNumber="224">{</fileline>
            <fileline lineNumber="225">#|# Var to set  :</fileline>
            <fileline lineNumber="226">#|# HTML_File_to_export  : Use this var to set name of the report file</fileline>
            <fileline lineNumber="227">#|#</fileline>
            <fileline lineNumber="228">#|# Base usage  : HTML_footer_report_gen "Html file to generate"</fileline>
            <fileline lineNumber="229">#|#</fileline>
            <fileline lineNumber="230">#|# Description : This fuction footer HTML code for reports</fileline>
            <fileline lineNumber="231">#|#</fileline>
            <fileline lineNumber="232">#|# Send Back   : HTML code</fileline>
            <fileline lineNumber="233">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="234">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="235">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="236">######################################################</fileline>
            <fileline lineNumber="237">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="238" />
            <fileline lineNumber="239" />
            <fileline lineNumber="240">HTML_File_to_export="${1}"</fileline>
            <fileline lineNumber="241">Empty_Var_Control "${HTML_File_to_export}"       "HTML_File_to_export"       "4"</fileline>
            <fileline lineNumber="242" />
            <fileline lineNumber="243">echo  "&lt;/tbody&gt;"    &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="244">echo  "&lt;/table&gt;"    &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="245">echo  "&lt;br&gt;"        &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="246">echo  "&lt;/body&gt;"     &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="247">echo  "&lt;/html&gt;"     &gt;&gt; ${HTML_File_to_export}</fileline>
            <fileline lineNumber="248" />
            <fileline lineNumber="249">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="250">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="251">####################################################</fileline>
            <fileline lineNumber="252">}</fileline>
            <fileline lineNumber="253" />
            <fileline lineNumber="254">function HTML_int_Menu_Generator_GEN</fileline>
            <fileline lineNumber="255">{</fileline>
            <fileline lineNumber="256">#|# Var to set  : None</fileline>
            <fileline lineNumber="257">#|# HIMGG_Base_Menu_Directory   : use this var to set chere to create the menu file</fileline>
            <fileline lineNumber="258">#|# HIMGG_INT_lst               : use this var to set the ints list</fileline>
            <fileline lineNumber="259">#|# ${1}                        : use this var to set HIMGG_Base_Menu_Directory</fileline>
            <fileline lineNumber="260">#|# ${2}                        : use this var to set HIMGG_INT_lst</fileline>
            <fileline lineNumber="261">#|#</fileline>
            <fileline lineNumber="262">#|# Base usage  : HTML_int_Menu_Generator_GEN "my_full_path" "int1 int2 intxxx"</fileline>
            <fileline lineNumber="263">#|#</fileline>
            <fileline lineNumber="264">#|# Description : This fuction create report menu</fileline>
            <fileline lineNumber="265">#|#</fileline>
            <fileline lineNumber="266">#|# Send Back   : HTML code</fileline>
            <fileline lineNumber="267">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="268">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="269">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="270">######################################################</fileline>
            <fileline lineNumber="271">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="272" />
            <fileline lineNumber="273" />
            <fileline lineNumber="274">HIMGG_Base_Menu_Directory="${1}"</fileline>
            <fileline lineNumber="275">HIMGG_INT_lst="${2}"</fileline>
            <fileline lineNumber="276" />
            <fileline lineNumber="277">Empty_Var_Control "${HIMGG_Base_Menu_Directory}" "HIMGG_Base_Menu_Directory" "4"</fileline>
            <fileline lineNumber="278" />
            <fileline lineNumber="279" />
            <fileline lineNumber="280">HTML_File_to_export="${HIMGG_Base_Menu_Directory}/index.html"</fileline>
            <fileline lineNumber="281" />
            <fileline lineNumber="282">echo  "&lt;html&gt;"                                                                         &gt;  ${HTML_File_to_export}</fileline>
            <fileline lineNumber="283">echo  "&lt;head&gt;"                                                                        &gt;&gt;  ${HTML_File_to_export}</fileline>
            <fileline lineNumber="284">echo  "&lt;meta content=\"text/html; charset=ISO-8859-1\" http-equiv=\"content-type\"&gt;"  &gt;&gt;  ${HTML_File_to_export}</fileline>
            <fileline lineNumber="285">echo  "&lt;title&gt;&lt;/title&gt;"                                                               &gt;&gt;  ${HTML_File_to_export}</fileline>
            <fileline lineNumber="286">echo  "&lt;/head&gt;"                                                                       &gt;&gt;  ${HTML_File_to_export}</fileline>
            <fileline lineNumber="287">echo  "&lt;body&gt;"                                                                        &gt;&gt;  ${HTML_File_to_export}</fileline>
            <fileline lineNumber="288">for ints in ${HIMGG_INT_lst}</fileline>
            <fileline lineNumber="289">   do</fileline>
            <fileline lineNumber="290">     echo  "&lt;a href=\"${ints}/index.html\"&gt;${ints}&lt;/a&gt;&lt;br&gt;"                           &gt;&gt;  ${HTML_File_to_export}</fileline>
            <fileline lineNumber="291">done</fileline>
            <fileline lineNumber="292">echo  "&lt;/body&gt;"                                                                       &gt;&gt;  ${HTML_File_to_export}</fileline>
            <fileline lineNumber="293">echo  "&lt;/html&gt;"                                                                       &gt;&gt;  ${HTML_File_to_export}</fileline>
            <fileline lineNumber="294" />
            <fileline lineNumber="295">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="296">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="297">####################################################</fileline>
            <fileline lineNumber="298">}</fileline>
            <fileline lineNumber="299" />
            <fileline lineNumber="300">function HTML_Internal_HTML_int_Menu_Generator_GEN</fileline>
            <fileline lineNumber="301">{</fileline>
            <fileline lineNumber="302">#|# Var to set  :</fileline>
            <fileline lineNumber="303">#|# HIHIMGG_Base_PATH_OF_FILES_INTS   : use this var to set chere to create the menu file</fileline>
            <fileline lineNumber="304">#|# HIMGG_INT_lst                     : use this var to set the ints list</fileline>
            <fileline lineNumber="305">#|# ${1}                              : use this var to set HIMGG_Base_Menu_Directory</fileline>
            <fileline lineNumber="306">#|# ${2}                              : use this var to set HIMGG_INT_lst</fileline>
            <fileline lineNumber="307">#|#</fileline>
            <fileline lineNumber="308">#|# Base usage  : HTML_Internal_HTML_int_Menu_Generator_GEN  "my_full_path" "int1 int2 intxxx"</fileline>
            <fileline lineNumber="309">#|#</fileline>
            <fileline lineNumber="310">#|# Description : This fuction create report menu</fileline>
            <fileline lineNumber="311">#|#</fileline>
            <fileline lineNumber="312">#|# Send Back   : HTML code</fileline>
            <fileline lineNumber="313">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="314">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="315">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="316">######################################################</fileline>
            <fileline lineNumber="317">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="318" />
            <fileline lineNumber="319" />
            <fileline lineNumber="320">HIHIMGG_Base_PATH_OF_FILES_INTS="${1}"</fileline>
            <fileline lineNumber="321">HIHIMGG_INT_lst="${2}"</fileline>
            <fileline lineNumber="322" />
            <fileline lineNumber="323">for HIHIMGG_ints in ${HIHIMGG_INT_lst}</fileline>
            <fileline lineNumber="324">    do</fileline>
            <fileline lineNumber="325">      HIHIMGG_HTML_File_to_export="${HIHIMGG_Base_PATH_OF_FILES_INTS}/${HIHIMGG_ints}/index.html"</fileline>
            <fileline lineNumber="326">      MSG_DISPLAY "debug" "0" "HTML File to export is set to : [ ${HIHIMGG_HTML_File_to_export} ] "</fileline>
            <fileline lineNumber="327" />
            <fileline lineNumber="328">      echo  "&lt;html&gt;"                                                                         &gt;  ${HIHIMGG_HTML_File_to_export}</fileline>
            <fileline lineNumber="329">      echo  "&lt;head&gt;"                                                                        &gt;&gt;  ${HIHIMGG_HTML_File_to_export}</fileline>
            <fileline lineNumber="330">      echo  "&lt;meta content=\"text/html; charset=ISO-8859-1\" http-equiv=\"content-type\"&gt;"  &gt;&gt;  ${HIHIMGG_HTML_File_to_export}</fileline>
            <fileline lineNumber="331">      echo  "&lt;title&gt;&lt;/title&gt;"                                                               &gt;&gt;  ${HIHIMGG_HTML_File_to_export}</fileline>
            <fileline lineNumber="332">      echo  "&lt;/head&gt;"                                                                       &gt;&gt;  ${HIHIMGG_HTML_File_to_export}</fileline>
            <fileline lineNumber="333">      echo  "&lt;body&gt;"                                                                        &gt;&gt;  ${HIHIMGG_HTML_File_to_export}</fileline>
            <fileline lineNumber="334">      for HIHIMGG_files in `ls ${HIHIMGG_Base_PATH_OF_FILES_INTS}/${HIHIMGG_ints}/ | egrep -v index `</fileline>
            <fileline lineNumber="335">          do</fileline>
            <fileline lineNumber="336">            HIHIMGG_File_Name_To_lnk=$( echo ${HIHIMGG_files} | awk -F\. '{ print $1 }' )</fileline>
            <fileline lineNumber="337">            echo  "&lt;a href=\"./${HIHIMGG_files}\"&gt;${HIHIMGG_File_Name_To_lnk}&lt;/a&gt;&lt;br&gt;"      &gt;&gt;  ${HIHIMGG_HTML_File_to_export}</fileline>
            <fileline lineNumber="338">          done</fileline>
            <fileline lineNumber="339">      done</fileline>
            <fileline lineNumber="340">      echo  "&lt;/body&gt;"                                                                       &gt;&gt;  ${HIHIMGG_HTML_File_to_export}</fileline>
            <fileline lineNumber="341">      echo  "&lt;/html&gt;"                                                                       &gt;&gt;  ${HIHIMGG_HTML_File_to_export}</fileline>
            <fileline lineNumber="342" />
            <fileline lineNumber="343">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="344">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="345">####################################################</fileline>
            <fileline lineNumber="346">}</fileline>
            <fileline lineNumber="347" />
            <fileline lineNumber="348">function HTML_Std_table_start</fileline>
            <fileline lineNumber="349">{</fileline>
            <fileline lineNumber="350">#|# Base_Menu_Directory   : use this var to set chere to create the menu file</fileline>
            <fileline lineNumber="351">#|# INT_lst               : use this var to set the ints list</fileline>
            <fileline lineNumber="352">#|# Base use              :</fileline>
            <fileline lineNumber="353">#|#                          Base_Menu_Directory="my_full_path"</fileline>
            <fileline lineNumber="354">#|#                          INT_lst="int1 int2 intxxx"</fileline>
            <fileline lineNumber="355">#|#                          HTML_int_Menu_Generator_GEN</fileline>
            <fileline lineNumber="356">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="357">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="358">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="359">######################################################</fileline>
            <fileline lineNumber="360">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="361" />
            <fileline lineNumber="362" />
            <fileline lineNumber="363" />
            <fileline lineNumber="364">HTML_File_to_export="${Base_Menu_Directory}/index.html"</fileline>
            <fileline lineNumber="365" />
            <fileline lineNumber="366">echo  "&lt;html&gt;"                                                                         &gt;  ${HTML_File_to_export}</fileline>
            <fileline lineNumber="367">echo  "&lt;head&gt;"                                                                        &gt;&gt;  ${HTML_File_to_export}</fileline>
            <fileline lineNumber="368">echo  "&lt;meta content=\"text/html; charset=ISO-8859-1\" http-equiv=\"content-type\"&gt;"  &gt;&gt;  ${HTML_File_to_export}</fileline>
            <fileline lineNumber="369">echo  "&lt;title&gt;&lt;/title&gt;"                                                               &gt;&gt;  ${HTML_File_to_export}</fileline>
            <fileline lineNumber="370">echo  "&lt;/head&gt;"                                                                       &gt;&gt;  ${HTML_File_to_export}</fileline>
            <fileline lineNumber="371">echo  "&lt;body&gt;"                                                                        &gt;&gt;  ${HTML_File_to_export}</fileline>
            <fileline lineNumber="372">for ints in ${INT_lst}</fileline>
            <fileline lineNumber="373">   do</fileline>
            <fileline lineNumber="374">     echo  "&lt;a href=\"${ints}/index.html\"&gt;${ints}&lt;/a&gt;&lt;br&gt;"                           &gt;&gt;  ${HTML_File_to_export}</fileline>
            <fileline lineNumber="375">done</fileline>
            <fileline lineNumber="376">echo  "&lt;/body&gt;"                                                                       &gt;&gt;  ${HTML_File_to_export}</fileline>
            <fileline lineNumber="377">echo  "&lt;/html&gt;"                                                                       &gt;&gt;  ${HTML_File_to_export}</fileline>
            <fileline lineNumber="378" />
            <fileline lineNumber="379">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="380">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="381">####################################################</fileline>
            <fileline lineNumber="382">}</fileline>
            <fileline lineNumber="383" />
            <fileline lineNumber="384" />
            <fileline lineNumber="385">function HTML_create_Frame</fileline>
            <fileline lineNumber="386">{</fileline>
            <fileline lineNumber="387">#|# Description : This fucnction create all needed frame for autodoc site</fileline>
            <fileline lineNumber="388" />
            <fileline lineNumber="389">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="390">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="391">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="392">######################################################</fileline>
            <fileline lineNumber="393">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="394" />
            <fileline lineNumber="395" />
            <fileline lineNumber="396">HCF_Number_Frame="${1}"</fileline>
            <fileline lineNumber="397">HCF_Name_Frame="${2}"</fileline>
            <fileline lineNumber="398" />
            <fileline lineNumber="399">HCF_NUM_From_Name="$(echo  ${HCF_Name_Frame} | awk '{ print NF }')"</fileline>
            <fileline lineNumber="400">if [ "${HCF_NUM_From_Name}"	= "${HCF_Name_Frame}" ]</fileline>
            <fileline lineNumber="401">   then</fileline>
            <fileline lineNumber="402">   	    MSG_DISPLAY "debug" "0" "Number of frame : [ ${HCF_Number_Frame} ]"</fileline>
            <fileline lineNumber="403">   	    HCF_Fnumb="1"</fileline>
            <fileline lineNumber="404">   	    for HCF_FName in</fileline>
            <fileline lineNumber="405">   	       do</fileline>
            <fileline lineNumber="406">   	       	  MSG_DISPLAY "debug" "0" "Name of frame number ${HCF_Fnumb} : [ ${HCF_Name_Frame} ] "</fileline>
            <fileline lineNumber="407">        done</fileline>
            <fileline lineNumber="408">   else</fileline>
            <fileline lineNumber="409">        MSG_DISPLAY "EdEMessage" "2" "Number of frame : [ ${HCF_Number_Frame} ] is not equal to : [ ${HCF_NUM_From_Name} ] "</fileline>
            <fileline lineNumber="410">fi</fileline>
            <fileline lineNumber="411" />
            <fileline lineNumber="412">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="413">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="414">####################################################</fileline>
            <fileline lineNumber="415">}</fileline>
            <fileline lineNumber="416" />
            <fileline lineNumber="417" />
            <fileline lineNumber="418" />
            <fileline lineNumber="419"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/web/internet_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/ksh</fileline>
            <fileline lineNumber="2">###############################################################################</fileline>
            <fileline lineNumber="3"># Internet.lib                                         Version : 1.1          #</fileline>
            <fileline lineNumber="4">#                                                                             #</fileline>
            <fileline lineNumber="5"># Creation Date : 13/10/2006                                                  #</fileline>
            <fileline lineNumber="6"># Team          : Only me                                           #</fileline>
            <fileline lineNumber="7"># Support mail  : doraken@doraken.net                                          #</fileline>
            <fileline lineNumber="8"># Author        : Arnaud Crampet                                              #</fileline>
            <fileline lineNumber="9">#                                                                             #</fileline>
            <fileline lineNumber="10"># Subject : This lib is used to provide any function about web and download   #</fileline>
            <fileline lineNumber="11">#                                                                             #</fileline>
            <fileline lineNumber="12">###############################################################################</fileline>
            <fileline lineNumber="13">####</fileline>
            <fileline lineNumber="14"># INFO</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">############################</fileline>
            <fileline lineNumber="17" />
            <fileline lineNumber="18" />
            <fileline lineNumber="19" />
            <fileline lineNumber="20">function Internet_Http_Get</fileline>
            <fileline lineNumber="21">{</fileline>
            <fileline lineNumber="22">#|# Base_Param_URL          : Use this var to set the base URL tu use for WGET</fileline>
            <fileline lineNumber="23">#|# Base_Param_File_To_Get  : Use this var to set the file to download with WGET</fileline>
            <fileline lineNumber="24">#|# PWD_Recept_PKG           : Use this var to set the directory for reception of file downloaded</fileline>
            <fileline lineNumber="25">#|# Base use :</fileline>
            <fileline lineNumber="26">#|#           Internet_Http_Get "My_pkg_URL" "My_pkg" "My_pkg_repository"</fileline>
            <fileline lineNumber="27">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="28">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="29">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="30">######################################################</fileline>
            <fileline lineNumber="31">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="32" />
            <fileline lineNumber="33" />
            <fileline lineNumber="34" />
            <fileline lineNumber="35">local Base_Param_URL="${1}"</fileline>
            <fileline lineNumber="36">local Base_Param_File_To_Get="${2}"</fileline>
            <fileline lineNumber="37">local PWD_Recept_PKG="${3}"</fileline>
            <fileline lineNumber="38">local Base_Url_Parameter="${4}"</fileline>
            <fileline lineNumber="39" />
            <fileline lineNumber="40">Control_Check_wget_status</fileline>
            <fileline lineNumber="41" />
            <fileline lineNumber="42">MSG_DISPLAY "debug" "0" "Recept Directory is set to  : [ ${PWD_Recept_PKG} ] "</fileline>
            <fileline lineNumber="43" />
            <fileline lineNumber="44">Set_new_directory "${PWD_Recept_PKG}"</fileline>
            <fileline lineNumber="45" />
            <fileline lineNumber="46">if [ -e "${PWD_Recept_PKG}/${Base_Param_File_To_Get}" ]</fileline>
            <fileline lineNumber="47">   then</fileline>
            <fileline lineNumber="48">      MSG_DISPLAY "info" "1" "File Allready Downloaded : [ ${Base_Param_File_To_Get} : OK ]  ] "</fileline>
            <fileline lineNumber="49">   else</fileline>
            <fileline lineNumber="50">        DLW_Final_URL="${Base_Param_URL}/${Base_Param_File_To_Get}${Base_Url_Parameter}"</fileline>
            <fileline lineNumber="51">        MSG_DISPLAY "debug" "0" "DLW_Final_URL is set to   : [ ${DLW_Final_URL} ] "</fileline>
            <fileline lineNumber="52">        ${Global_Tool_wget_bin}  ${WGET_OPTIONS} --directory-prefix=${PWD_Recept_PKG} ${DLW_Final_URL}</fileline>
            <fileline lineNumber="53">        if [ ! -e "${PWD_Recept_PKG}/${Base_Param_File_To_Get}" ]</fileline>
            <fileline lineNumber="54">           then</fileline>
            <fileline lineNumber="55">               MSG_DISPLAY "EdEMessage" "1" " File Downloaded : [ ${Base_Param_File_To_Get} : Failled ]  " </fileline>
            <fileline lineNumber="56">           else</fileline>
            <fileline lineNumber="57">               MSG_DISPLAY "info" "1" "File Downloaded : [ ${Base_Param_File_To_Get} : OK ]  ] "</fileline>
            <fileline lineNumber="58">         fi</fileline>
            <fileline lineNumber="59">  fi</fileline>
            <fileline lineNumber="60" />
            <fileline lineNumber="61">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="62">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="63">####################################################</fileline>
            <fileline lineNumber="64">}</fileline>
            <fileline lineNumber="65"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/automated_check/rebuider_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                                            #</fileline>
            <fileline lineNumber="5"># Subject : This library provide base runtime to rebuild any files like       #</fileline>
            <fileline lineNumber="6">#           calatolgue or configuration files                                 #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO </fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11">function rebuild_catalogue</fileline>
            <fileline lineNumber="12">{</fileline>
            <fileline lineNumber="13">#|#  Catalogue_type                       : Use this var to set which type of catalogue to rebuild  | rebuild_catalogue_INF#</fileline>
            <fileline lineNumber="14">#|#  ${1}                                 : use this var to set ${Catalogue_type}                   | rebuild_catalogue_INF#</fileline>
            <fileline lineNumber="15">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="16">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="17">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="18">######################################################</fileline>
            <fileline lineNumber="19">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="20" />
            <fileline lineNumber="21" />
            <fileline lineNumber="22">local Catalogue_type="${1}"</fileline>
            <fileline lineNumber="23">Empty_Var_Control "${Catalogue_type}" "Catalogue_type" "4"</fileline>
            <fileline lineNumber="24" />
            <fileline lineNumber="25" />
            <fileline lineNumber="26">case ${Catalogue_type} in </fileline>
            <fileline lineNumber="27">	                File_catalogue) MSG_DISPLAY "debug" "0" " Choosed type of Catalogue to rebuild : [ ${Catalogue_type} ] "  </fileline>
            <fileline lineNumber="28">                                    rebuild_catalogue_File</fileline>
            <fileline lineNumber="29">	                                ;;</fileline>
            <fileline lineNumber="30">	                             *) MSG_DISPLAY "EdEMessage" "2" "This rebuild is not supported yet TYPE = [ ${Catalogue_type} ]"            </fileline>
            <fileline lineNumber="31">	                                ;;</fileline>
            <fileline lineNumber="32">esac</fileline>
            <fileline lineNumber="33" />
            <fileline lineNumber="34" />
            <fileline lineNumber="35">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="36">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="37">#################################################### </fileline>
            <fileline lineNumber="38">}</fileline>
            <fileline lineNumber="39" />
            <fileline lineNumber="40">function rebuild_catalogue_File</fileline>
            <fileline lineNumber="41">{</fileline>
            <fileline lineNumber="42">#|# Base_Source_Catalogue                     : use this var to set source file catalogue</fileline>
            <fileline lineNumber="43">#|# ${1}                                      : Use this var to set Base_Source_Catalogue</fileline>
            <fileline lineNumber="44">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="45">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="46">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="47">######################################################</fileline>
            <fileline lineNumber="48">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="49" />
            <fileline lineNumber="50" />
            <fileline lineNumber="51">Test_file_presence "${Global_File_CATALOG}" "Dont_Create_File" "criticity_of_fail"  "SUB_rebuild_catalogue_File_Global_cat"  "SUB_rebuild_catalogue_File_Global_cat_menu"</fileline>
            <fileline lineNumber="52">SUB_rebuild_catalogue_File_Global_Consystency_check</fileline>
            <fileline lineNumber="53" />
            <fileline lineNumber="54">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="55">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="56">#################################################### </fileline>
            <fileline lineNumber="57">}</fileline>
            <fileline lineNumber="58" />
            <fileline lineNumber="59">function SUB_rebuild_catalogue_File_Global_Consystency_check</fileline>
            <fileline lineNumber="60">{</fileline>
            <fileline lineNumber="61">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="62">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="63">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="64">######################################################</fileline>
            <fileline lineNumber="65">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="66" />
            <fileline lineNumber="67" />
            <fileline lineNumber="68">Last_catalogue_line="$(tail -1 ${Global_File_CATALOG})"</fileline>
            <fileline lineNumber="69" />
            <fileline lineNumber="70" />
            <fileline lineNumber="71">MSG_DISPLAY "StMessage" "5" "Consystency check : "</fileline>
            <fileline lineNumber="72">if [ "${Last_catalogue_line}" = "FLAGEND_CATALOG" ] </fileline>
            <fileline lineNumber="73">   then </fileline>
            <fileline lineNumber="74">   	   MSG_DISPLAY "EdSMessage" "0" " "</fileline>
            <fileline lineNumber="75">   else </fileline>
            <fileline lineNumber="76">       MSG_DISPLAY "EdEMessage" "0" " "</fileline>
            <fileline lineNumber="77">       MSG_DISPLAY "info" "1"   "due to a failled Consystency check the catalogue will be  automaticaly rebuilded "</fileline>
            <fileline lineNumber="78">       SUB_rebuild_catalogue_File_Global_cat</fileline>
            <fileline lineNumber="79">fi</fileline>
            <fileline lineNumber="80">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="81">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="82">#################################################### 	</fileline>
            <fileline lineNumber="83">}</fileline>
            <fileline lineNumber="84" />
            <fileline lineNumber="85">function SUB_rebuild_catalogue_File_Global_cat_menu</fileline>
            <fileline lineNumber="86">{</fileline>
            <fileline lineNumber="87">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="88">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="89">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="90">######################################################</fileline>
            <fileline lineNumber="91">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="92" />
            <fileline lineNumber="93" />
            <fileline lineNumber="94">Base_catalogue_Date=$(head -1 ${Global_File_CATALOG})</fileline>
            <fileline lineNumber="95" />
            <fileline lineNumber="96">if [ ${Iterate_one_rebuilde_cat} = "1" ] </fileline>
            <fileline lineNumber="97">  then </fileline>
            <fileline lineNumber="98">  	   MSG_DISPLAY "debug" "0" "Already rebuilded global CAT"</fileline>
            <fileline lineNumber="99">  else</fileline>
            <fileline lineNumber="100">      clear </fileline>
            <fileline lineNumber="101">      Iterate_one_rebuilde_cat=1</fileline>
            <fileline lineNumber="102">      select choice in " Rebuild Global Catalogue [ Last rebuild on : ${Base_catalogue_Date} ] " \</fileline>
            <fileline lineNumber="103">		                " Continue with actual catalogue " </fileline>
            <fileline lineNumber="104">		             do</fileline>
            <fileline lineNumber="105">			            case ${REPLY} in</fileline>
            <fileline lineNumber="106">				                         1) SUB_rebuild_catalogue_File_Global_cat</fileline>
            <fileline lineNumber="107">				                            SUB_rebuild_catalogue_File_SPEC_cat</fileline>
            <fileline lineNumber="108">				                            break</fileline>
            <fileline lineNumber="109">					                        ;;</fileline>
            <fileline lineNumber="110">				                         2) clear</fileline>
            <fileline lineNumber="111">				                            SUB_rebuild_catalogue_File_SPEC_cat</fileline>
            <fileline lineNumber="112">				                            break</fileline>
            <fileline lineNumber="113">					                        ;;</fileline>
            <fileline lineNumber="114">				                         *) clear </fileline>
            <fileline lineNumber="115">				                            MSG_DISPLAY "info" "1" "Invalid choice assuming to continue"</fileline>
            <fileline lineNumber="116">				                            break</fileline>
            <fileline lineNumber="117">				                            ;;</fileline>
            <fileline lineNumber="118">			            esac</fileline>
            <fileline lineNumber="119">      done</fileline>
            <fileline lineNumber="120">fi</fileline>
            <fileline lineNumber="121" />
            <fileline lineNumber="122" />
            <fileline lineNumber="123">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="124">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="125">#################################################### 	</fileline>
            <fileline lineNumber="126">}</fileline>
            <fileline lineNumber="127" />
            <fileline lineNumber="128" />
            <fileline lineNumber="129">function SUB_rebuild_catalogue_File_Global_cat</fileline>
            <fileline lineNumber="130">{</fileline>
            <fileline lineNumber="131">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="132">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="133">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="134">######################################################</fileline>
            <fileline lineNumber="135">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="136" />
            <fileline lineNumber="137" />
            <fileline lineNumber="138">MSG_DISPLAY "info" "1" "Stating Global file catalogue regen it may take serveral minutes please wait ]"</fileline>
            <fileline lineNumber="139">date &gt; ${Global_File_CATALOG}</fileline>
            <fileline lineNumber="140">MSG_DISPLAY "info" "1" "Generating USR info"</fileline>
            <fileline lineNumber="141">find /usr &gt;&gt; ${Global_File_CATALOG}</fileline>
            <fileline lineNumber="142">MSG_DISPLAY "info" "1" "Generating OPT info"</fileline>
            <fileline lineNumber="143">find /opt &gt;&gt; ${Global_File_CATALOG}</fileline>
            <fileline lineNumber="144">MSG_DISPLAY "info" "1" "Generating etc info"</fileline>
            <fileline lineNumber="145">find /etc &gt;&gt; ${Global_File_CATALOG}</fileline>
            <fileline lineNumber="146">echo  "FLAGEND_CATALOG"  &gt;&gt; ${Global_File_CATALOG}</fileline>
            <fileline lineNumber="147">MSG_DISPLAY "info" "1" "Stating Global file catalogue regen : [ FINISHED ]"</fileline>
            <fileline lineNumber="148" />
            <fileline lineNumber="149" />
            <fileline lineNumber="150" />
            <fileline lineNumber="151">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="152">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="153">#################################################### 	</fileline>
            <fileline lineNumber="154">}</fileline>
            <fileline lineNumber="155" />
            <fileline lineNumber="156" />
            <fileline lineNumber="157">function SUB_rebuild_catalogue_File_SPEC_cat</fileline>
            <fileline lineNumber="158">{</fileline>
            <fileline lineNumber="159">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="160">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="161">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="162">######################################################</fileline>
            <fileline lineNumber="163">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="164" />
            <fileline lineNumber="165">Get_system_random_,number</fileline>
            <fileline lineNumber="166">TMP_file_cat=${Base_Dir_Scripts_Tmp}/${EXTERNAL_randomized_var}_spec_cat.cat</fileline>
            <fileline lineNumber="167">date &gt;&gt; ${TMP_file_cat}</fileline>
            <fileline lineNumber="168">iterate_count="0"</fileline>
            <fileline lineNumber="169">for CHROOT_file in $(cat ${catalogue_used}) </fileline>
            <fileline lineNumber="170">    do </fileline>
            <fileline lineNumber="171">     clear</fileline>
            <fileline lineNumber="172">     iterate_count="$(expr ${iterate_count} + 1 )"</fileline>
            <fileline lineNumber="173">     eval  echo  " Listed Item for chroot creation [ ${CHROOT_BASE_DIR}/${CHROOT_file} ] "</fileline>
            <fileline lineNumber="174">     Get_file_type "/${CHROOT_file}" "SUB_rebuild_catalogue_get_file" "SUB_rebuild_catalogue_put_file" </fileline>
            <fileline lineNumber="175">done</fileline>
            <fileline lineNumber="176">echo  "FLAGEND_CATALOG" &gt;&gt; ${TMP_file_cat}</fileline>
            <fileline lineNumber="177">File_Backup "${catalogue_used}" </fileline>
            <fileline lineNumber="178">mv ${TMP_file_cat} ${catalogue_used}</fileline>
            <fileline lineNumber="179">exit 0 ; ${Relaunch}</fileline>
            <fileline lineNumber="180" />
            <fileline lineNumber="181">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="182">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="183">#################################################### 	</fileline>
            <fileline lineNumber="184">}</fileline>
            <fileline lineNumber="185" />
            <fileline lineNumber="186">function SUB_rebuild_catalogue_get_file </fileline>
            <fileline lineNumber="187">{</fileline>
            <fileline lineNumber="188">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="189">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="190">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="191">######################################################</fileline>
            <fileline lineNumber="192">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="193" />
            <fileline lineNumber="194" />
            <fileline lineNumber="195">StMessage</fileline>
            <fileline lineNumber="196">MSG_DISPLAY "StMessage" "0" "Searching in Global Catalogue ${CHROOT_file}"</fileline>
            <fileline lineNumber="197">cat ${Global_File_CATALOG} | grep "${CHROOT_file}$"</fileline>
            <fileline lineNumber="198">if [ ${?} = "1" ]</fileline>
            <fileline lineNumber="199">    then</fileline>
            <fileline lineNumber="200">    	 MSG_DISPLAY "EdEMessage" "0" ""</fileline>
            <fileline lineNumber="201">    else</fileline>
            <fileline lineNumber="202">         cat ${Global_File_CATALOG} | grep "${CHROOT_file}$" &gt;&gt; ${TMP_file_cat}</fileline>
            <fileline lineNumber="203">fi </fileline>
            <fileline lineNumber="204" />
            <fileline lineNumber="205" />
            <fileline lineNumber="206">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="207">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="208">#################################################### 	</fileline>
            <fileline lineNumber="209">}</fileline>
            <fileline lineNumber="210" />
            <fileline lineNumber="211" />
            <fileline lineNumber="212">function SUB_rebuild_catalogue_put_file</fileline>
            <fileline lineNumber="213">{</fileline>
            <fileline lineNumber="214">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="215">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="216">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="217">######################################################</fileline>
            <fileline lineNumber="218">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="219" />
            <fileline lineNumber="220" />
            <fileline lineNumber="221">echo  "${CHROOT_file}"  &gt;&gt; ${TMP_file_cat}</fileline>
            <fileline lineNumber="222" />
            <fileline lineNumber="223">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="224">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="225">#################################################### 	</fileline>
            <fileline lineNumber="226">}</fileline>
            <fileline lineNumber="227" />
            <fileline lineNumber="228"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/automated_check/sanity_check_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                                                  #</fileline>
            <fileline lineNumber="5"># Subject : This library provide base auto sanity check to control sript env  #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># Info</fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11">function SANITY_CHECK_Base_env_directory_check</fileline>
            <fileline lineNumber="12">{</fileline>
            <fileline lineNumber="13">#|# Var to set  : None</fileline>
            <fileline lineNumber="14">#|#</fileline>
            <fileline lineNumber="15">#|# Base usage  : SANITY_CHECK_Base_env_directory_check</fileline>
            <fileline lineNumber="16">#|#</fileline>
            <fileline lineNumber="17">#|# Description : This function check and create all mandatory directories needed for CAST execution</fileline>
            <fileline lineNumber="18">#|#</fileline>
            <fileline lineNumber="19">#|# Send Back   : Directory</fileline>
            <fileline lineNumber="20">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="21">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="22">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="23">######################################################</fileline>
            <fileline lineNumber="24">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="25" />
            <fileline lineNumber="26" />
            <fileline lineNumber="27">MSG_DISPLAY "info" "1" "Directory Sanity check [ STARTING ] "</fileline>
            <fileline lineNumber="28">if [ "${SANITY_CHECK_Base_env_directory_check_exec}" = "1" ]</fileline>
            <fileline lineNumber="29">   then</fileline>
            <fileline lineNumber="30">   	   MSG_DISPLAY "debug" "0" "Sanity check for generic tmp already done"</fileline>
            <fileline lineNumber="31">   else</fileline>
            <fileline lineNumber="32">      for _Config_File in $( find ${Base_Dir_Scripts_CNF} -type f -name \*.cnf  ) </fileline>
            <fileline lineNumber="33">         do </fileline>
            <fileline lineNumber="34">            MSG_DISPLAY "info" "1" "checking base directory for config file : [ ${_Config_File} ] "</fileline>
            <fileline lineNumber="35">            for Dirs in $( cat ${_Config_File} | grep "DIR_To_CHECK" | awk '{ print $1 }' | awk -F\= '{print "\$\{"$1"\}" }' 2&gt; /dev/null )</fileline>
            <fileline lineNumber="36">                do</fileline>
            <fileline lineNumber="37">                    Dirs="$( eval echo ${Dirs} )"</fileline>
            <fileline lineNumber="38">                    Edir="$( eval echo ${Dirs} )"</fileline>
            <fileline lineNumber="39">                    #MSG_DISPLAY "info" "1" "checking base directory  : [ ${Dirs} ] "</fileline>
            <fileline lineNumber="40">                    Set_new_directory   "${Edir}"</fileline>
            <fileline lineNumber="41">                done</fileline>
            <fileline lineNumber="42">        done</fileline>
            <fileline lineNumber="43">fi</fileline>
            <fileline lineNumber="44" />
            <fileline lineNumber="45">SANITY_CHECK_Base_env_directory_check_exec="1"</fileline>
            <fileline lineNumber="46">Spacer_MSG</fileline>
            <fileline lineNumber="47">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="48">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="49">####################################################</fileline>
            <fileline lineNumber="50">}</fileline>
            <fileline lineNumber="51" />
            <fileline lineNumber="52" />
            <fileline lineNumber="53" />
            <fileline lineNumber="54" />
            <fileline lineNumber="55">function SANITY_CHECK_Base_env_directory_check_specs</fileline>
            <fileline lineNumber="56">{</fileline>
            <fileline lineNumber="57">#|# Var to set  : None</fileline>
            <fileline lineNumber="58">#|#</fileline>
            <fileline lineNumber="59">#|# Base usage  : SANITY_CHECK_Base_env_directory_check</fileline>
            <fileline lineNumber="60">#|#</fileline>
            <fileline lineNumber="61">#|# Description : This function check and create all mandatory directories needed for CAST execution</fileline>
            <fileline lineNumber="62">#|#</fileline>
            <fileline lineNumber="63">#|# Send Back   : Directory</fileline>
            <fileline lineNumber="64">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="65">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="66">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="67">######################################################</fileline>
            <fileline lineNumber="68">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="69" />
            <fileline lineNumber="70" />
            <fileline lineNumber="71">if [ -z "${Conf_Specifics}" ]</fileline>
            <fileline lineNumber="72">   then</fileline>
            <fileline lineNumber="73">       MSG_DISPLAY "info" "1" "Specifics configuration file  : [ ERROR : NULL VALUE ] "</fileline>
            <fileline lineNumber="74">   else</fileline>
            <fileline lineNumber="75">       if [ "${Conf_Specifics}" = "dummy" ]</fileline>
            <fileline lineNumber="76">          then</fileline>
            <fileline lineNumber="77">              MSG_DISPLAY "info" "1" "Specifics configuration file : [ NONE ] "</fileline>
            <fileline lineNumber="78">          else</fileline>
            <fileline lineNumber="79">              echo  "${Base_Dir_Scripts_CNF_spec}/${Conf_Specifics} ---"</fileline>
            <fileline lineNumber="80">         cat ${Base_Dir_Scripts_CNF_spec}/${Conf_Specifics} | grep "DIR_To_CHECK" | awk '{ print $1 }' | awk -F\= '{print "\$\{"$1"\}" }' </fileline>
            <fileline lineNumber="81">              for Dirs in $( cat ${Base_Dir_Scripts_CNF_spec}/${Conf_Specifics} | grep "DIR_To_CHECK" | awk '{ print $1 }' | awk -F\= '{print "\$\{"$1"\}" }' 2&gt; /dev/null )</fileline>
            <fileline lineNumber="82">                  do     Dirs=$( eval echo ${Dirs} )</fileline>
            <fileline lineNumber="83">                         MSG_DISPLAY "info" "1" "checking base directory  : [ ${Dirs} ] "</fileline>
            <fileline lineNumber="84">                         Dirs=$( eval echo ${Dirs}) </fileline>
            <fileline lineNumber="85">                         Set_new_directory   "${Dirs}"</fileline>
            <fileline lineNumber="86">                         pause</fileline>
            <fileline lineNumber="87">                   done</fileline>
            <fileline lineNumber="88">        fi</fileline>
            <fileline lineNumber="89">fi</fileline>
            <fileline lineNumber="90">MSG_DISPLAY "info" "1" "Directory Sanity check [ END ] "</fileline>
            <fileline lineNumber="91" />
            <fileline lineNumber="92">SANITY_CHECK_Base_env_directory_check_exec="1"</fileline>
            <fileline lineNumber="93">Spacer_MSG</fileline>
            <fileline lineNumber="94">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="95">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="96">####################################################</fileline>
            <fileline lineNumber="97">}</fileline>
            <fileline lineNumber="98" />
            <fileline lineNumber="99">function SANITY_CHECK_Base_root_exec_check</fileline>
            <fileline lineNumber="100">{</fileline>
            <fileline lineNumber="101">#|# Var to set  : None</fileline>
            <fileline lineNumber="102">#|#</fileline>
            <fileline lineNumber="103">#|# Base usage  : SANITY_CHECK_Base_root_exec_check</fileline>
            <fileline lineNumber="104">#|#</fileline>
            <fileline lineNumber="105">#|# Description : This function check if you are using root to execute CAST</fileline>
            <fileline lineNumber="106">#|#               If active it will prompt for user confirmation and send back execution in root mode in system log</fileline>
            <fileline lineNumber="107">#|#</fileline>
            <fileline lineNumber="108">#|# Send Back   : User Check</fileline>
            <fileline lineNumber="109">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="110">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="111">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="112">######################################################</fileline>
            <fileline lineNumber="113">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="114" />
            <fileline lineNumber="115">Spacer_MSG</fileline>
            <fileline lineNumber="116" />
            <fileline lineNumber="117">MSG_DISPLAY "info" "1" "User Sanity check [ STARTING ] "</fileline>
            <fileline lineNumber="118">My_Current_User=$( id | awk -F "[\(\)]" '{ print $2 }' 2&gt; /dev/null )</fileline>
            <fileline lineNumber="119">if [ "${My_Current_User}" = "root" ]</fileline>
            <fileline lineNumber="120">   then</fileline>
            <fileline lineNumber="121">       MSG_DISPLAY "info" "1" "Your are currently running CAST toolBox with \"root\" account "</fileline>
            <fileline lineNumber="122">   	   PS3="Do you want to exit ? [ it's better to exit ] "</fileline>
            <fileline lineNumber="123">       select Result in "Continue" "EXIT"</fileline>
            <fileline lineNumber="124">              do</fileline>
            <fileline lineNumber="125">                case ${Result} in</fileline>
            <fileline lineNumber="126">	                 "Continue") MSG_DISPLAY "Warning1" "User select to user root account"</fileline>
            <fileline lineNumber="127">	                      My_Ident="$(who i am | awk '{ print $1 }')"</fileline>
            <fileline lineNumber="128">	                      MSG_DISPLAY "LoggerN"  " $( date ) CAST scripting user whith root account by [ ${My_Ident} ] "</fileline>
            <fileline lineNumber="129">	                      ;;</fileline>
            <fileline lineNumber="130">	                  "EXIT") MSG_DISPLAY "EdEMessage" "1" "User select to exit"  </fileline>
            <fileline lineNumber="131">	                      ;;</fileline>
            <fileline lineNumber="132">	                  *) MSG_DISPLAY "EdEMessage" "1" "Bad input exit [ ${Result} ] "  </fileline>
            <fileline lineNumber="133">	                      ;;</fileline>
            <fileline lineNumber="134">                 esac</fileline>
            <fileline lineNumber="135">        done</fileline>
            <fileline lineNumber="136">      else</fileline>
            <fileline lineNumber="137">       MSG_DISPLAY "info" "1" "you are currently running CAST toolBox with [ ${My_Current_User} ] "</fileline>
            <fileline lineNumber="138">       MSG_DISPLAY "LoggerN" "1" "CAST toolBox launched with [ ${My_Current_User} ] at $( date ) "  </fileline>
            <fileline lineNumber="139">fi</fileline>
            <fileline lineNumber="140">MSG_DISPLAY "info" "1" "User Sanity check [ END ] "</fileline>
            <fileline lineNumber="141" />
            <fileline lineNumber="142">Spacer_MSG</fileline>
            <fileline lineNumber="143">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="144">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="145">####################################################</fileline>
            <fileline lineNumber="146">}</fileline>
            <fileline lineNumber="147" />
            <fileline lineNumber="148" />
            <fileline lineNumber="149">function SANITY_CHECK_Check_TMP_Directory</fileline>
            <fileline lineNumber="150">{</fileline>
            <fileline lineNumber="151">#|# Var to set  : None</fileline>
            <fileline lineNumber="152">#|#</fileline>
            <fileline lineNumber="153">#|# Base usage  : SANITY_CHECK_Check_TMP_Directory</fileline>
            <fileline lineNumber="154">#|#</fileline>
            <fileline lineNumber="155">#|# Description : This function check and create all mandatory writable directories needed for CAST execution</fileline>
            <fileline lineNumber="156">#|#</fileline>
            <fileline lineNumber="157">#|# Send Back   : writables Directory</fileline>
            <fileline lineNumber="158">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="159">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="160">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="161">######################################################</fileline>
            <fileline lineNumber="162">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="163" />
            <fileline lineNumber="164">Spacer_MSG</fileline>
            <fileline lineNumber="165">if [ "${SANITY_CHECK_Check_TMP_Directory_exec}" = "1" ]</fileline>
            <fileline lineNumber="166">   then</fileline>
            <fileline lineNumber="167">   	   MSG_DISPLAY "debug" "0" "Sanity check for generic tmp already done"</fileline>
            <fileline lineNumber="168">   else</fileline>
            <fileline lineNumber="169">       for Dirs in $( cat ${Conf_Generics} | grep "DIR_To_CHECK_TMP" | awk '{ print $1 }' | awk -F\= '{print "\$\{"$1"\}" }' 2&gt; /dev/null )</fileline>
            <fileline lineNumber="170">           do Dirs=$( eval echo ${Dirs} )</fileline>
            <fileline lineNumber="171">           echo  ${Dirs} | grep tmp  &gt; /dev/null</fileline>
            <fileline lineNumber="172">           if  [ "${?}" = "0" ]</fileline>
            <fileline lineNumber="173">              then</fileline>
            <fileline lineNumber="174">                  IS_Writable "${Dirs}" "1"</fileline>
            <fileline lineNumber="175">               else</fileline>
            <fileline lineNumber="176">                   MSG_DISPLAY "debug" "0" "Directory ${Dirs} is : [ Not a temporary Directory ] "</fileline>
            <fileline lineNumber="177">            fi</fileline>
            <fileline lineNumber="178">        done</fileline>
            <fileline lineNumber="179">fi</fileline>
            <fileline lineNumber="180">if [ -z "${Conf_Specifics}" ]</fileline>
            <fileline lineNumber="181">   then</fileline>
            <fileline lineNumber="182">       MSG_DISPLAY "info" "1" "Specifics configuration file  : [ ERROR : NULL VALUE ] "</fileline>
            <fileline lineNumber="183">   else</fileline>
            <fileline lineNumber="184">       if [ "${Conf_Specifics}" = "dummy" ]</fileline>
            <fileline lineNumber="185">          then</fileline>
            <fileline lineNumber="186">              MSG_DISPLAY "info" "1" "Specifics configuration file : [ NONE ] "</fileline>
            <fileline lineNumber="187">          else</fileline>
            <fileline lineNumber="188">              for Dirs in $( cat ${Base_Dir_Scripts_CNF_spec}/${Conf_Specifics} | grep "DIR_To_CHECK_TMP" | awk '{ print $1 }' | awk -F\= '{print "\$\{"$1"\}" }' 2&gt; /dev/null )</fileline>
            <fileline lineNumber="189">                  do Dirs=$( eval echo ${Dirs} )</fileline>
            <fileline lineNumber="190">                     echo    "${Dirs}" | grep tmp  &gt; /dev/null</fileline>
            <fileline lineNumber="191">                    if  [ "${?}" = "0" ]</fileline>
            <fileline lineNumber="192">                      then</fileline>
            <fileline lineNumber="193">        	              IS_Writable "${Dirs}" "1"</fileline>
            <fileline lineNumber="194">                      else</fileline>
            <fileline lineNumber="195">   	                      MSG_DISPLAY "debug" "0" "Directory ${Dirs} is : [ Not a temporary Directory ] "</fileline>
            <fileline lineNumber="196">                    fi</fileline>
            <fileline lineNumber="197">                done</fileline>
            <fileline lineNumber="198">       fi</fileline>
            <fileline lineNumber="199">fi</fileline>
            <fileline lineNumber="200">SANITY_CHECK_Check_TMP_Directory_exec="1"</fileline>
            <fileline lineNumber="201">Spacer_MSG</fileline>
            <fileline lineNumber="202">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="203">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="204">####################################################</fileline>
            <fileline lineNumber="205">}</fileline>
            <fileline lineNumber="206" />
            <fileline lineNumber="207">function SANITY_CHECK_Check_Language</fileline>
            <fileline lineNumber="208">{</fileline>
            <fileline lineNumber="209">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="210">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="211">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="212">######################################################</fileline>
            <fileline lineNumber="213">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="214" />
            <fileline lineNumber="215">Spacer_MSG</fileline>
            <fileline lineNumber="216">if [ "${LANG}" = "${Base_Script_Language}" ]</fileline>
            <fileline lineNumber="217">   then</fileline>
            <fileline lineNumber="218">   	   MSG_DISPLAY "info" "6" "System language  : [ ${LANG} ] "</fileline>
            <fileline lineNumber="219">   else</fileline>
            <fileline lineNumber="220">       MSG_DISPLAY "debug" "0" "System language  : [ ${LANG} ] "</fileline>
            <fileline lineNumber="221">       MSG_DISPLAY "debug" "0" " ACTION : [ Overriding system default language  ] "</fileline>
            <fileline lineNumber="222">       LANG="${Base_Script_Language}"</fileline>
            <fileline lineNumber="223">       LANGUAGE="${Base_Script_Language}"</fileline>
            <fileline lineNumber="224">       LC_ALL="${Base_Script_Language}"</fileline>
            <fileline lineNumber="225">       ### TODO add full language check</fileline>
            <fileline lineNumber="226">       export LANGUAGE</fileline>
            <fileline lineNumber="227">       export LANG</fileline>
            <fileline lineNumber="228">       export LC_ALL</fileline>
            <fileline lineNumber="229">       if [ "${LANG}" = "${Base_Script_Language}" ]</fileline>
            <fileline lineNumber="230">          then</fileline>
            <fileline lineNumber="231">   	          MSG_DISPLAY "debug" "0" "Overrided System language  : [ ${LANG} ] "</fileline>
            <fileline lineNumber="232">          else</fileline>
            <fileline lineNumber="233">              MSG_DISPLAY "debug" "0" "Overrid System language  : [ ERROR ] "</fileline>
            <fileline lineNumber="234">              MSG_DISPLAY "debug" "0" "Somme problem on messaging display may appear  "</fileline>
            <fileline lineNumber="235">       fi</fileline>
            <fileline lineNumber="236">fi</fileline>
            <fileline lineNumber="237">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="238">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="239">####################################################</fileline>
            <fileline lineNumber="240">}</fileline>
            <fileline lineNumber="241" />
            <fileline lineNumber="242">function SANITY_CHECK_cnf_file</fileline>
            <fileline lineNumber="243">{</fileline>
            <fileline lineNumber="244">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="245">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="246">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="247">######################################################</fileline>
            <fileline lineNumber="248">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="249" />
            <fileline lineNumber="250" />
            <fileline lineNumber="251" />
            <fileline lineNumber="252" />
            <fileline lineNumber="253">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="254">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="255">####################################################</fileline>
            <fileline lineNumber="256">}</fileline>
            <fileline lineNumber="257" />
            <fileline lineNumber="258">function SANITY_CHECK_tools</fileline>
            <fileline lineNumber="259">{</fileline>
            <fileline lineNumber="260">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="261">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="262">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="263">######################################################</fileline>
            <fileline lineNumber="264">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="265" />
            <fileline lineNumber="266" />
            <fileline lineNumber="267">Set_tool_global_status</fileline>
            <fileline lineNumber="268" />
            <fileline lineNumber="269">Fil_Get_Items "EXEC_Global_MANDATORY_control_sanity" "1" "${Base_Dir_Scripts_Lib}/system_base/tool_lib.sh" "="</fileline>
            <fileline lineNumber="270" />
            <fileline lineNumber="271">for SCT_items  in ${GLOBAL_FGI_Selected_items[@]}</fileline>
            <fileline lineNumber="272">   do</fileline>
            <fileline lineNumber="273">   	  SCT_items="$( echo  ${SCT_items} | awk -F "=" '{ print $1 }')"</fileline>
            <fileline lineNumber="274">   	  SCT_status="$( eval echo  "\${${SCT_items}}" )"</fileline>
            <fileline lineNumber="275">      SCT_Bin_Name="$( echo  "${SCT_items}" | awk -F "_" '{ print $3 }' )"</fileline>
            <fileline lineNumber="276">      if [ "${SCT_status}" = "ENABLED" ]</fileline>
            <fileline lineNumber="277">         then</fileline>
            <fileline lineNumber="278">             MSG_DISPLAY "debug" "0" "status of ${SCT_Bin_Name} bin  Mandatory  : [ ${SCT_status} ]"</fileline>
            <fileline lineNumber="279">         else</fileline>
            <fileline lineNumber="280">             MSG_DISPLAY "EdEMessage" "1" "status of ${SCT_Bin_Name} bin  Mandatory  : [ ${SCT_status} ] " </fileline>
            <fileline lineNumber="281">      fi</fileline>
            <fileline lineNumber="282">done</fileline>
            <fileline lineNumber="283" />
            <fileline lineNumber="284">Fil_Get_Items "EXEC_Global_SET_control_sanity" "1" "${Base_Dir_Scripts_Lib}/system_base/tool_lib.sh" "="</fileline>
            <fileline lineNumber="285" />
            <fileline lineNumber="286">for SCT_items  in ${GLOBAL_FGI_Selected_items[@]}</fileline>
            <fileline lineNumber="287">   do</fileline>
            <fileline lineNumber="288">      SCT_items="$( echo  ${SCT_items} | awk -F "=" '{ print $1 }')"</fileline>
            <fileline lineNumber="289">   	  SCT_status="$( eval echo  "\${${SCT_items}}" )"</fileline>
            <fileline lineNumber="290">      SCT_Bin_Name="$( echo  "${SCT_items}" | awk -F "_" '{ print $3 }' )"</fileline>
            <fileline lineNumber="291">      if [ "${SCT_status}" = "ENABLED" ]</fileline>
            <fileline lineNumber="292">         then</fileline>
            <fileline lineNumber="293">             MSG_DISPLAY "debug" "0" "status of ${SCT_Bin_Name} bin Optional  : [ ${SCT_status} ]"</fileline>
            <fileline lineNumber="294">         else</fileline>
            <fileline lineNumber="295">             MSG_DISPLAY "debug" "0" "status of ${SCT_Bin_Name} bin  Optional  : [ ${SCT_status} ] " </fileline>
            <fileline lineNumber="296">      fi</fileline>
            <fileline lineNumber="297">done</fileline>
            <fileline lineNumber="298" />
            <fileline lineNumber="299" />
            <fileline lineNumber="300">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="301">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="302">####################################################</fileline>
            <fileline lineNumber="303">}</fileline>
            <fileline lineNumber="304" />
            <fileline lineNumber="305">function SANITY_CHECK_Base_env_Users_And_Group</fileline>
            <fileline lineNumber="306">{</fileline>
            <fileline lineNumber="307">#|# Var to set  : None</fileline>
            <fileline lineNumber="308">#|#</fileline>
            <fileline lineNumber="309">#|# Base usage  : SANITY_CHECK_Base_env_Users_And_Group</fileline>
            <fileline lineNumber="310">#|#</fileline>
            <fileline lineNumber="311">#|# Description : This function check and create all mandatory directories needed for CAST execution</fileline>
            <fileline lineNumber="312">#|#</fileline>
            <fileline lineNumber="313">#|# Send Back   : Directory</fileline>
            <fileline lineNumber="314">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="315">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="316">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="317">######################################################</fileline>
            <fileline lineNumber="318">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="319" />
            <fileline lineNumber="320" />
            <fileline lineNumber="321" />
            <fileline lineNumber="322">for SubConfFiles in $( ls ${Base_Dir_Scripts_CNF_Subs} -1 | grep cnf ) </fileline>
            <fileline lineNumber="323">	do </fileline>
            <fileline lineNumber="324">		for UsersCr in $( cat ${Base_Dir_Scripts_CNF_Subs}/${SubConfFiles} | grep "Account_To_Delete" | awk '{ print $1 }' | awk -F\= '{print "\$\{"$1"\}" }' 2&gt; /dev/null )</fileline>
            <fileline lineNumber="325">			do UsersCr=$( eval echo ${UsersCr} )</fileline>
            <fileline lineNumber="326" />
            <fileline lineNumber="327">		done</fileline>
            <fileline lineNumber="328" />
            <fileline lineNumber="329">done </fileline>
            <fileline lineNumber="330" />
            <fileline lineNumber="331">MSG_DISPLAY "info" "1" "Directory Sanity check [ END ] "</fileline>
            <fileline lineNumber="332" />
            <fileline lineNumber="333">SANITY_CHECK_Base_env_directory_check_exec="1"</fileline>
            <fileline lineNumber="334">Spacer_MSG</fileline>
            <fileline lineNumber="335">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="336">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="337">####################################################</fileline>
            <fileline lineNumber="338">}</fileline>
            <fileline lineNumber="339" />
            <fileline lineNumber="340" />
            <fileline lineNumber="341" />
            <fileline lineNumber="342"># Sourcing control variable </fileline>
            <fileline lineNumber="343">LibState="OK"</fileline>
        </content>
    </file>
    <file>
        <filename>./lib/user_interaction/main_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                    #</fileline>
            <fileline lineNumber="5"># Subject : This library provide base functions to create main menu for cast  #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO</fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11">function Main_Menu</fileline>
            <fileline lineNumber="12">{</fileline>
            <fileline lineNumber="13">#|# Var to set  : None</fileline>
            <fileline lineNumber="14">#|#</fileline>
            <fileline lineNumber="15">#|# Base usage  : Main_Menu</fileline>
            <fileline lineNumber="16">#|#</fileline>
            <fileline lineNumber="17">#|# Description : This function is used to launche Main menu</fileline>
            <fileline lineNumber="18">#|#</fileline>
            <fileline lineNumber="19">#|# Send Back   : Menu</fileline>
            <fileline lineNumber="20">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="21">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="22">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="23">######################################################</fileline>
            <fileline lineNumber="24">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="25" />
            <fileline lineNumber="26" />
            <fileline lineNumber="27">Menu_Get_items "# In_main_Menu" "2" "${Base_Dir_Scripts_Lib}/user_interaction/sub/CAST-Mnu_Main.lib" "Main_Menu_:"</fileline>
            <fileline lineNumber="28" />
            <fileline lineNumber="29">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="30">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="31">####################################################</fileline>
            <fileline lineNumber="32">}</fileline>
            <fileline lineNumber="33" />
            <fileline lineNumber="34">###################################### INSTALL #################################</fileline>
            <fileline lineNumber="35" />
            <fileline lineNumber="36">function Install_Menu                                            # In_main_Menu</fileline>
            <fileline lineNumber="37">{</fileline>
            <fileline lineNumber="38">#|# Var to set  : None</fileline>
            <fileline lineNumber="39">#|#</fileline>
            <fileline lineNumber="40">#|# Base usage  : Install_packages</fileline>
            <fileline lineNumber="41">#|#</fileline>
            <fileline lineNumber="42">#|# Description : This function is used to launche install env menu</fileline>
            <fileline lineNumber="43">#|#</fileline>
            <fileline lineNumber="44">#|# Send Back   : Menu</fileline>
            <fileline lineNumber="45">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="46">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="47">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="48">######################################################</fileline>
            <fileline lineNumber="49">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="50" />
            <fileline lineNumber="51" />
            <fileline lineNumber="52">Menu_Get_items "# In_main_install_Menu" "2" "${Base_Dir_Scripts_Lib}/user_interaction/main.lib" "Install Packages :"</fileline>
            <fileline lineNumber="53" />
            <fileline lineNumber="54">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="55">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="56">####################################################</fileline>
            <fileline lineNumber="57">}</fileline>
            <fileline lineNumber="58" />
            <fileline lineNumber="59">function Install_packages                                # In_main_install_Menu</fileline>
            <fileline lineNumber="60">{</fileline>
            <fileline lineNumber="61">#|# Var to set  : None</fileline>
            <fileline lineNumber="62">#|#</fileline>
            <fileline lineNumber="63">#|# Base usage  : Install_packages</fileline>
            <fileline lineNumber="64">#|#</fileline>
            <fileline lineNumber="65">#|# Description : This function is used to launche install env menu</fileline>
            <fileline lineNumber="66">#|#</fileline>
            <fileline lineNumber="67">#|# Send Back   : Menu</fileline>
            <fileline lineNumber="68">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="69">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="70">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="71">######################################################</fileline>
            <fileline lineNumber="72">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="73" />
            <fileline lineNumber="74" />
            <fileline lineNumber="75">Menu_Get_items "# Install_pkg_type" "2" "${Base_Dir_Scripts_Lib}/user_interaction/main.lib" "Install Packages :"</fileline>
            <fileline lineNumber="76" />
            <fileline lineNumber="77">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="78">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="79">####################################################</fileline>
            <fileline lineNumber="80">}</fileline>
            <fileline lineNumber="81" />
            <fileline lineNumber="82">function Install_packages_in_chroot                          # Install_pkg_type</fileline>
            <fileline lineNumber="83">{</fileline>
            <fileline lineNumber="84">#|# Var to set  : None</fileline>
            <fileline lineNumber="85">#|#</fileline>
            <fileline lineNumber="86">#|# Base usage  : Install_packages_chroot</fileline>
            <fileline lineNumber="87">#|#</fileline>
            <fileline lineNumber="88">#|# Description : This function is used to launche install env menu in a chroot</fileline>
            <fileline lineNumber="89">#|#</fileline>
            <fileline lineNumber="90">#|# Send Back   : Menu</fileline>
            <fileline lineNumber="91">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="92">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="93">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="94">######################################################</fileline>
            <fileline lineNumber="95">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="96" />
            <fileline lineNumber="97" />
            <fileline lineNumber="98">Menu_Get_items "# PKG_installable_ok" "2" "${Base_Dir_Scripts_Lib}/build/pkg_install.lib" "Menu install Package in Chroot :"</fileline>
            <fileline lineNumber="99" />
            <fileline lineNumber="100" />
            <fileline lineNumber="101">############### Stack_TRACE_BUILDR ################</fileline>
            <fileline lineNumber="102">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="103">####################################################</fileline>
            <fileline lineNumber="104">}</fileline>
            <fileline lineNumber="105" />
            <fileline lineNumber="106">function Install_packages_in_system                          # Install_pkg_type</fileline>
            <fileline lineNumber="107">{</fileline>
            <fileline lineNumber="108">#|# Var to set  : None</fileline>
            <fileline lineNumber="109">#|#</fileline>
            <fileline lineNumber="110">#|# Base usage  : Install_packages_env</fileline>
            <fileline lineNumber="111">#|#</fileline>
            <fileline lineNumber="112">#|# Description : This function is used to launche install env menu out of an chroot</fileline>
            <fileline lineNumber="113">#|#</fileline>
            <fileline lineNumber="114">#|# Send Back   : Menu</fileline>
            <fileline lineNumber="115">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="116">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="117">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="118">######################################################</fileline>
            <fileline lineNumber="119">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="120" />
            <fileline lineNumber="121" />
            <fileline lineNumber="122">Menu_Get_items "# PKG_installable_ok" "2" "${Base_Dir_Scripts_Lib}/build/pkg_install.lib" "Menu install Package in System :"</fileline>
            <fileline lineNumber="123" />
            <fileline lineNumber="124" />
            <fileline lineNumber="125">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="126">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="127">####################################################</fileline>
            <fileline lineNumber="128">}</fileline>
            <fileline lineNumber="129" />
            <fileline lineNumber="130" />
            <fileline lineNumber="131">################################### CHROOT #####################################</fileline>
            <fileline lineNumber="132" />
            <fileline lineNumber="133">function Install_chroot                                          # In_main_Menu</fileline>
            <fileline lineNumber="134">{</fileline>
            <fileline lineNumber="135">#|# Var to set  : None</fileline>
            <fileline lineNumber="136">#|#</fileline>
            <fileline lineNumber="137">#|# Base usage  : Install_chroot</fileline>
            <fileline lineNumber="138">#|#</fileline>
            <fileline lineNumber="139">#|# Description : This function is used to launche install env menu in a chroot</fileline>
            <fileline lineNumber="140">#|#</fileline>
            <fileline lineNumber="141">#|# Send Back   : Menu</fileline>
            <fileline lineNumber="142">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="143">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="144">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="145">######################################################</fileline>
            <fileline lineNumber="146">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="147" />
            <fileline lineNumber="148" />
            <fileline lineNumber="149" />
            <fileline lineNumber="150" />
            <fileline lineNumber="151">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="152">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="153">####################################################</fileline>
            <fileline lineNumber="154">}</fileline>
            <fileline lineNumber="155" />
            <fileline lineNumber="156">function Install_chroot_from_tarball</fileline>
            <fileline lineNumber="157">{</fileline>
            <fileline lineNumber="158">#|# Var to set  : None</fileline>
            <fileline lineNumber="159">#|#</fileline>
            <fileline lineNumber="160">#|# Base usage  : Install_chroot_from_tarball</fileline>
            <fileline lineNumber="161">#|#</fileline>
            <fileline lineNumber="162">#|# Description : This function is used to launche install env menu in a chroot</fileline>
            <fileline lineNumber="163">#|#</fileline>
            <fileline lineNumber="164">#|# Send Back   : Menu</fileline>
            <fileline lineNumber="165">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="166">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="167">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="168">######################################################</fileline>
            <fileline lineNumber="169">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="170" />
            <fileline lineNumber="171" />
            <fileline lineNumber="172" />
            <fileline lineNumber="173" />
            <fileline lineNumber="174">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="175">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="176">####################################################</fileline>
            <fileline lineNumber="177">}</fileline>
            <fileline lineNumber="178" />
            <fileline lineNumber="179">function Install_chroot_from_system</fileline>
            <fileline lineNumber="180">{</fileline>
            <fileline lineNumber="181">#|# Var to set  : None</fileline>
            <fileline lineNumber="182">#|#</fileline>
            <fileline lineNumber="183">#|# Base usage  : Install_chroot_from_system</fileline>
            <fileline lineNumber="184">#|#</fileline>
            <fileline lineNumber="185">#|# Description : This function is used to launche install env menu in a chroot</fileline>
            <fileline lineNumber="186">#|#</fileline>
            <fileline lineNumber="187">#|# Send Back   : Menu</fileline>
            <fileline lineNumber="188">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="189">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="190">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="191">######################################################</fileline>
            <fileline lineNumber="192">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="193" />
            <fileline lineNumber="194" />
            <fileline lineNumber="195" />
            <fileline lineNumber="196" />
            <fileline lineNumber="197">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="198">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="199">####################################################</fileline>
            <fileline lineNumber="200">}</fileline>
            <fileline lineNumber="201" />
            <fileline lineNumber="202">################################## CVS #########################################</fileline>
            <fileline lineNumber="203" />
            <fileline lineNumber="204">function Main_Sources_server                               # Sources_server_main</fileline>
            <fileline lineNumber="205">{</fileline>
            <fileline lineNumber="206">#|# Var to set  : None</fileline>
            <fileline lineNumber="207">#|#</fileline>
            <fileline lineNumber="208">#|# Base usage  : Main_Sources_server</fileline>
            <fileline lineNumber="209">#|#</fileline>
            <fileline lineNumber="210">#|# Description : This function is used to sources server manager</fileline>
            <fileline lineNumber="211">#|#               menu out of an chroot</fileline>
            <fileline lineNumber="212">#|#</fileline>
            <fileline lineNumber="213">#|# Send Back   : Menu</fileline>
            <fileline lineNumber="214">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="215">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="216">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="217">######################################################</fileline>
            <fileline lineNumber="218">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="219" />
            <fileline lineNumber="220" />
            <fileline lineNumber="221">Menu_Get_items "# Sources_server_sub" "2" "${Base_Dir_Scripts_Lib}/user_interaction/main.lib" "Sources server Menu :"</fileline>
            <fileline lineNumber="222" />
            <fileline lineNumber="223">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="224">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="225">####################################################</fileline>
            <fileline lineNumber="226">}</fileline>
            <fileline lineNumber="227" />
            <fileline lineNumber="228">function Main_CVS                                          # Sources_server_sub</fileline>
            <fileline lineNumber="229">{</fileline>
            <fileline lineNumber="230">#|# Var to set  : None</fileline>
            <fileline lineNumber="231">#|#</fileline>
            <fileline lineNumber="232">#|# Base usage  : Main_CVS</fileline>
            <fileline lineNumber="233">#|#</fileline>
            <fileline lineNumber="234">#|# Description : This function is used to launche CVS manager menu</fileline>
            <fileline lineNumber="235">#|#</fileline>
            <fileline lineNumber="236">#|# Send Back   : Menu</fileline>
            <fileline lineNumber="237">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="238">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="239">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="240">######################################################</fileline>
            <fileline lineNumber="241">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="242" />
            <fileline lineNumber="243" />
            <fileline lineNumber="244">Menu_Get_items "# CVS_Launch_Menu" "2" "${Base_Dir_Scripts_Lib}/sources_server/cvs/cvs_menu.lib" "Menu cvs manager :"</fileline>
            <fileline lineNumber="245" />
            <fileline lineNumber="246">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="247">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="248">####################################################</fileline>
            <fileline lineNumber="249">}</fileline>
            <fileline lineNumber="250" />
            <fileline lineNumber="251">function Main_SVN                                         # Sources_server_main</fileline>
            <fileline lineNumber="252">{</fileline>
            <fileline lineNumber="253">#|# Var to set  : None</fileline>
            <fileline lineNumber="254">#|#</fileline>
            <fileline lineNumber="255">#|# Base usage  : Main_SVN</fileline>
            <fileline lineNumber="256">#|#</fileline>
            <fileline lineNumber="257">#|# Description : This function is used to launche svn server menu</fileline>
            <fileline lineNumber="258">#|#</fileline>
            <fileline lineNumber="259">#|# Send Back   : Menu</fileline>
            <fileline lineNumber="260">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="261">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="262">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="263">######################################################</fileline>
            <fileline lineNumber="264">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="265" />
            <fileline lineNumber="266" />
            <fileline lineNumber="267">Menu_Get_items "# SVN_Launch_Menu" "2" "${Base_Dir_Scripts_Lib}/sources_server/svn/svn.lib" "Menu svn manager :"</fileline>
            <fileline lineNumber="268" />
            <fileline lineNumber="269">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="270">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="271">####################################################</fileline>
            <fileline lineNumber="272">}</fileline>
            <fileline lineNumber="273" />
            <fileline lineNumber="274">################################################################################</fileline>
            <fileline lineNumber="275">function Dummy_function</fileline>
            <fileline lineNumber="276">{</fileline>
            <fileline lineNumber="277">#|# Var to set  : None</fileline>
            <fileline lineNumber="278">#|#             : Use this var to set</fileline>
            <fileline lineNumber="279">#|#             : Use this var to set</fileline>
            <fileline lineNumber="280">#|# ${1}        : Use this var to set [  ]</fileline>
            <fileline lineNumber="281">#|# ${2}        : Use this var to set [  ]</fileline>
            <fileline lineNumber="282">#|#</fileline>
            <fileline lineNumber="283">#|# Base usage  : None</fileline>
            <fileline lineNumber="284">#|#</fileline>
            <fileline lineNumber="285">#|# Description : None</fileline>
            <fileline lineNumber="286">#|#</fileline>
            <fileline lineNumber="287">#|# Send Back   : None</fileline>
            <fileline lineNumber="288">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="289">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="290">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="291">######################################################</fileline>
            <fileline lineNumber="292">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="293" />
            <fileline lineNumber="294" />
            <fileline lineNumber="295">MSG_DISPLAY "info" "1" "this is a model function"</fileline>
            <fileline lineNumber="296" />
            <fileline lineNumber="297">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="298">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="299">####################################################</fileline>
            <fileline lineNumber="300">}</fileline>
            <fileline lineNumber="301" />
            <fileline lineNumber="302"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/user_interaction/menu_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                                        #</fileline>
            <fileline lineNumber="5"># Subject : This library provide base runtime to build dynamic menu           #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO</fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11">function Menu_Get_items</fileline>
            <fileline lineNumber="12">{</fileline>
            <fileline lineNumber="13">#|# Var to set  :</fileline>
            <fileline lineNumber="14">#|# Base_Menu_get_Tag       : use this var to set the tag to find to builde the menu</fileline>
            <fileline lineNumber="15">#|# Base_Level_Menu_Info    : Use this var to set which geted item part to keep</fileline>
            <fileline lineNumber="16">#|# Base_file_to_parse_Menu : use this var to set which file to parse to build menu</fileline>
            <fileline lineNumber="17">#|# Base_Menu_Name          : Use this var to set the name of the menu</fileline>
            <fileline lineNumber="18">#|# ${1}                    : use this var to set [ Base_Menu_get_Tag ]</fileline>
            <fileline lineNumber="19">#|# ${2}                    : use this var to set [ Base_Level_Menu_Info ]</fileline>
            <fileline lineNumber="20">#|# ${3}                    : use this var to set [ Base_file_to_parse_Menu ]</fileline>
            <fileline lineNumber="21">#|# ${4}                    : use this var to set [ Base_Menu_Name ]</fileline>
            <fileline lineNumber="22">#|#</fileline>
            <fileline lineNumber="23">#|# Base usage  : Menu_Get_items "My menu tag" "My keep item level " "My source file menu" "Menu Name"</fileline>
            <fileline lineNumber="24">#|# Description : This function scan a file to creat a array to send to Menu_Build</fileline>
            <fileline lineNumber="25">#|#</fileline>
            <fileline lineNumber="26">#|# Send Back   : a typer array var to Menu_Build</fileline>
            <fileline lineNumber="27">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="28">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="29">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="30">######################################################</fileline>
            <fileline lineNumber="31" />
            <fileline lineNumber="32">PS3='choice? '</fileline>
            <fileline lineNumber="33">Base_Menu_get_Tag="${1}"</fileline>
            <fileline lineNumber="34">Base_Level_Menu_Info="${2}"</fileline>
            <fileline lineNumber="35">Base_file_to_parse_Menu="${3}"</fileline>
            <fileline lineNumber="36">Base_Menu_Name="${4}"</fileline>
            <fileline lineNumber="37">Selected_Menu_items=()</fileline>
            <fileline lineNumber="38">declare -a Selected_Menu_items=(${Base_Menu_Name})</fileline>
            <fileline lineNumber="39" />
            <fileline lineNumber="40">for Base_items_menu in $( cat ${Base_file_to_parse_Menu} | grep "${Base_Menu_get_Tag}" | awk -v toprt=${Base_Level_Menu_Info} '{ print $toprt }')</fileline>
            <fileline lineNumber="41">    do</fileline>
            <fileline lineNumber="42">       case "${Base_items_menu}" in</fileline>
            <fileline lineNumber="43">                          *\#) MSG_DISPLAY "debug" "0" "Loop call find [ filtered call ]"</fileline>
            <fileline lineNumber="44">                              ;;</fileline>
            <fileline lineNumber="45">       	 ${Base_Menu_get_Tag}) MSG_DISPLAY "debug" "0" "Loop call find [ filtered call ]"</fileline>
            <fileline lineNumber="46">       	                       ;;</fileline>
            <fileline lineNumber="47">       	                    *) MSG_DISPLAY "debug" "0"  " Item  get from file  [ ${Base_items_menu}  ]  "</fileline>
            <fileline lineNumber="48">                              Selected_Menu_items+=(${Base_items_menu})</fileline>
            <fileline lineNumber="49" />
            <fileline lineNumber="50">                              ;;</fileline>
            <fileline lineNumber="51">       esac</fileline>
            <fileline lineNumber="52">done</fileline>
            <fileline lineNumber="53" />
            <fileline lineNumber="54" />
            <fileline lineNumber="55">#exit </fileline>
            <fileline lineNumber="56">Menu_Build ${Selected_Menu_items[@]}</fileline>
            <fileline lineNumber="57" />
            <fileline lineNumber="58">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="59">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="60">####################################################</fileline>
            <fileline lineNumber="61">}</fileline>
            <fileline lineNumber="62" />
            <fileline lineNumber="63" />
            <fileline lineNumber="64">function Menu_Build</fileline>
            <fileline lineNumber="65">{</fileline>
            <fileline lineNumber="66">#|# Var to set  :</fileline>
            <fileline lineNumber="67">#|# args        : Use this var to set all array of the menu be sure the var is an array</fileline>
            <fileline lineNumber="68">#|#</fileline>
            <fileline lineNumber="69">#|# Base usage  : Menu_Build "Name ov the var type array" ( without $ )</fileline>
            <fileline lineNumber="70">#|#</fileline>
            <fileline lineNumber="71">#|# Description : This function create interactive menu from array parameters</fileline>
            <fileline lineNumber="72">#|#</fileline>
            <fileline lineNumber="73">#|# Send Back   : Menu</fileline>
            <fileline lineNumber="74">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="75">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="76">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="77">######################################################</fileline>
            <fileline lineNumber="78">args=""</fileline>
            <fileline lineNumber="79">value=""</fileline>
            <fileline lineNumber="80">title=""</fileline>
            <fileline lineNumber="81">prompt=""</fileline>
            <fileline lineNumber="82">limit=""</fileline>
            <fileline lineNumber="83">options=""</fileline>
            <fileline lineNumber="84">case_seq=""</fileline>
            <fileline lineNumber="85">PS3=""</fileline>
            <fileline lineNumber="86" />
            <fileline lineNumber="87" />
            <fileline lineNumber="88">  args=("$@")</fileline>
            <fileline lineNumber="89" />
            <fileline lineNumber="90" />
            <fileline lineNumber="91" />
            <fileline lineNumber="92">  #Elimine la partie entre crochets</fileline>
            <fileline lineNumber="93">  args=$( echo  "$args[@]" | sed -e 's/[[][^]]*[]]//' -e 's/[[:blank:]]*$//' )</fileline>
            <fileline lineNumber="94">  echo  "[$args]" | sed  -e 's/[_]/ /g'</fileline>
            <fileline lineNumber="95" />
            <fileline lineNumber="96" />
            <fileline lineNumber="97">  case $args in</fileline>
            <fileline lineNumber="98">  CHANGE\ *)    args="${args#CHANGE }"</fileline>
            <fileline lineNumber="99">                args="${args//[^=]*/}"  #Elimine la partie a droite de =</fileline>
            <fileline lineNumber="100">                while true</fileline>
            <fileline lineNumber="101">                     do</fileline>
            <fileline lineNumber="102">                       echo "Read ${args} value"</fileline>
            <fileline lineNumber="103">                       read ${args}</fileline>
            <fileline lineNumber="104">                       eval value="\${$args}"</fileline>
            <fileline lineNumber="105">                       if [ -z "${value}" ]</fileline>
            <fileline lineNumber="106">                          then</fileline>
            <fileline lineNumber="107">                              MSG_DISPLAY "info" "1" "ERROR : ${args} environment variable value [ Null ] "</fileline>
            <fileline lineNumber="108">                              MSG_DISPLAY "Menu" "RETRY : type a new value of ${args}"</fileline>
            <fileline lineNumber="109">                          else</fileline>
            <fileline lineNumber="110">                              MSG_DISPLAY "info" "1" "OVERRIDE: ${args} environment. New value [${value}]"</fileline>
            <fileline lineNumber="111">                              break</fileline>
            <fileline lineNumber="112">                        fi</fileline>
            <fileline lineNumber="113">		        done</fileline>
            <fileline lineNumber="114">                ;;</fileline>
            <fileline lineNumber="115">             *) clear</fileline>
            <fileline lineNumber="116">                title="$(echo ${args[0]} | sed  -e 's/[_]/ /g')"</fileline>
            <fileline lineNumber="117">                prompt="Pick a choice : "</fileline>
            <fileline lineNumber="118">                #unset 'args[1]'</fileline>
            <fileline lineNumber="119">                unset 'args[0]'</fileline>
            <fileline lineNumber="120">                limit=$((${#args[@]}))</fileline>
            <fileline lineNumber="121">                options=()</fileline>
            <fileline lineNumber="122">                for i in $(seq ${limit[@]});</fileline>
            <fileline lineNumber="123">                  do </fileline>
            <fileline lineNumber="124">                      options+=(${args[i]})</fileline>
            <fileline lineNumber="125" />
            <fileline lineNumber="126">                done </fileline>
            <fileline lineNumber="127">                case_seq=$( echo  $( echo \"${options[@]}\") | sed -e 's/ /\"|\"/g' )</fileline>
            <fileline lineNumber="128">                while true</fileline>
            <fileline lineNumber="129">                do </fileline>
            <fileline lineNumber="130">                  clear</fileline>
            <fileline lineNumber="131">                  echo "${title}"</fileline>
            <fileline lineNumber="132">                  PS3="${prompt}"</fileline>
            <fileline lineNumber="133">                  eval "select opt in \"\${options[@]}\" \"back\";</fileline>
            <fileline lineNumber="134">                  do</fileline>
            <fileline lineNumber="135">                    case \"\${opt}\" in</fileline>
            <fileline lineNumber="136">                          ${case_seq}) \${opt};</fileline>
            <fileline lineNumber="137">                                    break ;</fileline>
            <fileline lineNumber="138">                                    ;;</fileline>
            <fileline lineNumber="139">                    \"back\"|\"exit\") echo \"You picked \${opt}, option out\";</fileline>
            <fileline lineNumber="140">                                    return ;</fileline>
            <fileline lineNumber="141">                                    ;;</fileline>
            <fileline lineNumber="142">                                    *)  echo \"You picked invalid \${opt} choice\"</fileline>
            <fileline lineNumber="143">                        ;;</fileline>
            <fileline lineNumber="144">                     esac; </fileline>
            <fileline lineNumber="145">      done"</fileline>
            <fileline lineNumber="146">                done </fileline>
            <fileline lineNumber="147">                ;;</fileline>
            <fileline lineNumber="148">  esac</fileline>
            <fileline lineNumber="149">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="150">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="151">####################################################</fileline>
            <fileline lineNumber="152">}</fileline>
            <fileline lineNumber="153" />
            <fileline lineNumber="154">function ecMenu</fileline>
            <fileline lineNumber="155">{</fileline>
            <fileline lineNumber="156">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="157">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="158">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="159">######################################################</fileline>
            <fileline lineNumber="160" />
            <fileline lineNumber="161">Mnu=""</fileline>
            <fileline lineNumber="162">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="163">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="164">####################################################</fileline>
            <fileline lineNumber="165">}</fileline>
            <fileline lineNumber="166" />
            <fileline lineNumber="167" />
            <fileline lineNumber="168">function Menu_select_item_from_file</fileline>
            <fileline lineNumber="169">{</fileline>
            <fileline lineNumber="170">#|# Var to set  : None</fileline>
            <fileline lineNumber="171">#|#             : Use this var to set</fileline>
            <fileline lineNumber="172">#|#             : Use this var to set</fileline>
            <fileline lineNumber="173">#|# ${1}        : Use this var to set [ ]</fileline>
            <fileline lineNumber="174">#|# ${2}        : Use this var to set [ ]</fileline>
            <fileline lineNumber="175">#|#</fileline>
            <fileline lineNumber="176">#|# Base usage  : None</fileline>
            <fileline lineNumber="177">#|#</fileline>
            <fileline lineNumber="178">#|# Description : None</fileline>
            <fileline lineNumber="179">#|#</fileline>
            <fileline lineNumber="180">#|# Send Back   : None</fileline>
            <fileline lineNumber="181">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="182">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="183">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="184">######################################################</fileline>
            <fileline lineNumber="185">limit=$((${#args[@]}-1))</fileline>
            <fileline lineNumber="186">for i in $(seq ${limit}); do</fileline>
            <fileline lineNumber="187">    select_args="${select_args}\"${args[i]}\" ";</fileline>
            <fileline lineNumber="188">done</fileline>
            <fileline lineNumber="189">#Prepare les parametres du case</fileline>
            <fileline lineNumber="190">case_seq=$( echo  $(seq ${limit}) | sed -e 's/ /|/g' )</fileline>
            <fileline lineNumber="191">case_return=$((${#args[@]}))</fileline>
            <fileline lineNumber="192">select REPLY in ${RPM_SEND_BACK_LIST}</fileline>
            <fileline lineNumber="193">     do</fileline>
            <fileline lineNumber="194">      case \${REPLY} in</fileline>
            <fileline lineNumber="195">                          ${case_seq})    Menu_Build \${choice}</fileline>
            <fileline lineNumber="196">                                          break  ;;</fileline>
            <fileline lineNumber="197">                          ${case_return}) return ;;</fileline>
            <fileline lineNumber="198">                          *)              echo invalid choice: \${REPLY}.;;</fileline>
            <fileline lineNumber="199">     esac</fileline>
            <fileline lineNumber="200">done</fileline>
            <fileline lineNumber="201" />
            <fileline lineNumber="202">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="203">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="204">####################################################</fileline>
            <fileline lineNumber="205">}</fileline>
            <fileline lineNumber="206" />
            <fileline lineNumber="207">function Menu_Change_Conf_item</fileline>
            <fileline lineNumber="208">#|# Var to set  : None</fileline>
            <fileline lineNumber="209">#|# Base_item_Name                  : use this var to set item name to change</fileline>
            <fileline lineNumber="210">#|# Base_item_to_change             : use this var to set the item to change</fileline>
            <fileline lineNumber="211">#|# ${1}                  : Use this var to set [ Base_item_Name ]</fileline>
            <fileline lineNumber="212">#|# ${2}                  : Use this var to set [ Base_item_to_change ]</fileline>
            <fileline lineNumber="213">#|#</fileline>
            <fileline lineNumber="214">#|# Base usage  : Menu_Change_Conf_item "Base_item_Name" "Base_item_to_change"</fileline>
            <fileline lineNumber="215">#|#</fileline>
            <fileline lineNumber="216">#|# Description : None</fileline>
            <fileline lineNumber="217">#|#</fileline>
            <fileline lineNumber="218">#|# Send Back   : Value in a var</fileline>
            <fileline lineNumber="219">{</fileline>
            <fileline lineNumber="220">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="221">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="222">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="223">######################################################</fileline>
            <fileline lineNumber="224" />
            <fileline lineNumber="225">Base_item_Name="${1}"</fileline>
            <fileline lineNumber="226">Base_item_to_change="${2}"</fileline>
            <fileline lineNumber="227" />
            <fileline lineNumber="228">MSG_DISPLAY "info" "1" "type new value for ${Base_item_Name} : Type enter to keep value "</fileline>
            <fileline lineNumber="229" />
            <fileline lineNumber="230">MSG_DISPLAY "info" "1" "Actual ${Base_item_Name} value  : [ ${Base_item_to_change} ]"</fileline>
            <fileline lineNumber="231">read New_item_Value_install</fileline>
            <fileline lineNumber="232">Empty_Var_Control "${New_item_Value_install}" "${My_VAR}" "ErrorN" "0" "" "eval ${Base_item_Name}=${Base_item_to_change}" "eval ${Base_item_Name}=${New_item_Value_install}"</fileline>
            <fileline lineNumber="233" />
            <fileline lineNumber="234">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="235">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="236">####################################################</fileline>
            <fileline lineNumber="237">}</fileline>
            <fileline lineNumber="238" />
            <fileline lineNumber="239" />
            <fileline lineNumber="240">function Menu_List_spliter</fileline>
            <fileline lineNumber="241">{</fileline>
            <fileline lineNumber="242">#|# Var to set  :</fileline>
            <fileline lineNumber="243">#|# Array_To_SPLIT                   : Use this var to set the name of the Array var to split in many vars</fileline>
            <fileline lineNumber="244">#|# Internal vars :</fileline>
            <fileline lineNumber="245">#|# Result_Base_array                : This var is used in exit of the function to provide the list of array to use for generating menu entry</fileline>
            <fileline lineNumber="246">#|# Base_screen_Menu_Limit           : This var seted in Generics.cnf is used to set screen limit for menu</fileline>
            <fileline lineNumber="247">#|# ${1}                             : Use this var to set [ Array_To_SPLIT ]</fileline>
            <fileline lineNumber="248">#|#</fileline>
            <fileline lineNumber="249">#|# Base usage  : Menu_List_spliter " var name without $ and {} "</fileline>
            <fileline lineNumber="250">#|# Description : This fuction help to split too long menu</fileline>
            <fileline lineNumber="251">#|#</fileline>
            <fileline lineNumber="252">#|# Send Back   : splited menu</fileline>
            <fileline lineNumber="253">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="254">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="255">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="256">######################################################</fileline>
            <fileline lineNumber="257">Array_To_SPLIT="${1}"</fileline>
            <fileline lineNumber="258" />
            <fileline lineNumber="259">set -A Internal_Working_Array $( eval echo "\${${Array_To_SPLIT}[@]}")</fileline>
            <fileline lineNumber="260" />
            <fileline lineNumber="261">Menu_List_spliter_sub_Get_limit</fileline>
            <fileline lineNumber="262" />
            <fileline lineNumber="263">Menu_List_spliter_sub_Gen_array_of_array</fileline>
            <fileline lineNumber="264" />
            <fileline lineNumber="265">Array_Gen_count="0"</fileline>
            <fileline lineNumber="266">for Arrays_gen in ${Menu_Array_list[@]}</fileline>
            <fileline lineNumber="267">   do</fileline>
            <fileline lineNumber="268">      Array_Gen_count="$(expr ${Array_Gen_count} + 1 )"</fileline>
            <fileline lineNumber="269">      Array_gets_max="$( expr ${Array_Gen_count} \*  ${Base_screen_Menu_Limit} )"</fileline>
            <fileline lineNumber="270">      Array_gets_min="$( expr ${Array_gets_max} \-   ${Base_screen_Menu_Limit} )"</fileline>
            <fileline lineNumber="271">      In_array_count="${Array_gets_min}"</fileline>
            <fileline lineNumber="272">      if [ "${In_array_count}" = "0" ]</fileline>
            <fileline lineNumber="273">         then</fileline>
            <fileline lineNumber="274">             In_array_count="$( expr ${In_array_count} + 1 )"</fileline>
            <fileline lineNumber="275">      fi</fileline>
            <fileline lineNumber="276">      until [ "${In_array_count}" = "${Array_gets_max}" ]</fileline>
            <fileline lineNumber="277">           do</fileline>
            <fileline lineNumber="278">             Internal_Array_gen="${Internal_Working_Array[In_array_count]} \n ${Internal_Array_gen}"</fileline>
            <fileline lineNumber="279">             In_array_count="$( expr ${In_array_count} + 1 )"</fileline>
            <fileline lineNumber="280">      done</fileline>
            <fileline lineNumber="281">      MSG_DISPLAY "debug" "0" "Array : [ ${Arrays_gen} ]"</fileline>
            <fileline lineNumber="282">      eval set \-A ${Arrays_gen} \$\( echo "\${Internal_Array_gen}" \)</fileline>
            <fileline lineNumber="283">       Basic_internal_counter="1"</fileline>
            <fileline lineNumber="284">       for Items_print in $( eval print \${${Arrays_gen}[@]} )</fileline>
            <fileline lineNumber="285">              do</fileline>
            <fileline lineNumber="286">                MSG_DISPLAY "debug" "0" "Found In array ${Basic_internal_counter} : [ ${Items_print} ]"</fileline>
            <fileline lineNumber="287">                Basic_internal_counter=$( expr ${Basic_internal_counter} + 1 )</fileline>
            <fileline lineNumber="288">           done</fileline>
            <fileline lineNumber="289">       Global_Counter=$( expr ${Basic_internal_counter} + ${Global_Counter} )</fileline>
            <fileline lineNumber="290">#      eval echo "\${${Arrays_gen}[@]}"</fileline>
            <fileline lineNumber="291">done</fileline>
            <fileline lineNumber="292">MSG_DISPLAY "info" "1" "Number of found Objects : [ ${Global_Counter} ]"</fileline>
            <fileline lineNumber="293">#print "	${Internal_Working_Array[@]} "</fileline>
            <fileline lineNumber="294">#${Base_screen_Menu_Limit}</fileline>
            <fileline lineNumber="295">#print</fileline>
            <fileline lineNumber="296" />
            <fileline lineNumber="297" />
            <fileline lineNumber="298" />
            <fileline lineNumber="299">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="300">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="301">####################################################</fileline>
            <fileline lineNumber="302">}</fileline>
            <fileline lineNumber="303" />
            <fileline lineNumber="304">function Menu_List_spliter_sub_Get_limit</fileline>
            <fileline lineNumber="305">{</fileline>
            <fileline lineNumber="306">#|# Var to set  : None</fileline>
            <fileline lineNumber="307">#|#             : Use this var to set</fileline>
            <fileline lineNumber="308">#|#             : Use this var to set</fileline>
            <fileline lineNumber="309">#|# ${1}        : Use this var to set [ ]</fileline>
            <fileline lineNumber="310">#|# ${2}        : Use this var to set [ ]</fileline>
            <fileline lineNumber="311">#|#</fileline>
            <fileline lineNumber="312">#|# Base usage  : None</fileline>
            <fileline lineNumber="313">#|#</fileline>
            <fileline lineNumber="314">#|# Description : None</fileline>
            <fileline lineNumber="315">#|#</fileline>
            <fileline lineNumber="316">#|# Send Back   : None</fileline>
            <fileline lineNumber="317">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="318">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="319">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="320">######################################################</fileline>
            <fileline lineNumber="321" />
            <fileline lineNumber="322">BASE_limite_spliter=$( expr ${#Internal_Working_Array[@]} / ${Base_screen_Menu_Limit})</fileline>
            <fileline lineNumber="323">MSG_DISPLAY "debug" "0" "Base split number : [ ${BASE_limite_spliter} ]"</fileline>
            <fileline lineNumber="324">Control_limit_spliter="$( expr ${BASE_limite_spliter} \* ${Base_screen_Menu_Limit} )"</fileline>
            <fileline lineNumber="325">Control_limit_spliter="$( expr ${#Internal_Working_Array[@]} \- ${Control_limit_spliter} )"</fileline>
            <fileline lineNumber="326">MSG_DISPLAY "debug" "0" "Rest after first fplit duty :[ ${Control_limit_spliter} ]"</fileline>
            <fileline lineNumber="327" />
            <fileline lineNumber="328">if [ "${Control_limit_spliter}" &gt; "0" ]</fileline>
            <fileline lineNumber="329">   then</fileline>
            <fileline lineNumber="330">   	   BASE_limite_spliter="$( expr ${BASE_limite_spliter} + 1 )"</fileline>
            <fileline lineNumber="331">   	   MSG_DISPLAY "debug" "0" "Final value for split number : [ ${BASE_limite_spliter} ]"</fileline>
            <fileline lineNumber="332">   else</fileline>
            <fileline lineNumber="333">       MSG_DISPLAY "debug" "0" "Final value for split number : [ ${BASE_limite_spliter} ]"</fileline>
            <fileline lineNumber="334">fi</fileline>
            <fileline lineNumber="335" />
            <fileline lineNumber="336">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="337">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="338">####################################################</fileline>
            <fileline lineNumber="339">}</fileline>
            <fileline lineNumber="340" />
            <fileline lineNumber="341" />
            <fileline lineNumber="342">function Menu_List_spliter_sub_Gen_array_of_array</fileline>
            <fileline lineNumber="343">{</fileline>
            <fileline lineNumber="344">#|# Var to set  : None</fileline>
            <fileline lineNumber="345">#|#             : Use this var to set</fileline>
            <fileline lineNumber="346">#|#             : Use this var to set</fileline>
            <fileline lineNumber="347">#|# ${1}        : Use this var to set [ ]</fileline>
            <fileline lineNumber="348">#|# ${2}        : Use this var to set [ ]</fileline>
            <fileline lineNumber="349">#|#</fileline>
            <fileline lineNumber="350">#|# Base usage  : None</fileline>
            <fileline lineNumber="351">#|#</fileline>
            <fileline lineNumber="352">#|# Description : None</fileline>
            <fileline lineNumber="353">#|#</fileline>
            <fileline lineNumber="354">#|# Send Back   : None</fileline>
            <fileline lineNumber="355">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="356">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="357">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="358">######################################################</fileline>
            <fileline lineNumber="359" />
            <fileline lineNumber="360">Split_Counter="0"</fileline>
            <fileline lineNumber="361">until [ "${Split_Counter}" = "${BASE_limite_spliter}" ]</fileline>
            <fileline lineNumber="362">    do</fileline>
            <fileline lineNumber="363">      Split_Counter=$( expr ${Split_Counter} + 1 )</fileline>
            <fileline lineNumber="364">      Menu_Array_Name="Auto_array_${Split_Counter}"</fileline>
            <fileline lineNumber="365">      Menu_Array_list_WRK="${Menu_Array_Name} \n ${Menu_Array_list_WRK}"</fileline>
            <fileline lineNumber="366">done</fileline>
            <fileline lineNumber="367">set -A  Menu_Array_list $( echo "${Menu_Array_list_WRK}" )</fileline>
            <fileline lineNumber="368">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="369">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="370">####################################################</fileline>
            <fileline lineNumber="371">}</fileline>
            <fileline lineNumber="372" />
            <fileline lineNumber="373">function Menu_interactive_Set_conf</fileline>
            <fileline lineNumber="374">{</fileline>
            <fileline lineNumber="375">#|# Var to set  : None</fileline>
            <fileline lineNumber="376">#|# LST_PARAMS  : Use this var to set an array of variables name to set</fileline>
            <fileline lineNumber="377">#|# ${1}        : Use this var to set [ ]</fileline>
            <fileline lineNumber="378">#|#</fileline>
            <fileline lineNumber="379">#|# Base usage  : Menu_interactive_Set_conf "My array var"</fileline>
            <fileline lineNumber="380">#|#</fileline>
            <fileline lineNumber="381">#|# Description : This function is used to set or reset live configuration parameter</fileline>
            <fileline lineNumber="382">#|#</fileline>
            <fileline lineNumber="383">#|# Send Back   : Updated vars</fileline>
            <fileline lineNumber="384">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="385">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="386">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="387">######################################################</fileline>
            <fileline lineNumber="388" />
            <fileline lineNumber="389" />
            <fileline lineNumber="390">LST_PARAMS="${1}"</fileline>
            <fileline lineNumber="391" />
            <fileline lineNumber="392">for ISC_itemps_to_change in ${LST_PARAMS[@]}</fileline>
            <fileline lineNumber="393">   do</fileline>
            <fileline lineNumber="394">      ISC_itemps_to_change_Name="${ISC_itemps_to_change}"</fileline>
            <fileline lineNumber="395">      eval ISC_itemps_to_change_Value="\$\{${ISC_itemps_to_change}\}"</fileline>
            <fileline lineNumber="396">      Menu_Change_Conf_item "${ISC_itemps_to_change_Name}" "${ISC_itemps_to_change_Value}"</fileline>
            <fileline lineNumber="397">      MSG_DISPLAY "debug" "0" "${ISC_itemps_to_change_Name} : [ ${ISC_itemps_to_change_Name} ]"</fileline>
            <fileline lineNumber="398">done</fileline>
            <fileline lineNumber="399" />
            <fileline lineNumber="400" />
            <fileline lineNumber="401">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="402">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="403">####################################################</fileline>
            <fileline lineNumber="404">}</fileline>
            <fileline lineNumber="405" />
            <fileline lineNumber="406"># Sourcing control variable </fileline>
            <fileline lineNumber="407">LibState="OK"</fileline>
            <fileline lineNumber="408" />
            <fileline lineNumber="409" />
        </content>
    </file>
    <file>
        <filename>./lib/user_interaction/user_help_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                                 #</fileline>
            <fileline lineNumber="5"># Subject : This library provide base functions to manage help withing menu   #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO</fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11">################################################################################</fileline>
            <fileline lineNumber="12">function Dummy_function</fileline>
            <fileline lineNumber="13">{</fileline>
            <fileline lineNumber="14">#|# Var to set  : None</fileline>
            <fileline lineNumber="15">#|#             : Use this var to set</fileline>
            <fileline lineNumber="16">#|#             : Use this var to set</fileline>
            <fileline lineNumber="17">#|# ${1}        : Use this var to set [  ]</fileline>
            <fileline lineNumber="18">#|# ${2}        : Use this var to set [  ]</fileline>
            <fileline lineNumber="19">#|#</fileline>
            <fileline lineNumber="20">#|# Base usage  : None</fileline>
            <fileline lineNumber="21">#|#</fileline>
            <fileline lineNumber="22">#|# Description : None</fileline>
            <fileline lineNumber="23">#|#</fileline>
            <fileline lineNumber="24">#|# Send Back   : None</fileline>
            <fileline lineNumber="25">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="26">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="27">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="28">######################################################</fileline>
            <fileline lineNumber="29" />
            <fileline lineNumber="30" />
            <fileline lineNumber="31">MSG_DISPLAY "info" "1" "this is a model function"</fileline>
            <fileline lineNumber="32" />
            <fileline lineNumber="33">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="34">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="35">####################################################</fileline>
            <fileline lineNumber="36">}</fileline>
            <fileline lineNumber="37" />
            <fileline lineNumber="38">function Get_HELP</fileline>
            <fileline lineNumber="39">{</fileline>
            <fileline lineNumber="40">#|# Var to set  : None</fileline>
            <fileline lineNumber="41">#|#             : Use this var to set</fileline>
            <fileline lineNumber="42">#|#             : Use this var to set</fileline>
            <fileline lineNumber="43">#|# ${1}        : Use this var to set [ help file to use ]</fileline>
            <fileline lineNumber="44">#|# ${2}        : Use this var to set [ Base help TAG ]</fileline>
            <fileline lineNumber="45">#|# ${3}        : Use this var to set [ refinet help tag ]</fileline>
            <fileline lineNumber="46">#|#</fileline>
            <fileline lineNumber="47">#|# Base usage  : Get_HELP "Help File" "Base help tag" "Refined Help Tag"</fileline>
            <fileline lineNumber="48">#|#</fileline>
            <fileline lineNumber="49">#|# Description : None</fileline>
            <fileline lineNumber="50">#|#</fileline>
            <fileline lineNumber="51">#|# Send Back   : None</fileline>
            <fileline lineNumber="52">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="53">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="54">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="55">######################################################</fileline>
            <fileline lineNumber="56" />
            <fileline lineNumber="57" />
            <fileline lineNumber="58">local _HelpFileUsed="${1}"</fileline>
            <fileline lineNumber="59">local _HelpBaseTAG="${2}"</fileline>
            <fileline lineNumber="60">local _HelpRefineBaseTAG="${3}"</fileline>
            <fileline lineNumber="61" />
            <fileline lineNumber="62" />
            <fileline lineNumber="63">cat ${_HelpFileUsed}| grep "^${_HelpBaseTAG}" | grep "${_HelpRefineBaseTAG}i" | awk -F"#\|#" '{ print $3 }'</fileline>
            <fileline lineNumber="64" />
            <fileline lineNumber="65">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="66">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="67">####################################################</fileline>
            <fileline lineNumber="68">}</fileline>
            <fileline lineNumber="69" />
            <fileline lineNumber="70"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/user_interaction/user_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                                       #</fileline>
            <fileline lineNumber="5"># Subject : This lib is used to provide any function about user menu control  #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO</fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11">############################</fileline>
            <fileline lineNumber="12">function USER_Generic_continue_or_exit</fileline>
            <fileline lineNumber="13">{</fileline>
            <fileline lineNumber="14">#|# BASE_MSG_FOR_CHOICE : use this var to set the display message ( in warning mode only )</fileline>
            <fileline lineNumber="15">#|# BASE_MSG_FOR_MENU   : use this var to set the menu message</fileline>
            <fileline lineNumber="16">#|# ${1}                : use this var to set BASE_MSG_FOR_CHOICE</fileline>
            <fileline lineNumber="17">#|# ${2}                : use this var to set BASE_MSG_FOR_MENU</fileline>
            <fileline lineNumber="18">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="19">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="20">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="21">######################################################</fileline>
            <fileline lineNumber="22">MSG_DISPLAY "Warning1" "${BASE_MSG_FOR_CHOICE}"</fileline>
            <fileline lineNumber="23" />
            <fileline lineNumber="24">PS3="${Base_Var_Menu_Message}"</fileline>
            <fileline lineNumber="25">select Result in Continue EXIT</fileline>
            <fileline lineNumber="26">do</fileline>
            <fileline lineNumber="27">   case ${Result} in</fileline>
            <fileline lineNumber="28">	      "1") MSG_DISPLAY "Warning1" "User select to user root account"</fileline>
            <fileline lineNumber="29">	         My_Ident="$(id -u)"</fileline>
            <fileline lineNumber="30">	         logger " $( date )  scripting user whith root account by [ ${My_Ident} ] "</fileline>
            <fileline lineNumber="31">	         ;;</fileline>
            <fileline lineNumber="32">	      "2") MSG_DISPLAY "EdEMessage" "1" "User select to exit" </fileline>
            <fileline lineNumber="33">	         ;;</fileline>
            <fileline lineNumber="34">	      *) MSG_DISPLAY "EdEMessage" "1" "Bad input exit" </fileline>
            <fileline lineNumber="35">	         ;;</fileline>
            <fileline lineNumber="36">     esac</fileline>
            <fileline lineNumber="37">done</fileline>
            <fileline lineNumber="38" />
            <fileline lineNumber="39" />
            <fileline lineNumber="40">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="41">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="42">####################################################</fileline>
            <fileline lineNumber="43">}</fileline>
            <fileline lineNumber="44" />
            <fileline lineNumber="45">function USER_Continue_ON_ERR</fileline>
            <fileline lineNumber="46">{</fileline>
            <fileline lineNumber="47">#|# MSG_TO_Display : use this var to set the displayed message when an user action is needed</fileline>
            <fileline lineNumber="48">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="49">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="50">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="51">######################################################</fileline>
            <fileline lineNumber="52" />
            <fileline lineNumber="53" />
            <fileline lineNumber="54">if [ "${Redo_Last}" = "Dummy" ]</fileline>
            <fileline lineNumber="55">   then</fileline>
            <fileline lineNumber="56">       Type_Msg="Question"</fileline>
            <fileline lineNumber="57">       Err_Question_Msg="${MSG_TO_Display}"</fileline>
            <fileline lineNumber="58" />
            <fileline lineNumber="59" />
            <fileline lineNumber="60">       read Action_NUMBER</fileline>
            <fileline lineNumber="61">       case ${Action_NUMBER} in</fileline>
            <fileline lineNumber="62">           1)</fileline>
            <fileline lineNumber="63">              MSG_DISPLAY "info" "1" "User choice is [ IGNORE ERROR ]  "</fileline>
            <fileline lineNumber="64">               ;;</fileline>
            <fileline lineNumber="65">           2) MSG_DISPLAY "EdEMessage" "1" ""  </fileline>
            <fileline lineNumber="66">              MSG_DISPLAY "info" "1" "Retry choosen by user on : [ RETRY ${MSG_TO_Display} ]"</fileline>
            <fileline lineNumber="67" />
            <fileline lineNumber="68">              ${Redo_Last} ;;</fileline>
            <fileline lineNumber="69">           *)</fileline>
            <fileline lineNumber="70">              MSG_DISPLAY "info" "1" "This choice is not supported  : [ ${Action_NUMBER} ] "</fileline>
            <fileline lineNumber="71" />
            <fileline lineNumber="72" />
            <fileline lineNumber="73">              MSG_DISPLAY "info" "1" "Please try again ..."</fileline>
            <fileline lineNumber="74" />
            <fileline lineNumber="75">       USER_Continue_ON_ERR ;;</fileline>
            <fileline lineNumber="76">      esac</fileline>
            <fileline lineNumber="77">  else</fileline>
            <fileline lineNumber="78">      Type_Msg="Question2"</fileline>
            <fileline lineNumber="79">      Err_Question_Msg="${MSG_TO_Display}"</fileline>
            <fileline lineNumber="80" />
            <fileline lineNumber="81" />
            <fileline lineNumber="82">      read Action_NUMBER</fileline>
            <fileline lineNumber="83">      case ${Action_NUMBER} in</fileline>
            <fileline lineNumber="84">           1)</fileline>
            <fileline lineNumber="85">              MSG_DISPLAY "info" "1" "User choice is [ IGNORE ERROR ]  "</fileline>
            <fileline lineNumber="86">               ;;</fileline>
            <fileline lineNumber="87">           2) MSG_DISPLAY "EdEMessage" "1" "" "1"</fileline>
            <fileline lineNumber="88">              MSG_DISPLAY "info" "1" "Retry choosen by user on : [ RETRY ${MSG_TO_Display} ]"</fileline>
            <fileline lineNumber="89" />
            <fileline lineNumber="90">              ${Redo_Last} ;;</fileline>
            <fileline lineNumber="91">           3)</fileline>
            <fileline lineNumber="92">  Err_Msg="Stopped by user on : [ ERROR ${MSG_TO_Display} ]"</fileline>
            <fileline lineNumber="93">               ;;</fileline>
            <fileline lineNumber="94">           *)</fileline>
            <fileline lineNumber="95">              MSG_DISPLAY "info" "1" "This choice is not supported  : [ ${Action_NUMBER} ] "</fileline>
            <fileline lineNumber="96" />
            <fileline lineNumber="97" />
            <fileline lineNumber="98">              MSG_DISPLAY "info" "1" "Please try again ..."</fileline>
            <fileline lineNumber="99" />
            <fileline lineNumber="100">       USER_Continue_ON_ERR ;;</fileline>
            <fileline lineNumber="101">      esac</fileline>
            <fileline lineNumber="102">fi</fileline>
            <fileline lineNumber="103">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="104">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="105">####################################################</fileline>
            <fileline lineNumber="106">}</fileline>
            <fileline lineNumber="107" />
            <fileline lineNumber="108" />
            <fileline lineNumber="109">function User_Hit_a_key</fileline>
            <fileline lineNumber="110">{</fileline>
            <fileline lineNumber="111">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="112">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="113">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="114">######################################################</fileline>
            <fileline lineNumber="115" />
            <fileline lineNumber="116" />
            <fileline lineNumber="117">FONT_set_Message_Font</fileline>
            <fileline lineNumber="118">MSG_DISPLAY "Message" "Please  : press enter to continue "</fileline>
            <fileline lineNumber="119">read dummy</fileline>
            <fileline lineNumber="120" />
            <fileline lineNumber="121">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="122">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="123">####################################################</fileline>
            <fileline lineNumber="124">}</fileline>
            <fileline lineNumber="125" />
            <fileline lineNumber="126"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/user_interaction/sub/CAST-Mnu-Configure_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                                           #</fileline>
            <fileline lineNumber="5"># Subject : This library provide base menu functions to configure CAST run    #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO </fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11" />
            <fileline lineNumber="12">function Change_Specific_Configuration                             # Configure_CAST                              </fileline>
            <fileline lineNumber="13">{</fileline>
            <fileline lineNumber="14">#|# Var to set  : None             </fileline>
            <fileline lineNumber="15">#|#</fileline>
            <fileline lineNumber="16">#|# Base usage  : Change_Specific_Configuration</fileline>
            <fileline lineNumber="17">#|#</fileline>
            <fileline lineNumber="18">#|# Description : This function manage the specific configuration file name.</fileline>
            <fileline lineNumber="19">#|#</fileline>
            <fileline lineNumber="20">#|# Send Back   : None</fileline>
            <fileline lineNumber="21">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="22">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="23">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="24">######################################################</fileline>
            <fileline lineNumber="25">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="26" />
            <fileline lineNumber="27" />
            <fileline lineNumber="28" />
            <fileline lineNumber="29" />
            <fileline lineNumber="30">Menu_Change_Conf_item "Conf_Specifics" "${Conf_Specifics}"</fileline>
            <fileline lineNumber="31" />
            <fileline lineNumber="32" />
            <fileline lineNumber="33">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="34">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="35">#################################################### </fileline>
            <fileline lineNumber="36">}</fileline>
            <fileline lineNumber="37" />
            <fileline lineNumber="38"># Sourcing control variable </fileline>
            <fileline lineNumber="39">LibState="OK"  </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/user_interaction/sub/CAST-Mnu_Main_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                                      #</fileline>
            <fileline lineNumber="5"># Subject : This library provide base menu functions to deploy chroots on     #</fileline>
            <fileline lineNumber="6">#           server                                                            #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO </fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11">function certificates_managment ()                                               # In_main_Menu</fileline>
            <fileline lineNumber="12">{</fileline>
            <fileline lineNumber="13">#|# Var to set  : None             </fileline>
            <fileline lineNumber="14">#|#</fileline>
            <fileline lineNumber="15">#|# Base usage  : certificates_managment</fileline>
            <fileline lineNumber="16">#|#</fileline>
            <fileline lineNumber="17">#|# Description : this function launche the certificate managment sytem</fileline>
            <fileline lineNumber="18">#|#</fileline>
            <fileline lineNumber="19">#|# Send Back   : Menu</fileline>
            <fileline lineNumber="20">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="21">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="22">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="23">######################################################</fileline>
            <fileline lineNumber="24" />
            <fileline lineNumber="25">Menu_Get_items "# In_certificate_Menu" "2" "${Base_Dir_Scripts_Lib}/user_interaction/sub/CAST-Mnu_certificates_managment.lib" "certificate_Menu_:"</fileline>
            <fileline lineNumber="26" />
            <fileline lineNumber="27" />
            <fileline lineNumber="28">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="29">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="30">####################################################</fileline>
            <fileline lineNumber="31">}</fileline>
            <fileline lineNumber="32" />
            <fileline lineNumber="33" />
            <fileline lineNumber="34"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/user_interaction/sub/CAST-Mnu-DeployService_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                                            #</fileline>
            <fileline lineNumber="5"># Subject : This library provide base menu functions to configure CAST run    #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO </fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11" />
            <fileline lineNumber="12" />
            <fileline lineNumber="13" />
            <fileline lineNumber="14">function Deploy_Chroot                             # Deploy_Service                                    </fileline>
            <fileline lineNumber="15">{</fileline>
            <fileline lineNumber="16">#|# Var to set  : None             </fileline>
            <fileline lineNumber="17">#|#</fileline>
            <fileline lineNumber="18">#|# Base usage  : Change_Specific_Configuration</fileline>
            <fileline lineNumber="19">#|#</fileline>
            <fileline lineNumber="20">#|# Description : This function manage the specific configuration file name.</fileline>
            <fileline lineNumber="21">#|#</fileline>
            <fileline lineNumber="22">#|# Send Back   : None</fileline>
            <fileline lineNumber="23">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="24">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="25">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="26">######################################################</fileline>
            <fileline lineNumber="27">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="28" />
            <fileline lineNumber="29" />
            <fileline lineNumber="30" />
            <fileline lineNumber="31">Menu_Get_items "# Deploy_Chroot" "2" "${Base_Dir_Scripts_Lib}/user_interaction/sub/Deploy_Chroot.lib" "Deploy_Chroot:"</fileline>
            <fileline lineNumber="32" />
            <fileline lineNumber="33" />
            <fileline lineNumber="34">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="35">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="36">#################################################### </fileline>
            <fileline lineNumber="37">}</fileline>
            <fileline lineNumber="38" />
            <fileline lineNumber="39">function Deploy_openstack                               # Deploy_Service                                        </fileline>
            <fileline lineNumber="40">{</fileline>
            <fileline lineNumber="41">#|# Var to set  : None             </fileline>
            <fileline lineNumber="42">#|#</fileline>
            <fileline lineNumber="43">#|# Base usage  : Change_Specific_Configuration</fileline>
            <fileline lineNumber="44">#|#</fileline>
            <fileline lineNumber="45">#|# Description : This function manage the specific configuration file name.</fileline>
            <fileline lineNumber="46">#|#</fileline>
            <fileline lineNumber="47">#|# Send Back   : None</fileline>
            <fileline lineNumber="48">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="49">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="50">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="51">######################################################</fileline>
            <fileline lineNumber="52">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="53" />
            <fileline lineNumber="54" />
            <fileline lineNumber="55" />
            <fileline lineNumber="56">Menu_Get_items "# Deploy_openstack" "2" "${Base_Dir_Scripts_Lib}/user_interaction/sub/CAST-Mnu-DeployService_openStack.lib" "Deploy_openstack:"</fileline>
            <fileline lineNumber="57" />
            <fileline lineNumber="58" />
            <fileline lineNumber="59">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="60">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="61">#################################################### </fileline>
            <fileline lineNumber="62">}</fileline>
            <fileline lineNumber="63" />
            <fileline lineNumber="64" />
            <fileline lineNumber="65">function Deploy_Compiled_Package                              # Deploy_Service                                        </fileline>
            <fileline lineNumber="66">{</fileline>
            <fileline lineNumber="67">#|# Var to set  : None             </fileline>
            <fileline lineNumber="68">#|#</fileline>
            <fileline lineNumber="69">#|# Base usage  : Change_Specific_Configuration</fileline>
            <fileline lineNumber="70">#|#</fileline>
            <fileline lineNumber="71">#|# Description : This function manage the specific configuration file name.</fileline>
            <fileline lineNumber="72">#|#</fileline>
            <fileline lineNumber="73">#|# Send Back   : None</fileline>
            <fileline lineNumber="74">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="75">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="76">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="77">######################################################</fileline>
            <fileline lineNumber="78">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="79" />
            <fileline lineNumber="80" />
            <fileline lineNumber="81" />
            <fileline lineNumber="82">Menu_Get_items "# PKG_installable_ok" "2" "${Base_Dir_Scripts_Lib}/build/compil/pkg_install.lib" "Deploy_builded_package:"</fileline>
            <fileline lineNumber="83" />
            <fileline lineNumber="84" />
            <fileline lineNumber="85">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="86">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="87">#################################################### </fileline>
            <fileline lineNumber="88">}</fileline>
            <fileline lineNumber="89" />
            <fileline lineNumber="90" />
            <fileline lineNumber="91"># Sourcing control variable </fileline>
            <fileline lineNumber="92">LibState="OK"  </fileline>
            <fileline lineNumber="93" />
        </content>
    </file>
    <file>
        <filename>./lib/user_interaction/sub/CAST-Mnu_ManageChroot_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                                        #</fileline>
            <fileline lineNumber="5"># Subject : This library provide base menu functions to deploy chroots on     #</fileline>
            <fileline lineNumber="6">#           server                                                            #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO </fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11">function Display_Chroot_configuration ()</fileline>
            <fileline lineNumber="12">{</fileline>
            <fileline lineNumber="13">#|# Var to set  : None             </fileline>
            <fileline lineNumber="14">#|#</fileline>
            <fileline lineNumber="15">#|# Base usage  : Change_Specific_Configuration</fileline>
            <fileline lineNumber="16">#|#</fileline>
            <fileline lineNumber="17">#|# Description : This function manage the specific configuration file name.</fileline>
            <fileline lineNumber="18">#|#</fileline>
            <fileline lineNumber="19">#|# Send Back   : None</fileline>
            <fileline lineNumber="20">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="21">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="22">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="23">######################################################</fileline>
            <fileline lineNumber="24">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="25" />
            <fileline lineNumber="26" />
            <fileline lineNumber="27" />
            <fileline lineNumber="28" />
            <fileline lineNumber="29">Menu_Get_items "# Configure_ChRoot_Size" "2" "${Base_Dir_Scripts_Lib}/user_interaction/sub/Configure_Chroot_Size.lib" "Configure_ChRoot_Size:"</fileline>
            <fileline lineNumber="30" />
            <fileline lineNumber="31" />
            <fileline lineNumber="32">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="33">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="34">#################################################### 	</fileline>
            <fileline lineNumber="35">}</fileline>
            <fileline lineNumber="36" />
            <fileline lineNumber="37" />
            <fileline lineNumber="38">function Select_Chroot_Size                             # Deploy_Chroot                              </fileline>
            <fileline lineNumber="39">{</fileline>
            <fileline lineNumber="40">#|# Var to set  : None             </fileline>
            <fileline lineNumber="41">#|#</fileline>
            <fileline lineNumber="42">#|# Base usage  : Change_Specific_Configuration</fileline>
            <fileline lineNumber="43">#|#</fileline>
            <fileline lineNumber="44">#|# Description : This function manage the specific configuration file name.</fileline>
            <fileline lineNumber="45">#|#</fileline>
            <fileline lineNumber="46">#|# Send Back   : None</fileline>
            <fileline lineNumber="47">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="48">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="49">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="50">######################################################</fileline>
            <fileline lineNumber="51">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="52" />
            <fileline lineNumber="53" />
            <fileline lineNumber="54" />
            <fileline lineNumber="55" />
            <fileline lineNumber="56">Menu_Get_items "# Configure_ChRoot_Size" "2" "${Base_Dir_Scripts_Lib}/user_interaction/sub/Configure_Chroot_Size.lib" "Configure_ChRoot_Size:"</fileline>
            <fileline lineNumber="57" />
            <fileline lineNumber="58" />
            <fileline lineNumber="59">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="60">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="61">#################################################### </fileline>
            <fileline lineNumber="62">}</fileline>
            <fileline lineNumber="63" />
            <fileline lineNumber="64"># Sourcing control variable </fileline>
            <fileline lineNumber="65">LibState="OK"  </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/user_interaction/sub/CAST-Mnu-DeployService_openStack_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                                        #</fileline>
            <fileline lineNumber="5"># Subject : This library provide base menu functions to configure CAST run    #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO </fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11" />
            <fileline lineNumber="12" />
            <fileline lineNumber="13" />
            <fileline lineNumber="14">function Install_Base_Services                             # Deploy_openstack                                    </fileline>
            <fileline lineNumber="15">{</fileline>
            <fileline lineNumber="16">#|# Var to set  : None             </fileline>
            <fileline lineNumber="17">#|#</fileline>
            <fileline lineNumber="18">#|# Base usage  : Change_Specific_Configuration</fileline>
            <fileline lineNumber="19">#|#</fileline>
            <fileline lineNumber="20">#|# Description : This function manage the specific configuration file name.</fileline>
            <fileline lineNumber="21">#|#</fileline>
            <fileline lineNumber="22">#|# Send Back   : None</fileline>
            <fileline lineNumber="23">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="24">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="25">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="26">######################################################</fileline>
            <fileline lineNumber="27">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="28" />
            <fileline lineNumber="29" />
            <fileline lineNumber="30" />
            <fileline lineNumber="31">Menu_Get_items "# Deploy_Chroot" "2" "${Base_Dir_Scripts_Lib}/user_interaction/sub/Deploy_Chroot.lib" "Deploy_Chroot:"</fileline>
            <fileline lineNumber="32" />
            <fileline lineNumber="33" />
            <fileline lineNumber="34">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="35">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="36">#################################################### </fileline>
            <fileline lineNumber="37">}</fileline>
            <fileline lineNumber="38" />
            <fileline lineNumber="39">function yum_InstalledList_Init                             # Deploy_openstack                                    </fileline>
            <fileline lineNumber="40">{</fileline>
            <fileline lineNumber="41">#|# Var to set  : None             </fileline>
            <fileline lineNumber="42">#|#</fileline>
            <fileline lineNumber="43">#|# Base usage  : Change_Specific_Configuration</fileline>
            <fileline lineNumber="44">#|#</fileline>
            <fileline lineNumber="45">#|# Description : This function manage the specific configuration file name.</fileline>
            <fileline lineNumber="46">#|#</fileline>
            <fileline lineNumber="47">#|# Send Back   : None</fileline>
            <fileline lineNumber="48">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="49">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="50">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="51">######################################################</fileline>
            <fileline lineNumber="52">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="53" />
            <fileline lineNumber="54">set -A PackageList </fileline>
            <fileline lineNumber="55" />
            <fileline lineNumber="56">PackageList=$( yum  list installed | awk '{ print $1}')</fileline>
            <fileline lineNumber="57">Test_yum_package_presence </fileline>
            <fileline lineNumber="58" />
            <fileline lineNumber="59">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="60">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="61">#################################################### </fileline>
            <fileline lineNumber="62">}</fileline>
            <fileline lineNumber="63" />
            <fileline lineNumber="64"># Sourcing control variable </fileline>
            <fileline lineNumber="65">LibState="OK"  </fileline>
            <fileline lineNumber="66" />
        </content>
    </file>
    <file>
        <filename>./lib/user_interaction/sub/CAST-Mnu-Chroot_Parameters_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                                           #</fileline>
            <fileline lineNumber="5"># Subject : This library provide base menu functions to configure CAST run    #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO </fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11">function CHROOT_base_size                             # Configure_ChRoot_Size                                      </fileline>
            <fileline lineNumber="12">{</fileline>
            <fileline lineNumber="13">#|# Var to set  : None             </fileline>
            <fileline lineNumber="14">#|#</fileline>
            <fileline lineNumber="15">#|# Base usage  : CHROOT_base </fileline>
            <fileline lineNumber="16">#|#</fileline>
            <fileline lineNumber="17">#|# Description : This function manage the specific configuration file name.</fileline>
            <fileline lineNumber="18">#|#</fileline>
            <fileline lineNumber="19">#|# Send Back   : None</fileline>
            <fileline lineNumber="20">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="21">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="22">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="23">######################################################</fileline>
            <fileline lineNumber="24">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="25" />
            <fileline lineNumber="26" />
            <fileline lineNumber="27">. ${Base_Dir_Scripts_Data_Def}/Chroots/Small.ChrtDef</fileline>
            <fileline lineNumber="28">Banner</fileline>
            <fileline lineNumber="29">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="30">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="31">####################################################</fileline>
            <fileline lineNumber="32">}</fileline>
            <fileline lineNumber="33" />
            <fileline lineNumber="34">function CHROOT_Medium_size                             # Configure_ChRoot_Size                                            </fileline>
            <fileline lineNumber="35">{</fileline>
            <fileline lineNumber="36">#|# Var to set  : None             </fileline>
            <fileline lineNumber="37">#|#</fileline>
            <fileline lineNumber="38">#|# Base usage  : CHROOT_Medium </fileline>
            <fileline lineNumber="39">#|#</fileline>
            <fileline lineNumber="40">#|# Description : This function manage the specific configuration file name.</fileline>
            <fileline lineNumber="41">#|#</fileline>
            <fileline lineNumber="42">#|# Send Back   : None</fileline>
            <fileline lineNumber="43">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="44">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="45">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="46">######################################################</fileline>
            <fileline lineNumber="47">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="48" />
            <fileline lineNumber="49" />
            <fileline lineNumber="50">. ${Base_Dir_Scripts_Data_Def}/Chroots/Medium.ChrtDef</fileline>
            <fileline lineNumber="51">Banner</fileline>
            <fileline lineNumber="52">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="53">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="54">####################################################</fileline>
            <fileline lineNumber="55">}</fileline>
            <fileline lineNumber="56" />
            <fileline lineNumber="57">function CHROOT_big_size                             # Configure_ChRoot_Size                                           </fileline>
            <fileline lineNumber="58">{</fileline>
            <fileline lineNumber="59">#|# Var to set  : None             </fileline>
            <fileline lineNumber="60">#|#</fileline>
            <fileline lineNumber="61">#|# Base usage  : CHROOT_big  </fileline>
            <fileline lineNumber="62">#|#</fileline>
            <fileline lineNumber="63">#|# Description : This function manage the specific configuration file name.</fileline>
            <fileline lineNumber="64">#|#</fileline>
            <fileline lineNumber="65">#|# Send Back   : None</fileline>
            <fileline lineNumber="66">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="67">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="68">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="69">######################################################</fileline>
            <fileline lineNumber="70">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="71" />
            <fileline lineNumber="72" />
            <fileline lineNumber="73">. ${Base_Dir_Scripts_Data_Def}/Chroots/Big.ChrtDef</fileline>
            <fileline lineNumber="74" />
            <fileline lineNumber="75">Banner</fileline>
            <fileline lineNumber="76">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="77">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="78">####################################################</fileline>
            <fileline lineNumber="79">}</fileline>
            <fileline lineNumber="80" />
            <fileline lineNumber="81" />
            <fileline lineNumber="82">function Banner                             # Configure_ChRoot_Size                                           </fileline>
            <fileline lineNumber="83">{</fileline>
            <fileline lineNumber="84">#|# Var to set  : None             </fileline>
            <fileline lineNumber="85">#|#</fileline>
            <fileline lineNumber="86">#|# Base usage  : CHROOT_big  </fileline>
            <fileline lineNumber="87">#|#</fileline>
            <fileline lineNumber="88">#|# Description : This function manage the specific configuration file name.</fileline>
            <fileline lineNumber="89">#|#</fileline>
            <fileline lineNumber="90">#|# Send Back   : None</fileline>
            <fileline lineNumber="91">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="92">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="93">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="94">######################################################</fileline>
            <fileline lineNumber="95">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="96" />
            <fileline lineNumber="97" />
            <fileline lineNumber="98">BANNER="Chroot configuration : "</fileline>
            <fileline lineNumber="99">BANNER="${BANNER} \\n Root File system       : [ ${dev_root} ]"</fileline>
            <fileline lineNumber="100">BANNER="${BANNER} \\n Dev file system        : [ ${dev_dev} ]"</fileline>
            <fileline lineNumber="101">BANNER="${BANNER} \\n Temp File system       : [ ${dev_tmp} ]"</fileline>
            <fileline lineNumber="102">BANNER="${BANNER} \\n optional file system   : [ ${dev_opt} ]"</fileline>
            <fileline lineNumber="103">BANNER="${BANNER} \\n data file system       : [ ${dev_data} ]"</fileline>
            <fileline lineNumber="104">BANNER="${BANNER} \\n products file system   : [ ${dev_products} ]"</fileline>
            <fileline lineNumber="105" />
            <fileline lineNumber="106" />
            <fileline lineNumber="107">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="108">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="109">####################################################</fileline>
            <fileline lineNumber="110">}</fileline>
            <fileline lineNumber="111" />
            <fileline lineNumber="112"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/user_interaction/sub/user_sub_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                                          #</fileline>
            <fileline lineNumber="5"># Subject : This lib is used to provide any function about user menu control  #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO</fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11">############################</fileline>
            <fileline lineNumber="12" />
            <fileline lineNumber="13">function USER_Continue_ON_ERR</fileline>
            <fileline lineNumber="14">{</fileline>
            <fileline lineNumber="15">#|# MSG_TO_Display : use this var to set the displayed message when an user action is needed</fileline>
            <fileline lineNumber="16">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="17">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="18">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="19">######################################################</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23" />
            <fileline lineNumber="24">set -A Configuration_install_pkg 'Error occured :'                       \</fileline>
            <fileline lineNumber="25">     'Continue'           \</fileline>
            <fileline lineNumber="26">     'exit'</fileline>
            <fileline lineNumber="27" />
            <fileline lineNumber="28">Menu_Build Configuration_install_pkg</fileline>
            <fileline lineNumber="29">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="30">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="31">####################################################</fileline>
            <fileline lineNumber="32">}</fileline>
            <fileline lineNumber="33" />
            <fileline lineNumber="34">function Continue</fileline>
            <fileline lineNumber="35">{</fileline>
            <fileline lineNumber="36">#|# MSG_TO_Display : use this var to set the displayed message when an user action is needed</fileline>
            <fileline lineNumber="37">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="38">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="39">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="40">######################################################</fileline>
            <fileline lineNumber="41">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="42" />
            <fileline lineNumber="43" />
            <fileline lineNumber="44">MSG_DISPLAY "info" "1" "You choose to continue"</fileline>
            <fileline lineNumber="45" />
            <fileline lineNumber="46">Menu_Build Configuration_install_pkg</fileline>
            <fileline lineNumber="47">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="48">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="49">####################################################</fileline>
            <fileline lineNumber="50">}</fileline>
            <fileline lineNumber="51" />
            <fileline lineNumber="52"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/user_interaction/sub/CAST-Mnu_certificates_managment_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                                   #</fileline>
            <fileline lineNumber="5"># Subject : This library provide base menu functions to deploy chroots on     #</fileline>
            <fileline lineNumber="6">#           server                                                            #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO </fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11">function certificates_ROOT ()                                                       # In_certificate_Menu</fileline>
            <fileline lineNumber="12">{</fileline>
            <fileline lineNumber="13">#|# Var to set  : None             </fileline>
            <fileline lineNumber="14">#|#</fileline>
            <fileline lineNumber="15">#|# Base usage  : certificates_managment</fileline>
            <fileline lineNumber="16">#|#</fileline>
            <fileline lineNumber="17">#|# Description : this function launche the certificate managment sytem</fileline>
            <fileline lineNumber="18">#|#</fileline>
            <fileline lineNumber="19">#|# Send Back   : Menu</fileline>
            <fileline lineNumber="20">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="21">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="22">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="23">######################################################</fileline>
            <fileline lineNumber="24" />
            <fileline lineNumber="25" />
            <fileline lineNumber="26">Menu_Get_items "# In_Root_certificate_Menu" "2" "${Base_Dir_Scripts_Lib}/user_interaction/sub/certificates/certificates_ROOT.lib" "certificate_root_Menu_:"</fileline>
            <fileline lineNumber="27" />
            <fileline lineNumber="28" />
            <fileline lineNumber="29">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="30">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="31">####################################################</fileline>
            <fileline lineNumber="32">}</fileline>
            <fileline lineNumber="33" />
            <fileline lineNumber="34">function managed_domaines ()                                                       # In_certificate_Menu</fileline>
            <fileline lineNumber="35">{</fileline>
            <fileline lineNumber="36">#|# Var to set  : None             </fileline>
            <fileline lineNumber="37">#|#</fileline>
            <fileline lineNumber="38">#|# Base usage  : certificates_managment</fileline>
            <fileline lineNumber="39">#|#</fileline>
            <fileline lineNumber="40">#|# Description : this function launche the certificate managment sytem</fileline>
            <fileline lineNumber="41">#|#</fileline>
            <fileline lineNumber="42">#|# Send Back   : Menu</fileline>
            <fileline lineNumber="43">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="44">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="45">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="46">######################################################</fileline>
            <fileline lineNumber="47" />
            <fileline lineNumber="48" />
            <fileline lineNumber="49" />
            <fileline lineNumber="50" />
            <fileline lineNumber="51">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="52">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="53">####################################################</fileline>
            <fileline lineNumber="54">}</fileline>
            <fileline lineNumber="55" />
            <fileline lineNumber="56">function managed_server ()                                                        # In_certificate_Menu</fileline>
            <fileline lineNumber="57">{</fileline>
            <fileline lineNumber="58">#|# Var to set  : None             </fileline>
            <fileline lineNumber="59">#|#</fileline>
            <fileline lineNumber="60">#|# Base usage  : certificates_managment</fileline>
            <fileline lineNumber="61">#|#</fileline>
            <fileline lineNumber="62">#|# Description : this function launche the certificate managment sytem</fileline>
            <fileline lineNumber="63">#|#</fileline>
            <fileline lineNumber="64">#|# Send Back   : Menu</fileline>
            <fileline lineNumber="65">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="66">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="67">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="68">######################################################</fileline>
            <fileline lineNumber="69" />
            <fileline lineNumber="70" />
            <fileline lineNumber="71" />
            <fileline lineNumber="72" />
            <fileline lineNumber="73">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="74">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="75">####################################################</fileline>
            <fileline lineNumber="76">}</fileline>
            <fileline lineNumber="77" />
            <fileline lineNumber="78" />
            <fileline lineNumber="79" />
            <fileline lineNumber="80">function managed_mail ()                                                        # In_certificate_Menu</fileline>
            <fileline lineNumber="81">{</fileline>
            <fileline lineNumber="82">#|# Var to set  : None             </fileline>
            <fileline lineNumber="83">#|#</fileline>
            <fileline lineNumber="84">#|# Base usage  : certificates_managment</fileline>
            <fileline lineNumber="85">#|#</fileline>
            <fileline lineNumber="86">#|# Description : this function launche the certificate managment sytem</fileline>
            <fileline lineNumber="87">#|#</fileline>
            <fileline lineNumber="88">#|# Send Back   : Menu</fileline>
            <fileline lineNumber="89">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="90">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="91">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="92">######################################################</fileline>
            <fileline lineNumber="93" />
            <fileline lineNumber="94" />
            <fileline lineNumber="95" />
            <fileline lineNumber="96" />
            <fileline lineNumber="97">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="98">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="99">####################################################</fileline>
            <fileline lineNumber="100">}</fileline>
            <fileline lineNumber="101" />
            <fileline lineNumber="102" />
            <fileline lineNumber="103">function managed_users ()                                                       # In_certificate_Menu</fileline>
            <fileline lineNumber="104">{</fileline>
            <fileline lineNumber="105">#|# Var to set  : None             </fileline>
            <fileline lineNumber="106">#|#</fileline>
            <fileline lineNumber="107">#|# Base usage  : certificates_managment</fileline>
            <fileline lineNumber="108">#|#</fileline>
            <fileline lineNumber="109">#|# Description : this function launche the certificate managment sytem</fileline>
            <fileline lineNumber="110">#|#</fileline>
            <fileline lineNumber="111">#|# Send Back   : Menu</fileline>
            <fileline lineNumber="112">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="113">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="114">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="115">######################################################</fileline>
            <fileline lineNumber="116" />
            <fileline lineNumber="117" />
            <fileline lineNumber="118" />
            <fileline lineNumber="119" />
            <fileline lineNumber="120">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="121">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="122">####################################################</fileline>
            <fileline lineNumber="123">}</fileline>
            <fileline lineNumber="124" />
            <fileline lineNumber="125"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/user_interaction/sub/CAST-Mnu-DiagnoseServer_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                                           #</fileline>
            <fileline lineNumber="5"># Subject : This library provide base menu functions to configure CAST run    #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO </fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11" />
            <fileline lineNumber="12" />
            <fileline lineNumber="13" />
            <fileline lineNumber="14">function Services_Status                             # Manage_Service                              </fileline>
            <fileline lineNumber="15">{</fileline>
            <fileline lineNumber="16">#|# Var to set  : None             </fileline>
            <fileline lineNumber="17">#|#</fileline>
            <fileline lineNumber="18">#|# Base usage  : Change_Specific_Configuration</fileline>
            <fileline lineNumber="19">#|#</fileline>
            <fileline lineNumber="20">#|# Description : This function manage the specific configuration file name.</fileline>
            <fileline lineNumber="21">#|#</fileline>
            <fileline lineNumber="22">#|# Send Back   : None</fileline>
            <fileline lineNumber="23">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="24">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="25">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="26">######################################################</fileline>
            <fileline lineNumber="27">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="28" />
            <fileline lineNumber="29" />
            <fileline lineNumber="30">MSG_DISPLAY "info" "1" "Not yet implemented"</fileline>
            <fileline lineNumber="31" />
            <fileline lineNumber="32">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="33">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="34">#################################################### </fileline>
            <fileline lineNumber="35">}</fileline>
            <fileline lineNumber="36" />
            <fileline lineNumber="37">function Service_activate                             # Manage_Service                              </fileline>
            <fileline lineNumber="38">{</fileline>
            <fileline lineNumber="39">#|# Var to set  : None             </fileline>
            <fileline lineNumber="40">#|#</fileline>
            <fileline lineNumber="41">#|# Base usage  : Change_Specific_Configuration</fileline>
            <fileline lineNumber="42">#|#</fileline>
            <fileline lineNumber="43">#|# Description : This function manage the specific configuration file name.</fileline>
            <fileline lineNumber="44">#|#</fileline>
            <fileline lineNumber="45">#|# Send Back   : None</fileline>
            <fileline lineNumber="46">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="47">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="48">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="49">######################################################</fileline>
            <fileline lineNumber="50">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="51" />
            <fileline lineNumber="52" />
            <fileline lineNumber="53">MSG_DISPLAY "info" "1" "Not yet implemented"</fileline>
            <fileline lineNumber="54" />
            <fileline lineNumber="55">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="56">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="57">#################################################### </fileline>
            <fileline lineNumber="58">}</fileline>
            <fileline lineNumber="59" />
            <fileline lineNumber="60">function Service_start_mode                             # Manage_Service                              </fileline>
            <fileline lineNumber="61">{</fileline>
            <fileline lineNumber="62">#|# Var to set  : None             </fileline>
            <fileline lineNumber="63">#|#</fileline>
            <fileline lineNumber="64">#|# Base usage  : Change_Specific_Configuration</fileline>
            <fileline lineNumber="65">#|#</fileline>
            <fileline lineNumber="66">#|# Description : This function manage the specific configuration file name.</fileline>
            <fileline lineNumber="67">#|#</fileline>
            <fileline lineNumber="68">#|# Send Back   : None</fileline>
            <fileline lineNumber="69">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="70">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="71">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="72">######################################################</fileline>
            <fileline lineNumber="73">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="74" />
            <fileline lineNumber="75" />
            <fileline lineNumber="76">MSG_DISPLAY "info" "1" "Not yet implemented"</fileline>
            <fileline lineNumber="77" />
            <fileline lineNumber="78">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="79">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="80">#################################################### </fileline>
            <fileline lineNumber="81">}</fileline>
            <fileline lineNumber="82"># Sourcing control variable </fileline>
            <fileline lineNumber="83">LibState="OK"  </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/user_interaction/sub/CAST-Mnu-ManageServices_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                                           #</fileline>
            <fileline lineNumber="5"># Subject : This library provide base menu functions to configure CAST run    #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO </fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11" />
            <fileline lineNumber="12" />
            <fileline lineNumber="13" />
            <fileline lineNumber="14">function Services_Status                             # Manage_Service                              </fileline>
            <fileline lineNumber="15">{</fileline>
            <fileline lineNumber="16">#|# Var to set  : None             </fileline>
            <fileline lineNumber="17">#|#</fileline>
            <fileline lineNumber="18">#|# Base usage  : Change_Specific_Configuration</fileline>
            <fileline lineNumber="19">#|#</fileline>
            <fileline lineNumber="20">#|# Description : This function manage the specific configuration file name.</fileline>
            <fileline lineNumber="21">#|#</fileline>
            <fileline lineNumber="22">#|# Send Back   : None</fileline>
            <fileline lineNumber="23">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="24">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="25">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="26">######################################################</fileline>
            <fileline lineNumber="27">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="28" />
            <fileline lineNumber="29" />
            <fileline lineNumber="30">MSG_DISPLAY "info" "1" "Not yet implemented"</fileline>
            <fileline lineNumber="31" />
            <fileline lineNumber="32">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="33">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="34">#################################################### </fileline>
            <fileline lineNumber="35">}</fileline>
            <fileline lineNumber="36" />
            <fileline lineNumber="37">function Service_activate                             # Manage_Service                              </fileline>
            <fileline lineNumber="38">{</fileline>
            <fileline lineNumber="39">#|# Var to set  : None             </fileline>
            <fileline lineNumber="40">#|#</fileline>
            <fileline lineNumber="41">#|# Base usage  : Change_Specific_Configuration</fileline>
            <fileline lineNumber="42">#|#</fileline>
            <fileline lineNumber="43">#|# Description : This function manage the specific configuration file name.</fileline>
            <fileline lineNumber="44">#|#</fileline>
            <fileline lineNumber="45">#|# Send Back   : None</fileline>
            <fileline lineNumber="46">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="47">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="48">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="49">######################################################</fileline>
            <fileline lineNumber="50">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="51" />
            <fileline lineNumber="52" />
            <fileline lineNumber="53">MSG_DISPLAY "info" "1" "Not yet implemented"</fileline>
            <fileline lineNumber="54" />
            <fileline lineNumber="55">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="56">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="57">#################################################### </fileline>
            <fileline lineNumber="58">}</fileline>
            <fileline lineNumber="59" />
            <fileline lineNumber="60">function Service_start_mode                             # Manage_Service                              </fileline>
            <fileline lineNumber="61">{</fileline>
            <fileline lineNumber="62">#|# Var to set  : None             </fileline>
            <fileline lineNumber="63">#|#</fileline>
            <fileline lineNumber="64">#|# Base usage  : Change_Specific_Configuration</fileline>
            <fileline lineNumber="65">#|#</fileline>
            <fileline lineNumber="66">#|# Description : This function manage the specific configuration file name.</fileline>
            <fileline lineNumber="67">#|#</fileline>
            <fileline lineNumber="68">#|# Send Back   : None</fileline>
            <fileline lineNumber="69">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="70">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="71">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="72">######################################################</fileline>
            <fileline lineNumber="73">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="74" />
            <fileline lineNumber="75" />
            <fileline lineNumber="76">MSG_DISPLAY "info" "1" "Not yet implemented"</fileline>
            <fileline lineNumber="77" />
            <fileline lineNumber="78">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="79">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="80">#################################################### </fileline>
            <fileline lineNumber="81">}</fileline>
            <fileline lineNumber="82"># Sourcing control variable </fileline>
            <fileline lineNumber="83">LibState="OK"  </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/generics/rg/delete.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 25/06/2024</fileline>
            <fileline lineNumber="4"># generic route table removing script</fileline>
            <fileline lineNumber="5">script_name=$(basename "${0}" .sh)</fileline>
            <fileline lineNumber="6" />
            <fileline lineNumber="7"># Sourcing core ressource file </fileline>
            <fileline lineNumber="8">. ./lib/core.sh </fileline>
            <fileline lineNumber="9">if [[ ${CoreState} = "OK" ]]</fileline>
            <fileline lineNumber="10">   then </fileline>
            <fileline lineNumber="11">       echo "core scripting loaded"</fileline>
            <fileline lineNumber="12">   else </fileline>
            <fileline lineNumber="13">       echo "Error on core scripting configuration"</fileline>
            <fileline lineNumber="14">       exit 1 </fileline>
            <fileline lineNumber="15">fi </fileline>
            <fileline lineNumber="16" />
            <fileline lineNumber="17">#sourcing tenant configuration file :</fileline>
            <fileline lineNumber="18">MSG_DISPLAY "check" "0" "Loading tenant configuration"</fileline>
            <fileline lineNumber="19">. ../../config/config.sh </fileline>
            <fileline lineNumber="20">if [[ ${ConfigTenantState} = "OK" ]]</fileline>
            <fileline lineNumber="21">   then </fileline>
            <fileline lineNumber="22">       MSG_DISPLAY "EdSMessage" "0" ""</fileline>
            <fileline lineNumber="23">   else </fileline>
            <fileline lineNumber="24">       MSG_DISPLAY "EdSMessage" "1" ""</fileline>
            <fileline lineNumber="25">fi </fileline>
            <fileline lineNumber="26">#sourcing ressourcegroupe configuration file :</fileline>
            <fileline lineNumber="27">MSG_DISPLAY "check" "0" "Loading ressource group configuration"</fileline>
            <fileline lineNumber="28">. ./config/config.sh </fileline>
            <fileline lineNumber="29">if [[ ${ConfigRessourceGroupeState} = "OK" ]]</fileline>
            <fileline lineNumber="30">   then </fileline>
            <fileline lineNumber="31">       MSG_DISPLAY "EdSMessage" "0" ""</fileline>
            <fileline lineNumber="32">   else </fileline>
            <fileline lineNumber="33">       MSG_DISPLAY "EdSMessage" "0" ""</fileline>
            <fileline lineNumber="34">fi </fileline>
            <fileline lineNumber="35" />
            <fileline lineNumber="36" />
            <fileline lineNumber="37"># init all base var and display configuraiton </fileline>
            <fileline lineNumber="38">init_all</fileline>
            <fileline lineNumber="39" />
            <fileline lineNumber="40">echo -n "removing route table : ${ObjectName} ...  "</fileline>
            <fileline lineNumber="41">az network route-table delete --resource-group $resourceGroup --name $ObjectName &amp;&gt; ${logfile} )</fileline>
            <fileline lineNumber="42">error_CTRL "${?}"</fileline>
            <fileline lineNumber="43" />
        </content>
    </file>
    <file>
        <filename>./lib/generics/rg/discover.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 25/06/2024</fileline>
            <fileline lineNumber="4"># generic route table removing script</fileline>
            <fileline lineNumber="5">script_name=$(basename "${0}" .sh)</fileline>
            <fileline lineNumber="6" />
            <fileline lineNumber="7"># Sourcing core ressource file </fileline>
            <fileline lineNumber="8">. ./lib/core.sh </fileline>
            <fileline lineNumber="9">if [[ ${CoreState} = "OK" ]]</fileline>
            <fileline lineNumber="10">   then </fileline>
            <fileline lineNumber="11">       echo "core scripting loaded"</fileline>
            <fileline lineNumber="12">   else </fileline>
            <fileline lineNumber="13">       echo "Error on core scripting configuration"</fileline>
            <fileline lineNumber="14">       exit 1 </fileline>
            <fileline lineNumber="15">fi </fileline>
            <fileline lineNumber="16" />
            <fileline lineNumber="17">#sourcing tenant configuration file :</fileline>
            <fileline lineNumber="18">MSG_DISPLAY "check" "0" "Loading tenant configuration"</fileline>
            <fileline lineNumber="19">. ../../config/config.sh </fileline>
            <fileline lineNumber="20">if [[ ${ConfigTenantState} = "OK" ]]</fileline>
            <fileline lineNumber="21">   then </fileline>
            <fileline lineNumber="22">       MSG_DISPLAY "EdSMessage" "0" ""</fileline>
            <fileline lineNumber="23">   else </fileline>
            <fileline lineNumber="24">       MSG_DISPLAY "EdEMessage" "1" ""</fileline>
            <fileline lineNumber="25">fi </fileline>
            <fileline lineNumber="26">#sourcing ressourcegroupe configuration file :</fileline>
            <fileline lineNumber="27">if [[ -f  ./config/config.sh ]]</fileline>
            <fileline lineNumber="28">  then </fileline>
            <fileline lineNumber="29">    MSG_DISPLAY "check" "0" "Loading ressource group configuration"</fileline>
            <fileline lineNumber="30">    . ./config/config.sh </fileline>
            <fileline lineNumber="31">    if [[ ${ConfigRessourceGroupeState} = "OK" ]]</fileline>
            <fileline lineNumber="32">    then </fileline>
            <fileline lineNumber="33">        MSG_DISPLAY "EdSMessage" "0" ""</fileline>
            <fileline lineNumber="34">    else </fileline>
            <fileline lineNumber="35">        MSG_DISPLAY "EdEMessage" "0" ""</fileline>
            <fileline lineNumber="36">    fi </fileline>
            <fileline lineNumber="37">fi</fileline>
            <fileline lineNumber="38" />
            <fileline lineNumber="39">resourceGroup=$( pwd | awk -F \/ '{ print $NF }' )</fileline>
            <fileline lineNumber="40" />
            <fileline lineNumber="41" />
            <fileline lineNumber="42" />
            <fileline lineNumber="43"># Redirecting all error to log file</fileline>
            <fileline lineNumber="44">#exec 2&gt; ${logfile}</fileline>
            <fileline lineNumber="45" />
            <fileline lineNumber="46">init_all</fileline>
            <fileline lineNumber="47" />
            <fileline lineNumber="48" />
            <fileline lineNumber="49"># gathering ressource group object list</fileline>
            <fileline lineNumber="50">OBJECTS=$(az resource list --resource-group ${resourceGroup} --query "[].{name:name, type:type}" -o json)</fileline>
            <fileline lineNumber="51" />
            <fileline lineNumber="52"># Boucle sur chaque objet et genere la structure de repertoires et fichiers</fileline>
            <fileline lineNumber="53">echo "${OBJECTS}" | jq -c '.[]' | while read -r OBJECT; do</fileline>
            <fileline lineNumber="54">    OBJECT_NAME=$(echo ${OBJECT} | jq -r '.name')</fileline>
            <fileline lineNumber="55">    OBJECT_TYPE=$(echo ${OBJECT} | jq -r '.type')</fileline>
            <fileline lineNumber="56" />
            <fileline lineNumber="57">    # Cree le repertoire pour l'objet</fileline>
            <fileline lineNumber="58">    mkdir -p "$OBJECT_NAME/config"</fileline>
            <fileline lineNumber="59" />
            <fileline lineNumber="60">    # Recupere les details de l'objet</fileline>
            <fileline lineNumber="61">    OBJECT_DETAILS=$(az resource show --resource-group ${resourceGroup} --name ${OBJECT_NAME} --resource-type ${OBJECT_TYPE} -o json)</fileline>
            <fileline lineNumber="62" />
            <fileline lineNumber="63">    # Convertit les details de l'objet en variables shell et ecrit dans config.sh</fileline>
            <fileline lineNumber="64">    echo "# Configuration pour l'objet ${OBJECT_NAME}" &gt; "${OBJECT_NAME}/config/config.sh"</fileline>
            <fileline lineNumber="65">    echo "$OBJECT_DETAILS" | jq -r 'to_entries | .[] | "" + (.key | ascii_upcase) + "=" + "\"" + (.value | tostring) + "\""' &gt;&gt; "${OBJECT_NAME}/config/config.sh"</fileline>
            <fileline lineNumber="66" />
            <fileline lineNumber="67">done</fileline>
            <fileline lineNumber="68" />
            <fileline lineNumber="69">echo "Discover and configuration files generation completed for resource group: ${resourceGroup}"</fileline>
        </content>
    </file>
    <file>
        <filename>./lib/generics/rg/config/config.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash</fileline>
            <fileline lineNumber="2" />
            <fileline lineNumber="3"># Global Variables</fileline>
            <fileline lineNumber="4">resourceGroup="$( basename $( pwd )) "</fileline>
            <fileline lineNumber="5" />
            <fileline lineNumber="6" />
        </content>
    </file>
    <file>
        <filename>./lib/generics/rg/display.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 25/06/2024</fileline>
            <fileline lineNumber="4"># generic ressource group display script</fileline>
            <fileline lineNumber="5">script_name=$(basename "${0}" .sh)</fileline>
            <fileline lineNumber="6" />
            <fileline lineNumber="7"># Sourcing core ressource file </fileline>
            <fileline lineNumber="8">. ./lib/core.sh </fileline>
            <fileline lineNumber="9">if [[ ${CoreState} = "OK" ]]</fileline>
            <fileline lineNumber="10">   then </fileline>
            <fileline lineNumber="11">       echo "core scripting loaded"</fileline>
            <fileline lineNumber="12">   else </fileline>
            <fileline lineNumber="13">       echo "Error on core scripting configuration"</fileline>
            <fileline lineNumber="14">       exit 1 </fileline>
            <fileline lineNumber="15">fi </fileline>
            <fileline lineNumber="16" />
            <fileline lineNumber="17">#sourcing tenant configuration file :</fileline>
            <fileline lineNumber="18">MSG_DISPLAY "check" "0" "Loading tenant configuration"</fileline>
            <fileline lineNumber="19">. ../../config/config.sh </fileline>
            <fileline lineNumber="20">if [[ ${ConfigTenantState} = "OK" ]]</fileline>
            <fileline lineNumber="21">   then </fileline>
            <fileline lineNumber="22">       MSG_DISPLAY "EdSMessage" "0" ""</fileline>
            <fileline lineNumber="23">   else </fileline>
            <fileline lineNumber="24">       MSG_DISPLAY "EdSMessage" "1" ""</fileline>
            <fileline lineNumber="25">fi </fileline>
            <fileline lineNumber="26">#sourcing ressourcegroupe configuration file :</fileline>
            <fileline lineNumber="27">MSG_DISPLAY "check" "0" "Loading ressource group configuration"</fileline>
            <fileline lineNumber="28">. ./config/config.sh </fileline>
            <fileline lineNumber="29">if [[ ${ConfigRessourceGroupeState} = "OK" ]]</fileline>
            <fileline lineNumber="30">   then </fileline>
            <fileline lineNumber="31">       MSG_DISPLAY "EdSMessage" "0" ""</fileline>
            <fileline lineNumber="32">   else </fileline>
            <fileline lineNumber="33">       MSG_DISPLAY "EdSMessage" "0" ""</fileline>
            <fileline lineNumber="34">fi </fileline>
            <fileline lineNumber="35" />
            <fileline lineNumber="36"># generating log file name and path</fileline>
            <fileline lineNumber="37">init_log_fileName</fileline>
            <fileline lineNumber="38" />
            <fileline lineNumber="39"># Redirecting all error to log file</fileline>
            <fileline lineNumber="40">eval #exec 2&gt; ${logfile}</fileline>
            <fileline lineNumber="41" />
            <fileline lineNumber="42">init_all</fileline>
            <fileline lineNumber="43" />
            <fileline lineNumber="44" />
            <fileline lineNumber="45" />
            <fileline lineNumber="46">echo -n "gathering data for ressoruce groupe : ${resourceGroup} ... "</fileline>
            <fileline lineNumber="47">result="$( az group  show --resource-group ${resourceGroup} --output tsv )"</fileline>
            <fileline lineNumber="48">error_CTRL "${?}"</fileline>
            <fileline lineNumber="49" />
        </content>
    </file>
    <file>
        <filename>./lib/generics/rg/deploy.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 25/06/2024</fileline>
            <fileline lineNumber="4"># generic route ressource group deploy script</fileline>
            <fileline lineNumber="5">script_name=$(basename "${0}" .sh)</fileline>
            <fileline lineNumber="6" />
            <fileline lineNumber="7"># Sourcing core ressource file </fileline>
            <fileline lineNumber="8">. ./lib/core.sh </fileline>
            <fileline lineNumber="9">if [[ ${CoreState} = "OK" ]]</fileline>
            <fileline lineNumber="10">   then </fileline>
            <fileline lineNumber="11">       echo "core scripting loaded"</fileline>
            <fileline lineNumber="12">   else </fileline>
            <fileline lineNumber="13">       echo "Error on core scripting configuration"</fileline>
            <fileline lineNumber="14">       exit 1 </fileline>
            <fileline lineNumber="15">fi </fileline>
            <fileline lineNumber="16" />
            <fileline lineNumber="17">#sourcing tenant configuration file :</fileline>
            <fileline lineNumber="18">MSG_DISPLAY "check" "0" "Loading tenant configuration"</fileline>
            <fileline lineNumber="19">. ../../config/config.sh </fileline>
            <fileline lineNumber="20">if [[ ${ConfigTenantState} = "OK" ]]</fileline>
            <fileline lineNumber="21">   then </fileline>
            <fileline lineNumber="22">       MSG_DISPLAY "EdSMessage" "0" ""</fileline>
            <fileline lineNumber="23">   else </fileline>
            <fileline lineNumber="24">       MSG_DISPLAY "EdSMessage" "1" ""</fileline>
            <fileline lineNumber="25">fi </fileline>
            <fileline lineNumber="26">#sourcing ressourcegroupe configuration file :</fileline>
            <fileline lineNumber="27">MSG_DISPLAY "check" "0" "Loading ressource group configuration"</fileline>
            <fileline lineNumber="28">. ./config/config.sh </fileline>
            <fileline lineNumber="29">if [[ ${ConfigRessourceGroupeState} = "OK" ]]</fileline>
            <fileline lineNumber="30">   then </fileline>
            <fileline lineNumber="31">       MSG_DISPLAY "EdSMessage" "0" ""</fileline>
            <fileline lineNumber="32">   else </fileline>
            <fileline lineNumber="33">       MSG_DISPLAY "EdSMessage" "0" ""</fileline>
            <fileline lineNumber="34">fi </fileline>
            <fileline lineNumber="35" />
            <fileline lineNumber="36"># init all base var and display configuraiton </fileline>
            <fileline lineNumber="37">init_all</fileline>
            <fileline lineNumber="38" />
        </content>
    </file>
    <file>
        <filename>./lib/core.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2">check_az_cli_run="0"</fileline>
            <fileline lineNumber="3">logfile="./default.log"</fileline>
            <fileline lineNumber="4" />
            <fileline lineNumber="5" />
            <fileline lineNumber="6"># show azure tenant configuration/infos</fileline>
            <fileline lineNumber="7">function show_configuration ()</fileline>
            <fileline lineNumber="8">{</fileline>
            <fileline lineNumber="9">    MSG_DISPLAY "info" "0"  " tenant : ${subscriptionId}                   "</fileline>
            <fileline lineNumber="10">    MSG_DISPLAY "info" "0"  " -------------------------------------------- " </fileline>
            <fileline lineNumber="11">    MSG_DISPLAY "info" "0"  " ressource goupe : [ ${resourceGroup} ]       "</fileline>
            <fileline lineNumber="12">    MSG_DISPLAY "info" "0"  " location        : [ ${location} ]            "</fileline>
            <fileline lineNumber="13">    MSG_DISPLAY "info" "0"  " object name     : [ ${ObjectName} ]          " </fileline>
            <fileline lineNumber="14">}</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16" />
            <fileline lineNumber="17"># just to give some space to read log and terminal</fileline>
            <fileline lineNumber="18">function show_spacer () </fileline>
            <fileline lineNumber="19">{</fileline>
            <fileline lineNumber="20">    MSG_DISPLAY "info" "0"  " " </fileline>
            <fileline lineNumber="21">    MSG_DISPLAY "info" "0"  " -------------------------------------------- "</fileline>
            <fileline lineNumber="22">    MSG_DISPLAY "info" "0"  " " </fileline>
            <fileline lineNumber="23">}</fileline>
            <fileline lineNumber="24" />
            <fileline lineNumber="25" />
            <fileline lineNumber="26"># liste of all files in the repertory call in ../conf/conf.cnf</fileline>
            <fileline lineNumber="27">function Do_source_all_libs ()</fileline>
            <fileline lineNumber="28">{</fileline>
            <fileline lineNumber="29">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="30">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="31">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="32">######################################################</fileline>
            <fileline lineNumber="33">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | Function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="34">  _local_lib_dir="${1}"</fileline>
            <fileline lineNumber="35">  for libs in $(find  ${_local_lib_dir} -type f -name "*_lib.sh" ) </fileline>
            <fileline lineNumber="36">     do </fileline>
            <fileline lineNumber="37">       MSG_DISPLAY "check" "0" "sourcing lib  ${libs} "</fileline>
            <fileline lineNumber="38">       . ${libs}</fileline>
            <fileline lineNumber="39">       if [[ ${LibState} = "OK" ]]</fileline>
            <fileline lineNumber="40">          then </fileline>
            <fileline lineNumber="41">              echo " : [ SUCESS ] "</fileline>
            <fileline lineNumber="42">              LibState=""</fileline>
            <fileline lineNumber="43">          else </fileline>
            <fileline lineNumber="44">              echo " : [ ERROR  ] "</fileline>
            <fileline lineNumber="45">              echo " must check ./log/default.log " </fileline>
            <fileline lineNumber="46">              exit 1  </fileline>
            <fileline lineNumber="47">        fi </fileline>
            <fileline lineNumber="48">done </fileline>
            <fileline lineNumber="49">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="50">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="51">####################################################</fileline>
            <fileline lineNumber="52">}</fileline>
            <fileline lineNumber="53" />
            <fileline lineNumber="54" />
            <fileline lineNumber="55"># set result checked success/error</fileline>
            <fileline lineNumber="56">function error_CTRL()</fileline>
            <fileline lineNumber="57">{</fileline>
            <fileline lineNumber="58">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="59">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="60">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="61">######################################################</fileline>
            <fileline lineNumber="62">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | Function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="63"># manage besi error controle</fileline>
            <fileline lineNumber="64">local _result="${1}"</fileline>
            <fileline lineNumber="65">if [ ${_result} = "0" ]</fileline>
            <fileline lineNumber="66">   then </fileline>
            <fileline lineNumber="67">       echo "Success" </fileline>
            <fileline lineNumber="68">   else </fileline>
            <fileline lineNumber="69">       echo "Error" </fileline>
            <fileline lineNumber="70">       exit 2</fileline>
            <fileline lineNumber="71">fi </fileline>
            <fileline lineNumber="72">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="73">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="74">####################################################</fileline>
            <fileline lineNumber="75">}</fileline>
            <fileline lineNumber="76" />
            <fileline lineNumber="77" />
            <fileline lineNumber="78"># check if azure client is installed in environnement</fileline>
            <fileline lineNumber="79">function check_az_cli () </fileline>
            <fileline lineNumber="80">{</fileline>
            <fileline lineNumber="81">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="82">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="83">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="84">######################################################</fileline>
            <fileline lineNumber="85">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | Function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="86">    if ! command -v az &amp;&gt; /dev/null</fileline>
            <fileline lineNumber="87">        then</fileline>
            <fileline lineNumber="88">            echo "Azure CLI (az) could not be found, please install it."</fileline>
            <fileline lineNumber="89">            exit 2</fileline>
            <fileline lineNumber="90">    fi</fileline>
            <fileline lineNumber="91">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="92">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="93">####################################################</fileline>
            <fileline lineNumber="94">}</fileline>
            <fileline lineNumber="95" />
            <fileline lineNumber="96" />
            <fileline lineNumber="97"># check if az login is logged in/ logged out / error by check tenantId</fileline>
            <fileline lineNumber="98">function check_az_login () </fileline>
            <fileline lineNumber="99">{</fileline>
            <fileline lineNumber="100">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="101">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="102">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="103">######################################################</fileline>
            <fileline lineNumber="104">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | Function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="105">if [ ${check_az_cli_run} -gt 1 ]</fileline>
            <fileline lineNumber="106">   then </fileline>
            <fileline lineNumber="107">       echo "error login on azure tenant"</fileline>
            <fileline lineNumber="108">       exit 2 </fileline>
            <fileline lineNumber="109">   else </fileline>
            <fileline lineNumber="110">        local CurrentTenantId="$(az account show --query tenantId --output tsv | grep ${subscriptionId} )"</fileline>
            <fileline lineNumber="111">        if [ ${CurrentTenantId} = ${CurrentTenantId} ]</fileline>
            <fileline lineNumber="112">            then </fileline>
            <fileline lineNumber="113">                echo "currently loged on tenant   : ${subscriptionId}"</fileline>
            <fileline lineNumber="114">            else </fileline>
            <fileline lineNumber="115">                echo "you are not loged on tenant : ${subscriptionId}"</fileline>
            <fileline lineNumber="116">                check_az_cli_run=$(expr ${check_az_cli_run} + 1 )</fileline>
            <fileline lineNumber="117">                az login </fileline>
            <fileline lineNumber="118">                check_az_login</fileline>
            <fileline lineNumber="119">        fi  </fileline>
            <fileline lineNumber="120"> fi </fileline>
            <fileline lineNumber="121">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="122">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="123">####################################################</fileline>
            <fileline lineNumber="124">}</fileline>
            <fileline lineNumber="125" />
            <fileline lineNumber="126" />
            <fileline lineNumber="127"># this function init a log file, his name and his name in any folder which call thi function</fileline>
            <fileline lineNumber="128">function init_log_fileName ()</fileline>
            <fileline lineNumber="129">{</fileline>
            <fileline lineNumber="130">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="131">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="132">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="133">######################################################</fileline>
            <fileline lineNumber="134">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | Function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="135">  # generating log file name and path</fileline>
            <fileline lineNumber="136">  logfile="./log/${resourceGroup}_${current_date}_${script_name}.log"</fileline>
            <fileline lineNumber="137">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="138">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="139">####################################################</fileline>
            <fileline lineNumber="140">}</fileline>
            <fileline lineNumber="141" />
            <fileline lineNumber="142" />
            <fileline lineNumber="143"># read Description</fileline>
            <fileline lineNumber="144">function MSG_DISPLAY</fileline>
            <fileline lineNumber="145">{</fileline>
            <fileline lineNumber="146">#|# Var to set     :</fileline>
            <fileline lineNumber="147">#|# MD_Type_Msg       : Use this var to set</fileline>
            <fileline lineNumber="148">#|# MD_Level_Code     : Use this var to set</fileline>
            <fileline lineNumber="149">#|# MD_Msg_To_Display : Use this var to set</fileline>
            <fileline lineNumber="150">#|# ${1}     : Use this var to set [ MD_Type_Msg ]</fileline>
            <fileline lineNumber="151">#|# ${2}     : Use this var to set [ Level_Code ] </fileline>
            <fileline lineNumber="152">#|# ${3}     : Use this var to set [ MD_Msg_To_Display ]</fileline>
            <fileline lineNumber="153">#|#</fileline>
            <fileline lineNumber="154">#|# Base usage  : MSG_DISPLAY "MD_Type_Msg" "Level_Code" "MD_Msg_To_Display" </fileline>
            <fileline lineNumber="155">#|#</fileline>
            <fileline lineNumber="156">#|# Description : This function is used for every messaging and error service</fileline>
            <fileline lineNumber="157">#|#</fileline>
            <fileline lineNumber="158">#|# Send Back   : Message or exit level</fileline>
            <fileline lineNumber="159">###############################################################################</fileline>
            <fileline lineNumber="160">local MD_Type_Msg="${1}"</fileline>
            <fileline lineNumber="161">local MD_Level_Code="${2}"</fileline>
            <fileline lineNumber="162">local MD_Msg_To_Display="${3}"</fileline>
            <fileline lineNumber="163">Set_terminal_properties</fileline>
            <fileline lineNumber="164">Set_Message_Type_Display</fileline>
            <fileline lineNumber="165" />
            <fileline lineNumber="166">case ${MD_Type_Msg} in</fileline>
            <fileline lineNumber="167">     check) printf "${GLB_PRINTCOL_2_NE}" "${MD_Msg_To_Display}"   "--&gt;"</fileline>
            <fileline lineNumber="168">     ;;</fileline>
            <fileline lineNumber="169">     EdSMessage) FONT_set_Ok_Font</fileline>
            <fileline lineNumber="170">              if [ "${MD_Msg_To_Display}" == "" ]</fileline>
            <fileline lineNumber="171">                 then </fileline>
            <fileline lineNumber="172">                   printf "[ SUCCESS ] " </fileline>
            <fileline lineNumber="173">                 else </fileline>
            <fileline lineNumber="174">                   printf "[ ${MD_Msg_To_Display} ] " </fileline>
            <fileline lineNumber="175">              fi </fileline>
            <fileline lineNumber="176">              FONT_set_Basic_Font</fileline>
            <fileline lineNumber="177">              printf " \n" </fileline>
            <fileline lineNumber="178">     ;; </fileline>
            <fileline lineNumber="179">     EdWMessage) FONT_set_Warn_Font</fileline>
            <fileline lineNumber="180">               if [ "${MD_Msg_To_Display}" == "" ]</fileline>
            <fileline lineNumber="181">                 then </fileline>
            <fileline lineNumber="182">                   printf  "[ WARNING ] " </fileline>
            <fileline lineNumber="183">                 else </fileline>
            <fileline lineNumber="184">                   printf "[ ${MD_Msg_To_Display} ] " </fileline>
            <fileline lineNumber="185">              fi </fileline>
            <fileline lineNumber="186">              FONT_set_Basic_Font</fileline>
            <fileline lineNumber="187">              printf " \n" </fileline>
            <fileline lineNumber="188">     ;;</fileline>
            <fileline lineNumber="189">     EdEMessage) FONT_set_Error_Font</fileline>
            <fileline lineNumber="190">               if [ "${MD_Msg_To_Display}" = "" ]</fileline>
            <fileline lineNumber="191">                 then </fileline>
            <fileline lineNumber="192">                   printf  "[ FAILLED ]" </fileline>
            <fileline lineNumber="193">                 else </fileline>
            <fileline lineNumber="194">                   printf  "[ ${MD_Msg_To_Display} ]" </fileline>
            <fileline lineNumber="195">              fi </fileline>
            <fileline lineNumber="196">              FONT_set_Basic_Font</fileline>
            <fileline lineNumber="197">              printf " \n" </fileline>
            <fileline lineNumber="198">              if [ ! ${MD_Level_Code} = 0 ]</fileline>
            <fileline lineNumber="199">                 then </fileline>
            <fileline lineNumber="200">                     exit ${MD_Level_Code}</fileline>
            <fileline lineNumber="201">              fi</fileline>
            <fileline lineNumber="202">     ;;</fileline>
            <fileline lineNumber="203">     info) FONT_set_Basic_Font</fileline>
            <fileline lineNumber="204">           printf  "${MD_Msg_To_Display} \n "</fileline>
            <fileline lineNumber="205">     ;;</fileline>
            <fileline lineNumber="206">     debug) if [[ ${DEBUG_STATE} = "1"  ]]</fileline>
            <fileline lineNumber="207">               then </fileline>
            <fileline lineNumber="208">                  printf  "${MD_Msg_To_Display}  \n"</fileline>
            <fileline lineNumber="209">            fi</fileline>
            <fileline lineNumber="210">     ;;</fileline>
            <fileline lineNumber="211">     *) FONT_set_Error_Font</fileline>
            <fileline lineNumber="212">       printf  " FATAL ERROR ON MGS FUNCTION USE         \n"</fileline>
            <fileline lineNumber="213">       printf  " FUNCTION     = [ ${Function_PATH} ]     \n"</fileline>
            <fileline lineNumber="214">       printf  " SUB FUNCTION = [ ${SUB_Function_Name} ] \n"</fileline>
            <fileline lineNumber="215">       printf  " Debug type   = [ ${MD_Type_Msg}  ]      \n"</fileline>
            <fileline lineNumber="216">       printf  " have a nice day .... :-p                \n"</fileline>
            <fileline lineNumber="217">     FONT_set_Basic_Font</fileline>
            <fileline lineNumber="218">     eval printf "\\\033\\[K"</fileline>
            <fileline lineNumber="219">     exit 2</fileline>
            <fileline lineNumber="220">     ;;</fileline>
            <fileline lineNumber="221">esac</fileline>
            <fileline lineNumber="222" />
            <fileline lineNumber="223" />
            <fileline lineNumber="224">FONT_set_Basic_Font</fileline>
            <fileline lineNumber="225">echo -n ""</fileline>
            <fileline lineNumber="226">}</fileline>
            <fileline lineNumber="227" />
            <fileline lineNumber="228" />
            <fileline lineNumber="229"># better count on Bot to make CSS than you ;)</fileline>
            <fileline lineNumber="230">function Set_terminal_properties () </fileline>
            <fileline lineNumber="231">{</fileline>
            <fileline lineNumber="232"># Get the width of the terminal</fileline>
            <fileline lineNumber="233">terminal_width=$(tput cols)</fileline>
            <fileline lineNumber="234" />
            <fileline lineNumber="235"># Calculate column widths based on the terminal width</fileline>
            <fileline lineNumber="236"># Adjust these percentages to suit your needs</fileline>
            <fileline lineNumber="237">col1_width=$(($terminal_width - 30 ))</fileline>
            <fileline lineNumber="238">col2_width=4</fileline>
            <fileline lineNumber="239">col3_width=26</fileline>
            <fileline lineNumber="240">col4_width=$(($terminal_width * 2 / 100))</fileline>
            <fileline lineNumber="241" />
            <fileline lineNumber="242">col1_ne_width=$(($terminal_width - 30 ))</fileline>
            <fileline lineNumber="243">col2_ne_width=15</fileline>
            <fileline lineNumber="244" />
            <fileline lineNumber="245">col1_1_ne_width=$(($terminal_width - 10 ))</fileline>
            <fileline lineNumber="246">col2_1_ne_width=10</fileline>
            <fileline lineNumber="247" />
            <fileline lineNumber="248"># Set the format strings</fileline>
            <fileline lineNumber="249">GLB_PRINTCOL_4="%-${col1_width}s %-${col2_width}s %-${col3_width}s %-${col4_width}s\n"</fileline>
            <fileline lineNumber="250">GLB_PRINTCOL_2_NE="%-${col1_ne_width}s %-${col2_ne_width}s"</fileline>
            <fileline lineNumber="251">GLB_PRINTCOL_1_NE="%-${col1_1_ne_width}s %-${col2_1_ne_width}s\n"</fileline>
            <fileline lineNumber="252" />
            <fileline lineNumber="253"># Example usage with printf</fileline>
            <fileline lineNumber="254">#printf "$GLB_PRINTCOL_4" "Column1" "Column2" "Column3" "Column4"</fileline>
            <fileline lineNumber="255">#printf "$GLB_PRINTCOL_2_NE" "Column1_NE" "Column2_NE"</fileline>
            <fileline lineNumber="256">#printf "$GLB_PRINTCOL_1_NE" "Column1_1_NE" "Column2_1_NE"</fileline>
            <fileline lineNumber="257">}</fileline>
            <fileline lineNumber="258" />
            <fileline lineNumber="259" />
            <fileline lineNumber="260"># "which CSS" ask the chatMaid-chan bot</fileline>
            <fileline lineNumber="261">function Set_Message_Type_Display</fileline>
            <fileline lineNumber="262">{</fileline>
            <fileline lineNumber="263">#|# Var to set     :</fileline>
            <fileline lineNumber="264">#|# MD_Type_Msg       : Use this var to set</fileline>
            <fileline lineNumber="265">#|# MD_Msg_To_Display : Use this var to set</fileline>
            <fileline lineNumber="266">#|# MD_Level_Code     : Use this var to set</fileline>
            <fileline lineNumber="267">#|# ${1}     : Use this var to set" "_Message_Type ]</fileline>
            <fileline lineNumber="268">#|#</fileline>
            <fileline lineNumber="269">#|# Base usage  : Set_Message_Type_Display "Message type"  </fileline>
            <fileline lineNumber="270">#|#</fileline>
            <fileline lineNumber="271">#|# Description : This function is used set display color for using type of message</fileline>
            <fileline lineNumber="272">#|#</fileline>
            <fileline lineNumber="273">#|# Send Back   : Console Colour  </fileline>
            <fileline lineNumber="274">###############################################################################</fileline>
            <fileline lineNumber="275">_Message_Type="${1}"</fileline>
            <fileline lineNumber="276">case ${_Message_Type} in </fileline>
            <fileline lineNumber="277">       "info") FONT_set_info_Font</fileline>
            <fileline lineNumber="278">         ;;</fileline>
            <fileline lineNumber="279">      "debug") if [[ ${DEBUG_STATE} = "1"  ]]</fileline>
            <fileline lineNumber="280">                then</fileline>
            <fileline lineNumber="281">                  eval printf "\\\033\\[K"</fileline>
            <fileline lineNumber="282">              fi</fileline>
            <fileline lineNumber="283">         ;;</fileline>
            <fileline lineNumber="284">    "message") FONT_set_message_Font</fileline>
            <fileline lineNumber="285">         ;;</fileline>
            <fileline lineNumber="286">      "check") FONT_set_check_Font</fileline>
            <fileline lineNumber="287">         ;;</fileline>
            <fileline lineNumber="288">    "warning") FONT_set_warning_Font</fileline>
            <fileline lineNumber="289">         ;;</fileline>
            <fileline lineNumber="290">      "error") FONT_set_error_Font</fileline>
            <fileline lineNumber="291">         ;;</fileline>
            <fileline lineNumber="292"> "EdSMessage") FONT_set_Ok_Font</fileline>
            <fileline lineNumber="293">         ;; </fileline>
            <fileline lineNumber="294"> "EdEMessage") FONT_set_error_Font</fileline>
            <fileline lineNumber="295">         ;;</fileline>
            <fileline lineNumber="296">         *) FONT_set_Message_Font</fileline>
            <fileline lineNumber="297">          ;;</fileline>
            <fileline lineNumber="298">esac</fileline>
            <fileline lineNumber="299">}</fileline>
            <fileline lineNumber="300" />
            <fileline lineNumber="301" />
            <fileline lineNumber="302"># part of css function, here font color</fileline>
            <fileline lineNumber="303">function FONT_get_Color</fileline>
            <fileline lineNumber="304">{</fileline>
            <fileline lineNumber="305">#|# Echoes the basic color attribute number given by color name</fileline>
            <fileline lineNumber="306">#|# $1 is the color name</fileline>
            <fileline lineNumber="307">#|#    it can be one of (black, red, green, yellow, blue, magenta, cyan, white)</fileline>
            <fileline lineNumber="308">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="309">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="310">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="311">######################################################</fileline>
            <fileline lineNumber="312" />
            <fileline lineNumber="313">COLOR_ATTR=""</fileline>
            <fileline lineNumber="314">case $1 in</fileline>
            <fileline lineNumber="315">    [Bb]lack) COLOR_ATTR=0 ;;</fileline>
            <fileline lineNumber="316">    [Rr]ed) COLOR_ATTR=1 ;;</fileline>
            <fileline lineNumber="317">    [Gg]reen) COLOR_ATTR=2 ;;</fileline>
            <fileline lineNumber="318">    [Yy]ellow) COLOR_ATTR=3 ;;</fileline>
            <fileline lineNumber="319">    [Bb]lue) COLOR_ATTR=4 ;;</fileline>
            <fileline lineNumber="320">    [Mm]agenta) COLOR_ATTR=5 ;;</fileline>
            <fileline lineNumber="321">    [Cc]yan) COLOR_ATTR=6 ;;</fileline>
            <fileline lineNumber="322">    [Ww]hite) COLOR_ATTR=7 ;;</fileline>
            <fileline lineNumber="323">    *) ;;</fileline>
            <fileline lineNumber="324">esac</fileline>
            <fileline lineNumber="325" />
            <fileline lineNumber="326">echo "${COLOR_ATTR}"</fileline>
            <fileline lineNumber="327">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="328">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="329">####################################################</fileline>
            <fileline lineNumber="330">}</fileline>
            <fileline lineNumber="331" />
            <fileline lineNumber="332" />
            <fileline lineNumber="333"># part of css function, here font attribute</fileline>
            <fileline lineNumber="334">function FONT_set_Font</fileline>
            <fileline lineNumber="335">{</fileline>
            <fileline lineNumber="336">#|# Changes the font properties by attributes given</fileline>
            <fileline lineNumber="337">#|# $1 is the attribute to set to the font</fileline>
            <fileline lineNumber="338">#|#    it can be one of (default, bright, dim, underscore, blink, reverse, hidden, foreground, background)</fileline>
            <fileline lineNumber="339">#|#       default : to reset all font attributes to default values</fileline>
            <fileline lineNumber="340">#|#       bright : to enlight font</fileline>
            <fileline lineNumber="341">#|#       dim : to darken font</fileline>
            <fileline lineNumber="342">#|#       underscore : no comment</fileline>
            <fileline lineNumber="343">#|#       blink : depends on terminal</fileline>
            <fileline lineNumber="344">#|#       reverse : no comment</fileline>
            <fileline lineNumber="345">#|#       hidden : depends on terminal</fileline>
            <fileline lineNumber="346">#|#       foreground : to change foreground color</fileline>
            <fileline lineNumber="347">#|#              needs the second argument</fileline>
            <fileline lineNumber="348">#|#       background : to change background color</fileline>
            <fileline lineNumber="349">#|#              needs the second argument</fileline>
            <fileline lineNumber="350">#|# $2 is the attribute name for color setting</fileline>
            <fileline lineNumber="351">#|#    it is mandatory and used only if foreground or background is chosen in first argument</fileline>
            <fileline lineNumber="352">#|#    see function FONT_get_Color for details</fileline>
            <fileline lineNumber="353">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="354">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="355">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="356">######################################################</fileline>
            <fileline lineNumber="357" />
            <fileline lineNumber="358">FONT_ATTR=""</fileline>
            <fileline lineNumber="359">Type_Font_Def="${1}"</fileline>
            <fileline lineNumber="360">case ${Type_Font_Def} in</fileline>
            <fileline lineNumber="361">        default) FONT_ATTR="0"</fileline>
            <fileline lineNumber="362">              ;;</fileline>
            <fileline lineNumber="363">         bright) FONT_ATTR="1" </fileline>
            <fileline lineNumber="364">              ;;</fileline>
            <fileline lineNumber="365">            dim) FONT_ATTR="2" </fileline>
            <fileline lineNumber="366">              ;;</fileline>
            <fileline lineNumber="367">     underscore) FONT_ATTR="4" </fileline>
            <fileline lineNumber="368">              ;;</fileline>
            <fileline lineNumber="369">          blink) FONT_ATTR="5" </fileline>
            <fileline lineNumber="370">              ;;</fileline>
            <fileline lineNumber="371">        reverse) FONT_ATTR="7" </fileline>
            <fileline lineNumber="372">              ;;</fileline>
            <fileline lineNumber="373">         hidden) FONT_ATTR="8" </fileline>
            <fileline lineNumber="374">              ;;</fileline>
            <fileline lineNumber="375">     foreground) FONT_ATTR=$(( $( FONT_get_Color ${2} ) +30 ))</fileline>
            <fileline lineNumber="376">             ;;</fileline>
            <fileline lineNumber="377">     background) FONT_ATTR=$(( $( FONT_get_Color ${2} ) +40 )) </fileline>
            <fileline lineNumber="378">              ;;</fileline>
            <fileline lineNumber="379">           *) </fileline>
            <fileline lineNumber="380">              ;;</fileline>
            <fileline lineNumber="381">esac</fileline>
            <fileline lineNumber="382" />
            <fileline lineNumber="383">printf "\033[%sm" "${FONT_ATTR}"</fileline>
            <fileline lineNumber="384">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="385">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="386">####################################################</fileline>
            <fileline lineNumber="387">}</fileline>
            <fileline lineNumber="388" />
            <fileline lineNumber="389" />
            <fileline lineNumber="390"># part of css function, here set properties</fileline>
            <fileline lineNumber="391">function FONT_display_Basic_Colors</fileline>
            <fileline lineNumber="392">{</fileline>
            <fileline lineNumber="393">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="394">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="395">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="396">######################################################</fileline>
            <fileline lineNumber="397" />
            <fileline lineNumber="398">for BGC in black red green yellow blue magenta cyan white</fileline>
            <fileline lineNumber="399">do</fileline>
            <fileline lineNumber="400">    FONT_set_Font background ${BGC}</fileline>
            <fileline lineNumber="401">    for FGC in black red green yellow blue magenta cyan white</fileline>
            <fileline lineNumber="402">    do</fileline>
            <fileline lineNumber="403">     FONT_set_Font foreground ${FGC}</fileline>
            <fileline lineNumber="404">     printf " %s " ${FGC}</fileline>
            <fileline lineNumber="405">    done</fileline>
            <fileline lineNumber="406">    printf "\n"</fileline>
            <fileline lineNumber="407">done</fileline>
            <fileline lineNumber="408">FONT_set_Font default</fileline>
            <fileline lineNumber="409">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="410">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="411">####################################################</fileline>
            <fileline lineNumber="412">}</fileline>
            <fileline lineNumber="413" />
            <fileline lineNumber="414" />
            <fileline lineNumber="415"># part of css function, here set Basic Font properties </fileline>
            <fileline lineNumber="416">function FONT_set_Basic_Font</fileline>
            <fileline lineNumber="417">{</fileline>
            <fileline lineNumber="418">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="419">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="420">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="421">######################################################</fileline>
            <fileline lineNumber="422" />
            <fileline lineNumber="423">FONT_set_Font default</fileline>
            <fileline lineNumber="424">FONT_set_Font foreground White</fileline>
            <fileline lineNumber="425">FONT_set_Font background Black</fileline>
            <fileline lineNumber="426">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="427">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="428">####################################################</fileline>
            <fileline lineNumber="429">}</fileline>
            <fileline lineNumber="430" />
            <fileline lineNumber="431" />
            <fileline lineNumber="432"># part of css function, here set Error Font properties </fileline>
            <fileline lineNumber="433">function FONT_set_Error_Font</fileline>
            <fileline lineNumber="434">{</fileline>
            <fileline lineNumber="435">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="436">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="437">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="438">######################################################</fileline>
            <fileline lineNumber="439" />
            <fileline lineNumber="440">FONT_set_Font default</fileline>
            <fileline lineNumber="441">FONT_set_Font bright</fileline>
            <fileline lineNumber="442">FONT_set_Font foreground White</fileline>
            <fileline lineNumber="443">FONT_set_Font background Red</fileline>
            <fileline lineNumber="444">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="445">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="446">####################################################</fileline>
            <fileline lineNumber="447">}</fileline>
            <fileline lineNumber="448" />
            <fileline lineNumber="449" />
            <fileline lineNumber="450"># part of css function, here set Warm Font properties </fileline>
            <fileline lineNumber="451">function FONT_set_Warn_Font</fileline>
            <fileline lineNumber="452">{</fileline>
            <fileline lineNumber="453">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="454">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="455">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="456">######################################################</fileline>
            <fileline lineNumber="457" />
            <fileline lineNumber="458">FONT_set_Font default</fileline>
            <fileline lineNumber="459">FONT_set_Font foreground Black</fileline>
            <fileline lineNumber="460">FONT_set_Font background Yellow</fileline>
            <fileline lineNumber="461">FONT_set_Font blink</fileline>
            <fileline lineNumber="462">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="463">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="464">####################################################</fileline>
            <fileline lineNumber="465">}</fileline>
            <fileline lineNumber="466" />
            <fileline lineNumber="467">function FONT_set_Message_Font</fileline>
            <fileline lineNumber="468">{</fileline>
            <fileline lineNumber="469">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="470">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="471">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="472">######################################################</fileline>
            <fileline lineNumber="473" />
            <fileline lineNumber="474">FONT_set_Font default</fileline>
            <fileline lineNumber="475">FONT_set_Font foreground Green</fileline>
            <fileline lineNumber="476">FONT_set_Font background Black</fileline>
            <fileline lineNumber="477">FONT_set_Font blink</fileline>
            <fileline lineNumber="478">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="479">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="480">####################################################</fileline>
            <fileline lineNumber="481">}</fileline>
            <fileline lineNumber="482" />
            <fileline lineNumber="483" />
            <fileline lineNumber="484"># part of css function, here set Ok Font properties </fileline>
            <fileline lineNumber="485">function FONT_set_Ok_Font</fileline>
            <fileline lineNumber="486">{</fileline>
            <fileline lineNumber="487">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="488">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="489">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="490">######################################################</fileline>
            <fileline lineNumber="491" />
            <fileline lineNumber="492">FONT_set_Font default</fileline>
            <fileline lineNumber="493">FONT_set_Font bright</fileline>
            <fileline lineNumber="494">FONT_set_Font foreground White</fileline>
            <fileline lineNumber="495">FONT_set_Font background Green</fileline>
            <fileline lineNumber="496">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="497">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="498">####################################################</fileline>
            <fileline lineNumber="499">}</fileline>
            <fileline lineNumber="500" />
            <fileline lineNumber="501" />
            <fileline lineNumber="502"># part of css function, here set Info Font properties </fileline>
            <fileline lineNumber="503">function FONT_set_Info_Font</fileline>
            <fileline lineNumber="504">{</fileline>
            <fileline lineNumber="505">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="506">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="507">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="508">######################################################</fileline>
            <fileline lineNumber="509" />
            <fileline lineNumber="510">FONT_set_Font default</fileline>
            <fileline lineNumber="511">FONT_set_Font bright</fileline>
            <fileline lineNumber="512">FONT_set_Font foreground Green</fileline>
            <fileline lineNumber="513">FONT_set_Font background Black</fileline>
            <fileline lineNumber="514">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="515">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="516">####################################################</fileline>
            <fileline lineNumber="517">}</fileline>
            <fileline lineNumber="518" />
            <fileline lineNumber="519" />
            <fileline lineNumber="520"># get "tag" of repertories in ../conf/conf.cnf and sort</fileline>
            <fileline lineNumber="521">function init_directory ()</fileline>
            <fileline lineNumber="522">{</fileline>
            <fileline lineNumber="523">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="524">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="525">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="526">######################################################</fileline>
            <fileline lineNumber="527">for directories in $(cat ../conf/config.cnf | grep "###_ " | awk -F\= '{ print "${" $1 "}"  }' | sed -e 's/\ //g' | sort)   </fileline>
            <fileline lineNumber="528">  do </fileline>
            <fileline lineNumber="529">    eval Create_Directory=${directories}</fileline>
            <fileline lineNumber="530">    Set_new_directory "${Create_Directory}" </fileline>
            <fileline lineNumber="531">done </fileline>
            <fileline lineNumber="532">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="533">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="534">####################################################</fileline>
            <fileline lineNumber="535">}</fileline>
            <fileline lineNumber="536" />
            <fileline lineNumber="537" />
            <fileline lineNumber="538"># launch functions to set progression states of repertories and files installation with az and git</fileline>
            <fileline lineNumber="539"># call in set_paths in ../config/config.cnf </fileline>
            <fileline lineNumber="540">function init_all () </fileline>
            <fileline lineNumber="541">{</fileline>
            <fileline lineNumber="542">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="543">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="544">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="545">######################################################</fileline>
            <fileline lineNumber="546">    Set_terminal_properties</fileline>
            <fileline lineNumber="547">    #init_directory</fileline>
            <fileline lineNumber="548">    Get_system_tunning</fileline>
            <fileline lineNumber="549">    SANITY_CHECK_Base_env_directory_check</fileline>
            <fileline lineNumber="550">    SANITY_CHECK_tools</fileline>
            <fileline lineNumber="551">    SANITY_CHECK_Check_Language</fileline>
            <fileline lineNumber="552">    check_az_cli</fileline>
            <fileline lineNumber="553">    check_az_login</fileline>
            <fileline lineNumber="554">    show_configuration</fileline>
            <fileline lineNumber="555">    # generating log file name and path</fileline>
            <fileline lineNumber="556">    init_log_fileName</fileline>
            <fileline lineNumber="557">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="558">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="559">####################################################</fileline>
            <fileline lineNumber="560">}</fileline>
            <fileline lineNumber="561" />
            <fileline lineNumber="562" />
            <fileline lineNumber="563">function Interleave_MSG</fileline>
            <fileline lineNumber="564">{</fileline>
            <fileline lineNumber="565"> echo  ""                                                                                  </fileline>
            <fileline lineNumber="566"> echo  "###############################################################################"</fileline>
            <fileline lineNumber="567"> echo  ""                                                                               </fileline>
            <fileline lineNumber="568">}</fileline>
            <fileline lineNumber="569" />
            <fileline lineNumber="570">function Spacer_MSG</fileline>
            <fileline lineNumber="571">{</fileline>
            <fileline lineNumber="572"> echo  ""       </fileline>
            <fileline lineNumber="573"> echo  ""       </fileline>
            <fileline lineNumber="574">}</fileline>
            <fileline lineNumber="575" />
            <fileline lineNumber="576" />
            <fileline lineNumber="577" />
            <fileline lineNumber="578"># Sourcing control variable </fileline>
            <fileline lineNumber="579">CoreState="OK"</fileline>
        </content>
    </file>
    <file>
        <filename>./lib/sgbd/sub/sql_sub_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 28/06/2024</fileline>
            <fileline lineNumber="4"># generic auto documentation from CAST </fileline>
            <fileline lineNumber="5"># Subject : This library provide sub sql sub function to manage sql connexion #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO</fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11">function Do_SQL_Sub_connect_Server</fileline>
            <fileline lineNumber="12">{</fileline>
            <fileline lineNumber="13">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="14">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="15">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="16">######################################################</fileline>
            <fileline lineNumber="17" />
            <fileline lineNumber="18">Test_file_presence  "${EXTERNAL_SQL_current_FIFO_file}" "Dont_Create_File" "0"  ""  "return 1"</fileline>
            <fileline lineNumber="19">  External_Sql_Connection_Result="${?}"</fileline>
            <fileline lineNumber="20">           if [ " ${INTERNAM_ITERAT_SQL_CONNECT}"  = "3"  ]</fileline>
            <fileline lineNumber="21">                then</fileline>
            <fileline lineNumber="22">                     MSG_DISPLAY "ErrorN" "1" "Connection retry number ${INTERNAM_ITERAT_SQL_CONNECT} : [ FATAL ERROR too much retry ]"</fileline>
            <fileline lineNumber="23">                else</fileline>
            <fileline lineNumber="24">                       if  [ "${External_Sql_Connection_Result}" = "1" ]</fileline>
            <fileline lineNumber="25">                            then</fileline>
            <fileline lineNumber="26">                                   echo  "2"</fileline>
            <fileline lineNumber="27">                                    MSG_DISPLAY "Debug" "6" "Current SQL FIFO file : [ Allreay Used Changing Session ID  ] "</fileline>
            <fileline lineNumber="28">                                    Get_system_random_,number</fileline>
            <fileline lineNumber="29">                                    EXTERNAL_SQL_current_FIFO_file="${Base_SQL_Fifo_FileName}_${EXTERNAL_randomized_var}"</fileline>
            <fileline lineNumber="30">                                    EXTERNAL_SQL_current_Log_File="${Base_SQL_Log_FileName}_${EXTERNAL_randomized_var}"</fileline>
            <fileline lineNumber="31">                                    MSG_DISPLAY "Debug" "6" "Current SQL FIFO file : [ ${EXTERNAL_SQL_current_FIFO_file} ] "</fileline>
            <fileline lineNumber="32">                                    MSG_DISPLAY "Debug" "6" "Current SQL Log file : [ ${EXTERNAL_SQL_current_Log_File} ] "</fileline>
            <fileline lineNumber="33">                                    Test_file_presence "${EXTERNAL_SQL_current_FIFO_file}" "Dont_Create_File" "0"  ""  "return 1"</fileline>
            <fileline lineNumber="34">                                    External_Sql_Connection_Result=$( expr ${External_Sql_Connection_Result} + 1 )</fileline>
            <fileline lineNumber="35">                            else</fileline>
            <fileline lineNumber="36">                                   External_Sql_Connection_Result=$( expr ${External_Sql_Connection_Result} + 1 )</fileline>
            <fileline lineNumber="37">                        fi</fileline>
            <fileline lineNumber="38">              fi</fileline>
            <fileline lineNumber="39">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="40">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="41">####################################################</fileline>
            <fileline lineNumber="42">}</fileline>
            <fileline lineNumber="43" />
            <fileline lineNumber="44" />
            <fileline lineNumber="45"># Sourcing control variable </fileline>
            <fileline lineNumber="46">LibState="OK"  </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/sgbd/sql_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 28/06/2024</fileline>
            <fileline lineNumber="4"># generic auto documentation from CAST </fileline>
            <fileline lineNumber="5"># Subject : This library provide base bdd automaintenance                     #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># Info</fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11">function SQL_Server_Connect</fileline>
            <fileline lineNumber="12">{</fileline>
            <fileline lineNumber="13">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="14">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="15">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="16">######################################################</fileline>
            <fileline lineNumber="17">MSG_DISPLAY "Debug" "8" "Current Stack : [ ${Function_PATH} ] " </fileline>
            <fileline lineNumber="18" />
            <fileline lineNumber="19">INTERNAM_ITERAT_SQL_CONNECT="0"</fileline>
            <fileline lineNumber="20" />
            <fileline lineNumber="21">case ${EXTERNAL_SQL_IS_CONNECTED} in</fileline>
            <fileline lineNumber="22">            OnLine) MSG_DISPLAY "Info" "1" "SQL Session id ${EXTERNAL_SQL_session_ID} status : [ Allready connected ] "</fileline>
            <fileline lineNumber="23">                           ;;</fileline>
            <fileline lineNumber="24">            OffLine) MSG_DISPLAY "Info" "1" "SQL Session id ${EXTERNAL_SQL_session_ID} status : [ Not connected ] "</fileline>
            <fileline lineNumber="25">                     Get_system_random_,number</fileline>
            <fileline lineNumber="26">                     EXTERNAL_SQL_current_FIFO_file="${Base_SQL_Fifo_FileName}_${EXTERNAL_randomized_var}"</fileline>
            <fileline lineNumber="27">                     EXTERNAL_SQL_current_Log_File="${Base_SQL_Log_FileName}_${EXTERNAL_randomized_var}"</fileline>
            <fileline lineNumber="28">                     MSG_DISPLAY "Debug" "6" "Current SQL FIFO file : [ ${EXTERNAL_SQL_current_FIFO_file} ] "</fileline>
            <fileline lineNumber="29">                     MSG_DISPLAY "Debug" "6" "Current SQL Log file : [ ${EXTERNAL_SQL_current_Log_File} ] "</fileline>
            <fileline lineNumber="30">                     Do_SQL_Sub_connect_Server</fileline>
            <fileline lineNumber="31">                     Set_new_fifo SQL_fifo filename="${EXTERNAL_SQL_current_FIFO_file}"</fileline>
            <fileline lineNumber="32">                     ${Base_mysql_bin_proc_use} &lt; ${EXTERNAL_SQL_current_FIFO_file} &gt; ${EXTERNAL_SQL_current_Log_File} &amp;</fileline>
            <fileline lineNumber="33">                     echo $?</fileline>
            <fileline lineNumber="34">                     EXTERNAL_SQL_IS_CONNECTED="OnLine"</fileline>
            <fileline lineNumber="35">                     EXTERNAL_SQL_session_ID="${EXTERNAL_randomized_var}"</fileline>
            <fileline lineNumber="36">                     MSG_DISPLAY "Info" "1" "SQL Session id ${EXTERNAL_SQL_session_ID} status : [ connected ] "</fileline>
            <fileline lineNumber="37">                     ;;</fileline>
            <fileline lineNumber="38">                  *) MSG_DISPLAY "ErrorN" "1" "Internal Error in function var  : [ EXTERNAL_SQL_IS_CONNECTED ]"</fileline>
            <fileline lineNumber="39">                     ;;</fileline>
            <fileline lineNumber="40">esac</fileline>
            <fileline lineNumber="41">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="42">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="43">####################################################</fileline>
            <fileline lineNumber="44">}</fileline>
            <fileline lineNumber="45" />
            <fileline lineNumber="46" />
            <fileline lineNumber="47">function SQL_Server_Disconnect</fileline>
            <fileline lineNumber="48">{</fileline>
            <fileline lineNumber="49">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="50">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="51">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="52">######################################################</fileline>
            <fileline lineNumber="53">MSG_DISPLAY "Debug" "8" "Current Stack : [ ${Function_PATH} ] " </fileline>
            <fileline lineNumber="54">case ${EXTERNAL_SQL_IS_CONNECTED} in</fileline>
            <fileline lineNumber="55">     OnLine) MSG_DISPLAY "Debug" "6" "SQL Session id ${EXTERNAL_SQL_session_ID} status : [ Connected ] "</fileline>
            <fileline lineNumber="56">             MSG_DISPLAY "Debug" "6" "Current SQL FIFO file : [ ${EXTERNAL_SQL_current_FIFO_file} ] "</fileline>
            <fileline lineNumber="57">             MSG_DISPLAY "Debug" "6" "Current SQL Log file : [ ${EXTERNAL_SQL_current_Log_File} ] "</fileline>
            <fileline lineNumber="58">             echo  " exit " &gt; ${EXTERNAL_SQL_current_FIFO_file}</fileline>
            <fileline lineNumber="59">             sleep 2</fileline>
            <fileline lineNumber="60">             UnSet_fifo SQL_fifo</fileline>
            <fileline lineNumber="61">             MSG_DISPLAY "Debug" "6" "SQL Session id ${EXTERNAL_SQL_session_ID} status : [ Disconnected ] "</fileline>
            <fileline lineNumber="62">             EXTERNAL_SQL_IS_CONNECTED="OffLine"</fileline>
            <fileline lineNumber="63">             ;;</fileline>
            <fileline lineNumber="64">    OffLine) MSG_DISPLAY "Info" "1" "SQL Session id ${EXTERNAL_SQL_session_ID} status : [ Not connected ] "</fileline>
            <fileline lineNumber="65">             MSG_DISPLAY "Info" "1" "you con't disconnect an not connected session "</fileline>
            <fileline lineNumber="66">             ;;</fileline>
            <fileline lineNumber="67">esac</fileline>
            <fileline lineNumber="68">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="69">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="70">####################################################</fileline>
            <fileline lineNumber="71">}</fileline>
            <fileline lineNumber="72" />
            <fileline lineNumber="73">function SQL_DATABASE_connect</fileline>
            <fileline lineNumber="74">{</fileline>
            <fileline lineNumber="75">#|# DATABASE_To_connect     : Use this var to set on witch database yuou want to connect</fileline>
            <fileline lineNumber="76">#|# ${1}                    :  use this var to set DATABASE_To_connect</fileline>
            <fileline lineNumber="77">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="78">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="79">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="80">######################################################</fileline>
            <fileline lineNumber="81">MSG_DISPLAY "Debug" "8" "Current Stack : [ ${Function_PATH} ] " </fileline>
            <fileline lineNumber="82">DATABASE_To_connect="${1}"</fileline>
            <fileline lineNumber="83" />
            <fileline lineNumber="84">echo  " CONNECT ${DATABASE_To_connect}; " &gt;&gt; ${EXTERNAL_SQL_current_FIFO_file}</fileline>
            <fileline lineNumber="85">echo  " show tables ; " &gt;&gt; ${EXTERNAL_SQL_current_FIFO_file}</fileline>
            <fileline lineNumber="86">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="87">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="88">####################################################</fileline>
            <fileline lineNumber="89">}</fileline>
            <fileline lineNumber="90" />
            <fileline lineNumber="91">function SQL_CONNECT_CHECK</fileline>
            <fileline lineNumber="92">{</fileline>
            <fileline lineNumber="93">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="94">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="95">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="96">######################################################</fileline>
            <fileline lineNumber="97">MSG_DISPLAY "Debug" "8" "Current Stack : [ ${Function_PATH} ] " </fileline>
            <fileline lineNumber="98" />
            <fileline lineNumber="99">if [ ${EXTERNAL_SQL_IS_CONNECTED} = "OnLine" ]</fileline>
            <fileline lineNumber="100">   then</fileline>
            <fileline lineNumber="101">          MSG_DISPLAY "Debug" "6" "Connection to DATABASE server : [ OK ] "</fileline>
            <fileline lineNumber="102">   else</fileline>
            <fileline lineNumber="103">          MSG_DISPLAY "ErrorN" "1" "Connection to DATABASE server : [ not Connected] "</fileline>
            <fileline lineNumber="104">          MSG_DISPLAY "ErrorN" "1" "Please ensure you have called  function  [ SQL_Server_Connect  ]  "</fileline>
            <fileline lineNumber="105">fi</fileline>
            <fileline lineNumber="106">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="107">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="108">####################################################</fileline>
            <fileline lineNumber="109">}</fileline>
            <fileline lineNumber="110" />
            <fileline lineNumber="111">function SQL_GET_PKG_liste</fileline>
            <fileline lineNumber="112">{</fileline>
            <fileline lineNumber="113">#|# Base_Database_Type</fileline>
            <fileline lineNumber="114">#|# Base_Database_Host</fileline>
            <fileline lineNumber="115">#|# Base_Database_Port</fileline>
            <fileline lineNumber="116">#|# Base_Database_proc_Username</fileline>
            <fileline lineNumber="117">#|# Base_Database_TempDir</fileline>
            <fileline lineNumber="118">#|# Base_Database_Default</fileline>
            <fileline lineNumber="119">#|# packageTable="ARPCOM_PKG_CAT"</fileline>
            <fileline lineNumber="120">#|# typePackageTable="ARPCOM_PKG_TYPE_CAT"</fileline>
            <fileline lineNumber="121">#|# omImportTable="ARPCOM_OM_IMPORT"</fileline>
            <fileline lineNumber="122">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="123">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="124">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="125">######################################################</fileline>
            <fileline lineNumber="126">MSG_DISPLAY "Debug" "8" "Current Stack : [ ${Function_PATH} ] " </fileline>
            <fileline lineNumber="127">Get_system_random_,number</fileline>
            <fileline lineNumber="128">INTERNAL_ID_READ_ITEM="#-#-${EXTERNAL_randomized_var}"</fileline>
            <fileline lineNumber="129" />
            <fileline lineNumber="130">SQL_CMD="select DISTINCT '${INTERNAL_ID_READ_ITEM}' as 'BACKTRACE', \`PKG_NAME\`,\`ID_PKG\`  FROM  \`${Base_Database_Default}\`.\`${packageTable}\` ; "</fileline>
            <fileline lineNumber="131" />
            <fileline lineNumber="132" />
            <fileline lineNumber="133">echo  "select '${INTERNAL_ID_READ_ITEM}' as 'BACKTRACE', 'Debut' as 'status' ; " &gt;&gt; ${EXTERNAL_SQL_current_FIFO_file}</fileline>
            <fileline lineNumber="134">echo  "${SQL_CMD}" &gt;&gt; ${EXTERNAL_SQL_current_FIFO_file}</fileline>
            <fileline lineNumber="135">echo  "select '${INTERNAL_ID_READ_ITEM}' as 'BACKTRACE', 'fin' as 'status' ; " &gt;&gt; ${EXTERNAL_SQL_current_FIFO_file}</fileline>
            <fileline lineNumber="136">SQL_Server_Disconnect</fileline>
            <fileline lineNumber="137" />
            <fileline lineNumber="138">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="139">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="140">####################################################</fileline>
            <fileline lineNumber="141">}</fileline>
            <fileline lineNumber="142" />
            <fileline lineNumber="143">function SQL_USE_PKG_liste</fileline>
            <fileline lineNumber="144">{</fileline>
            <fileline lineNumber="145">for PKGS in $( cat ${EXTERNAL_SQL_current_Log_File} | grep ${INTERNAL_ID_READ_ITEM} | awk  '{print  $2 "|" $3 }' ) </fileline>
            <fileline lineNumber="146">   do </fileline>
            <fileline lineNumber="147">   	 INTERNAL_VALUS_STATUS="$(print  "${PKGS} " | awk -F\| '{print $1}')"</fileline>
            <fileline lineNumber="148">   	 case ${INTERNAL_VALUS_STATUS} in </fileline>
            <fileline lineNumber="149">   	                  debut) MSG_DISPLAY "Debug" "4" "Internal ddb proc generator  : [ Start ] " </fileline>
            <fileline lineNumber="150">   	                         ;;</fileline>
            <fileline lineNumber="151">                        fin) MSG_DISPLAY "Debug" "4" "Internal ddb proc generator  : [ done ] " </fileline>
            <fileline lineNumber="152">                             ;;</fileline>
            <fileline lineNumber="153">                          *) SQL_Server_Connect</fileline>
            <fileline lineNumber="154">                             SQL_DATABASE_connect "ARPCOM"</fileline>
            <fileline lineNumber="155">                             echo  "${PKGS} " | awk -F\| '{print $1 " " $2 }'</fileline>
            <fileline lineNumber="156">                             INTERNAL_PKG_NAME="$(print  "${PKGS} " | awk -F\| '{ print $1 }')"</fileline>
            <fileline lineNumber="157">                             INTERNAL_LAST_do_action="${INTERNAL_LAST_do_action}"</fileline>
            <fileline lineNumber="158">                             PROC_NAME="${Base_PROC_Name}_${INTERNAL_PKG_NAME}"</fileline>
            <fileline lineNumber="159">                             TABLE_NAME="${Base_TABLE_Name}_${INTERNAL_PKG_NAME}"</fileline>
            <fileline lineNumber="160">                             MSG_DISPLAY "Debug" "5" "Table Name : [ ${TABLE_NAME} ] "</fileline>
            <fileline lineNumber="161">                             MSG_DISPLAY "Debug" "5" "Procedure Name : [ ${PROC_NAME} ] "</fileline>
            <fileline lineNumber="162">                             SQL_GENERATE_PROCS_OM_PKG_KEY_CATALOGUE &gt;&gt; ${EXTERNAL_SQL_current_FIFO_file} &amp;</fileline>
            <fileline lineNumber="163">                             SQL_Server_Disconnect</fileline>
            <fileline lineNumber="164">                             ;;</fileline>
            <fileline lineNumber="165">  ${INTERNAL_LAST_do_action}) MSG_DISPLAY "Debug" "4" "Package ${INTERNAL_LAST_do_action} : [ Allready done ] "</fileline>
            <fileline lineNumber="166">                             ;;</fileline>
            <fileline lineNumber="167">       esac</fileline>
            <fileline lineNumber="168">done </fileline>
            <fileline lineNumber="169" />
            <fileline lineNumber="170">}</fileline>
            <fileline lineNumber="171" />
            <fileline lineNumber="172">function TITI</fileline>
            <fileline lineNumber="173">{</fileline>
            <fileline lineNumber="174">${Base_mysql_bin_proc_use} &lt; ${INTERNAL_IN_FILE} &gt; ${INTERNAL_OUT_FILE}</fileline>
            <fileline lineNumber="175">cat ${EXTERNAL_SQL_current_Log_File} | egrep -v "PKG_NAME" | grep  "\." &gt; ${INTERNAL_OUT_FILE}.tmp.nok</fileline>
            <fileline lineNumber="176">cat ${EXTERNAL_SQL_current_Log_File} | egrep -v "PKG_NAME" |egrep -v "\."   &gt; ${INTERNAL_OUT_FILE}.tmp</fileline>
            <fileline lineNumber="177" />
            <fileline lineNumber="178" />
            <fileline lineNumber="179">cat ${INTERNAL_OUT_FILE}.tmp &gt; ${INTERNAL_OUT_FILE}</fileline>
            <fileline lineNumber="180" />
            <fileline lineNumber="181">cat  ${INTERNAL_OUT_FILE} | while read line</fileline>
            <fileline lineNumber="182">do  INTERNAL_PKG_NAME="$( echo  "$line" | awk '{ print $1 }')"</fileline>
            <fileline lineNumber="183">    INTERNAL_PKD_ID="$( echo "$line" | awk '{ print $2 }')"</fileline>
            <fileline lineNumber="184" />
            <fileline lineNumber="185" />
            <fileline lineNumber="186">    SQL_GENERATE_PROC &gt;&gt; ${SQL_MASTER_PROC_SCRIPT}</fileline>
            <fileline lineNumber="187">    SQL_Run_ALL_PROCS_GEN_SUB1 &gt; ${INTERNAL_IN_FILE}_RUN_PROCS.tmp</fileline>
            <fileline lineNumber="188" />
            <fileline lineNumber="189">done</fileline>
            <fileline lineNumber="190">echo  " exit "  &gt; ${INTERNAL_IN_FILE}_RUN_PROCS.tmp</fileline>
            <fileline lineNumber="191">rm ${INTERNAL_IN_FILE}_RUN_PROCS.tmp</fileline>
            <fileline lineNumber="192">#${Base_mysql_bin_proc_use} &lt; ${SQL_MASTER_PROC_SCRIPT}</fileline>
            <fileline lineNumber="193" />
            <fileline lineNumber="194">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="195">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="196">####################################################</fileline>
            <fileline lineNumber="197">}</fileline>
            <fileline lineNumber="198" />
            <fileline lineNumber="199" />
            <fileline lineNumber="200">function SQL_GENERATE_PROCS_OM_PKG_KEY_CATALOGUE</fileline>
            <fileline lineNumber="201">{</fileline>
            <fileline lineNumber="202">#|# Base_Database_Type</fileline>
            <fileline lineNumber="203">#|# Base_Database_Host</fileline>
            <fileline lineNumber="204">#|# Base_Database_Port</fileline>
            <fileline lineNumber="205">#|# Base_Database_proc_Username</fileline>
            <fileline lineNumber="206">#|# Base_Database_TempDir</fileline>
            <fileline lineNumber="207">#|# Base_Database_Default</fileline>
            <fileline lineNumber="208">#|# packageTable="ARPCOM_PKG_CAT"</fileline>
            <fileline lineNumber="209">#|# typePackageTable="ARPCOM_PKG_TYPE_CAT"</fileline>
            <fileline lineNumber="210">#|# omImportTable="ARPCOM_OM_IMPORT"</fileline>
            <fileline lineNumber="211">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="212">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="213">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="214">######################################################</fileline>
            <fileline lineNumber="215">MSG_DISPLAY "Debug" "8" "Current Stack : [ ${Function_PATH} ] " </fileline>
            <fileline lineNumber="216" />
            <fileline lineNumber="217">echo  "DELIMITER \$\$"</fileline>
            <fileline lineNumber="218">echo  "DROP PROCEDURE IF EXISTS \`${Base_Database_Default}\`.\`${PROC_NAME}\`\$\$"</fileline>
            <fileline lineNumber="219">echo  "CREATE DEFINER=\`admdb\`@\`%\` PROCEDURE \`${PROC_NAME}\`"</fileline>
            <fileline lineNumber="220">echo  "(  versionGeneral varchar(16)"</fileline>
            <fileline lineNumber="221">echo  " , versionRelease  varchar(16)"</fileline>
            <fileline lineNumber="222">echo  " , versionCorrectif varchar(16)"</fileline>
            <fileline lineNumber="223">echo  " , versionPatch varchar(16)"</fileline>
            <fileline lineNumber="224">echo  " , nomPF varchar(16)"</fileline>
            <fileline lineNumber="225">echo  " , nomMachine varchar(16)"</fileline>
            <fileline lineNumber="226">echo  " , nomInstance varchar(16)"</fileline>
            <fileline lineNumber="227">echo  " , nomInstanceSub1 varchar(50)"</fileline>
            <fileline lineNumber="228">echo  " , nomInstanceSub2 varchar(50)"</fileline>
            <fileline lineNumber="229">echo  " , numstage varchar(32)"</fileline>
            <fileline lineNumber="230">echo  ")"</fileline>
            <fileline lineNumber="231">echo  "BEGIN"</fileline>
            <fileline lineNumber="232">echo  ""</fileline>
            <fileline lineNumber="233">echo  "DROP TABLE IF EXISTS  \`${Base_Database_Default}\`.\`${Base_TABLE_Name}_${INTERNAL_PKG_NAME}\`;"</fileline>
            <fileline lineNumber="234">echo  "CREATE TABLE IF NOT EXISTS  \`${Base_Database_Default}\`.\`${Base_TABLE_Name}_${INTERNAL_PKG_NAME}\` ("</fileline>
            <fileline lineNumber="235">echo  "  \`ID_PKG\`               int(11)       NOT NULL,"</fileline>
            <fileline lineNumber="236">echo  "  \`PKG_GENERAL\`          varchar(8)    NOT NULL,"</fileline>
            <fileline lineNumber="237">echo  "  \`PKG_RELEASE\`          varchar(8)    NOT NULL,"</fileline>
            <fileline lineNumber="238">echo  "  \`PKG_CORRECTIF\`        varchar(8)    NOT NULL,"</fileline>
            <fileline lineNumber="239">echo  "  \`PKG_PATCH\`            varchar(8)    default NULL,"</fileline>
            <fileline lineNumber="240">echo  "  \`keywords_root_path\`   varchar(32)   default 'INFRA',"</fileline>
            <fileline lineNumber="241">echo  "  \`keywords_level1_PATH\` varchar(32)   default NULL,"</fileline>
            <fileline lineNumber="242">echo  "  \`keywords_level2_PATH\` varchar(32)   default NULL,"</fileline>
            <fileline lineNumber="243">echo  "  \`keywords_level3_PATH\` varchar(32)   default NULL,"</fileline>
            <fileline lineNumber="244">echo  "  \`keywords_level4_PATH\` varchar(32)   default NULL,"</fileline>
            <fileline lineNumber="245">echo  "  \`keywords_level5_PATH\` varchar(32)   default NULL,"</fileline>
            <fileline lineNumber="246">echo  "  \`keywords_level6_PATH\` varchar(32)   default NULL,"</fileline>
            <fileline lineNumber="247">echo  "  \`Keyword_Name\`         varchar(100)  NOT NULL,"</fileline>
            <fileline lineNumber="248">echo  "  \`Keyword_Value\`        varchar(2142) default NULL,"</fileline>
            <fileline lineNumber="249">echo  "  \`stage\`                varchar(32)   default NULL,"</fileline>
            <fileline lineNumber="250">echo  "  PRIMARY KEY  (\`Keyword_Name\`)"</fileline>
            <fileline lineNumber="251">echo  ") ENGINE=MyISAM DEFAULT CHARSET=latin1 ;"</fileline>
            <fileline lineNumber="252">echo  ""</fileline>
            <fileline lineNumber="253" />
            <fileline lineNumber="254">SQL_Sub_GENERATE_PROCS_OM_PKG_KEY_CATALOGUE_1</fileline>
            <fileline lineNumber="255" />
            <fileline lineNumber="256">echo  "SELECT  \`${Base_Database_Default}_PKG_CAT\`.\`ID_PKG\` AS 'ID_PKG'"</fileline>
            <fileline lineNumber="257">echo  "       ,\`PKG_GENERAL\`"</fileline>
            <fileline lineNumber="258">echo  "       ,\`PKG_RELEASE\`"</fileline>
            <fileline lineNumber="259">echo  "       ,\`PKG_CORRECTIF\`"</fileline>
            <fileline lineNumber="260">echo  "       ,\`PKG_PATCH\`"</fileline>
            <fileline lineNumber="261">echo  "       ,'INFRA' AS 'keywords_root_path'"</fileline>
            <fileline lineNumber="262">echo  "       ,'' AS 'keywords_level1_PATH'"</fileline>
            <fileline lineNumber="263">echo  "       ,'' AS 'keywords_level2_PATH'"</fileline>
            <fileline lineNumber="264">echo  "       ,'' AS 'keywords_level3_PATH'"</fileline>
            <fileline lineNumber="265">echo  "       ,'' AS 'keywords_level4_PATH'"</fileline>
            <fileline lineNumber="266">echo  "       ,'' AS 'keywords_level5_PATH'"</fileline>
            <fileline lineNumber="267">echo  "       ,'' AS 'keywords_level6_PATH'"</fileline>
            <fileline lineNumber="268">echo  "       ,\`PKG_File_Keyword\` AS 'Keywod_Name'"</fileline>
            <fileline lineNumber="269">echo  "       ,'' AS 'Keyword_Value'"</fileline>
            <fileline lineNumber="270">echo  "       ,'' AS stage"</fileline>
            <fileline lineNumber="271">echo  "     FROM  ( \`${Base_Database_Default}_PKG_CAT\` LEFT JOIN \`${Base_Database_Default}_PKG_FILE_CAT\`"</fileline>
            <fileline lineNumber="272">echo  "         ON (\`${Base_Database_Default}_PKG_CAT\`.\`ID_PKG\` = \`${Base_Database_Default}_PKG_FILE_CAT\`.\`ID_PKG\`))"</fileline>
            <fileline lineNumber="273">echo  "            WHERE \`PKG_NAME\`    =  '${INTERNAL_PKG_NAME}' "</fileline>
            <fileline lineNumber="274">echo  "               AND \`PKG_GENERAL\` =  \`versionGeneral\`"</fileline>
            <fileline lineNumber="275">echo  "               AND \`PKG_RELEASE\` =  \`versionRelease\`"</fileline>
            <fileline lineNumber="276">echo  "               AND \`PKG_CORRECTIF\` =  \`versionCorrectif\`"</fileline>
            <fileline lineNumber="277">echo  "               AND \`PKG_PATCH\` = \`versionPatch\`"</fileline>
            <fileline lineNumber="278">echo  "          ORDER BY  \`${Base_Database_Default}_PKG_FILE_CAT\`.\`PKG_File_Keyword\`;"</fileline>
            <fileline lineNumber="279">echo  ""</fileline>
            <fileline lineNumber="280" />
            <fileline lineNumber="281">SQL_Sub_GENERATE_PROCS_OM_PKG_KEY_CATALOGUE_1</fileline>
            <fileline lineNumber="282">SQL_Sub_GENERATE_PROCS_OM_PKG_KEY_CATALOGUE_2</fileline>
            <fileline lineNumber="283" />
            <fileline lineNumber="284" />
            <fileline lineNumber="285" />
            <fileline lineNumber="286">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level1_PATH\` = '' "</fileline>
            <fileline lineNumber="287">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level2_PATH\` = '' "</fileline>
            <fileline lineNumber="288">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level3_PATH\` = '' "</fileline>
            <fileline lineNumber="289">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level4_PATH\` = '' "</fileline>
            <fileline lineNumber="290">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level5_PATH\` = '' "</fileline>
            <fileline lineNumber="291">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`stage\` = \`numStage\` ; "</fileline>
            <fileline lineNumber="292">echo  ""</fileline>
            <fileline lineNumber="293" />
            <fileline lineNumber="294" />
            <fileline lineNumber="295">SQL_Sub_GENERATE_PROCS_OM_PKG_KEY_CATALOGUE_1</fileline>
            <fileline lineNumber="296">SQL_Sub_GENERATE_PROCS_OM_PKG_KEY_CATALOGUE_2</fileline>
            <fileline lineNumber="297" />
            <fileline lineNumber="298" />
            <fileline lineNumber="299">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level1_PATH\` = \`nomMachine\`"</fileline>
            <fileline lineNumber="300">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level2_PATH\` = ''"</fileline>
            <fileline lineNumber="301">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level3_PATH\` = ''"</fileline>
            <fileline lineNumber="302">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level4_PATH\` = ''"</fileline>
            <fileline lineNumber="303">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level5_PATH\` = ''"</fileline>
            <fileline lineNumber="304">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`stage\` = \`numStage\` ;"</fileline>
            <fileline lineNumber="305">echo  ""</fileline>
            <fileline lineNumber="306">SQL_Sub_GENERATE_PROCS_OM_PKG_KEY_CATALOGUE_1</fileline>
            <fileline lineNumber="307">SQL_Sub_GENERATE_PROCS_OM_PKG_KEY_CATALOGUE_2</fileline>
            <fileline lineNumber="308" />
            <fileline lineNumber="309" />
            <fileline lineNumber="310">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level1_PATH\` = \`nomMachine\`"</fileline>
            <fileline lineNumber="311">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level2_PATH\` = '${INTERNAL_PKG_NAME}'"</fileline>
            <fileline lineNumber="312">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level3_PATH\` = ''"</fileline>
            <fileline lineNumber="313">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level4_PATH\` = ''"</fileline>
            <fileline lineNumber="314">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level5_PATH\` = ''"</fileline>
            <fileline lineNumber="315">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`stage\` = \`numStage\` ;"</fileline>
            <fileline lineNumber="316">echo  ""</fileline>
            <fileline lineNumber="317" />
            <fileline lineNumber="318">SQL_Sub_GENERATE_PROCS_OM_PKG_KEY_CATALOGUE_1</fileline>
            <fileline lineNumber="319">SQL_Sub_GENERATE_PROCS_OM_PKG_KEY_CATALOGUE_2</fileline>
            <fileline lineNumber="320" />
            <fileline lineNumber="321">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level1_PATH\` = \`nomMachine\`"</fileline>
            <fileline lineNumber="322">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level2_PATH\` = '${INTERNAL_PKG_NAME}'"</fileline>
            <fileline lineNumber="323">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level3_PATH\` = \`nomInstance\`"</fileline>
            <fileline lineNumber="324">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level4_PATH\` = ''"</fileline>
            <fileline lineNumber="325">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level5_PATH\` = ''"</fileline>
            <fileline lineNumber="326">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`stage\` = \`numStage\` ;"</fileline>
            <fileline lineNumber="327">echo  ""</fileline>
            <fileline lineNumber="328" />
            <fileline lineNumber="329">SQL_Sub_GENERATE_PROCS_OM_PKG_KEY_CATALOGUE_1</fileline>
            <fileline lineNumber="330">SQL_Sub_GENERATE_PROCS_OM_PKG_KEY_CATALOGUE_2</fileline>
            <fileline lineNumber="331" />
            <fileline lineNumber="332" />
            <fileline lineNumber="333">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level1_PATH\` = \`nomMachine\`"</fileline>
            <fileline lineNumber="334">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level2_PATH\` = '${INTERNAL_PKG_NAME}'"</fileline>
            <fileline lineNumber="335">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level3_PATH\` = \`nomInstance\`"</fileline>
            <fileline lineNumber="336">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level4_PATH\` = \`nomInstanceSub1\`"</fileline>
            <fileline lineNumber="337">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level5_PATH\` = ''"</fileline>
            <fileline lineNumber="338">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`stage\` = \`numStage\` ;"</fileline>
            <fileline lineNumber="339">echo  ""</fileline>
            <fileline lineNumber="340" />
            <fileline lineNumber="341">SQL_Sub_GENERATE_PROCS_OM_PKG_KEY_CATALOGUE_1</fileline>
            <fileline lineNumber="342">SQL_Sub_GENERATE_PROCS_OM_PKG_KEY_CATALOGUE_2</fileline>
            <fileline lineNumber="343" />
            <fileline lineNumber="344" />
            <fileline lineNumber="345">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level1_PATH\` = \`nomMachine\`"</fileline>
            <fileline lineNumber="346">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level2_PATH\` = '${INTERNAL_PKG_NAME}' "</fileline>
            <fileline lineNumber="347">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level3_PATH\` = \`nomInstance\`"</fileline>
            <fileline lineNumber="348">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level4_PATH\` = \`nomInstanceSub1\`"</fileline>
            <fileline lineNumber="349">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level5_PATH\` = \`nomInstanceSub2\`"</fileline>
            <fileline lineNumber="350">echo  "            AND \`${Base_Database_Default}_OM_IMPORT\`.\`stage\` = \`numStage\` ;"</fileline>
            <fileline lineNumber="351">echo  "END\$\$"</fileline>
            <fileline lineNumber="352">echo  "DELIMITER ;"</fileline>
            <fileline lineNumber="353" />
            <fileline lineNumber="354">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="355">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="356">####################################################</fileline>
            <fileline lineNumber="357">}</fileline>
            <fileline lineNumber="358" />
            <fileline lineNumber="359">function SQL_Sub_GENERATE_PROCS_OM_PKG_KEY_CATALOGUE_1</fileline>
            <fileline lineNumber="360">{</fileline>
            <fileline lineNumber="361">echo  "REPLACE into \`${Base_Database_Default}\`.\`${Base_TABLE_Name}_${INTERNAL_PKG_NAME}\`"</fileline>
            <fileline lineNumber="362">echo  "   (\`ID_PKG\`"</fileline>
            <fileline lineNumber="363">echo  "   ,\`PKG_GENERAL\`"</fileline>
            <fileline lineNumber="364">echo  "   ,\`PKG_RELEASE\`"</fileline>
            <fileline lineNumber="365">echo  "   ,\`PKG_CORRECTIF\`"</fileline>
            <fileline lineNumber="366">echo  "   ,\`PKG_PATCH\`"</fileline>
            <fileline lineNumber="367">echo  "   ,\`keywords_root_path\`"</fileline>
            <fileline lineNumber="368">echo  "   ,\`keywords_level1_PATH\`"</fileline>
            <fileline lineNumber="369">echo  "   ,\`keywords_level2_PATH\`"</fileline>
            <fileline lineNumber="370">echo  "   ,\`keywords_level3_PATH\`"</fileline>
            <fileline lineNumber="371">echo  "   ,\`keywords_level4_PATH\`"</fileline>
            <fileline lineNumber="372">echo  "   ,\`keywords_level5_PATH\`"</fileline>
            <fileline lineNumber="373">echo  "   ,\`keywords_level6_PATH\`"</fileline>
            <fileline lineNumber="374">echo  "   ,\`Keyword_Name\`"</fileline>
            <fileline lineNumber="375">echo  "   ,\`Keyword_Value\`"</fileline>
            <fileline lineNumber="376">echo  "   ,\`stage\`"</fileline>
            <fileline lineNumber="377">echo  ")"</fileline>
            <fileline lineNumber="378">}</fileline>
            <fileline lineNumber="379" />
            <fileline lineNumber="380">function SQL_Sub_GENERATE_PROCS_OM_PKG_KEY_CATALOGUE_2</fileline>
            <fileline lineNumber="381">{</fileline>
            <fileline lineNumber="382">echo  "SELECT \`ID_PKG\`"</fileline>
            <fileline lineNumber="383">echo  "     ,\`PKG_GENERAL\`"</fileline>
            <fileline lineNumber="384">echo  "      ,\`PKG_RELEASE\`"</fileline>
            <fileline lineNumber="385">echo  "      ,\`PKG_CORRECTIF\`"</fileline>
            <fileline lineNumber="386">echo  "      ,\`PKG_PATCH\`"</fileline>
            <fileline lineNumber="387">echo  "      ,\`${Base_Database_Default}_OM_IMPORT\`.\`keywords_root_path\`"</fileline>
            <fileline lineNumber="388">echo  "      ,\`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level1_PATH\`"</fileline>
            <fileline lineNumber="389">echo  "      ,\`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level2_PATH\`"</fileline>
            <fileline lineNumber="390">echo  "      ,\`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level3_PATH\`"</fileline>
            <fileline lineNumber="391">echo  "      ,\`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level4_PATH\`"</fileline>
            <fileline lineNumber="392">echo  "      ,\`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level5_PATH\`"</fileline>
            <fileline lineNumber="393">echo  "      ,\`${Base_Database_Default}_OM_IMPORT\`.\`keywords_level6_PATH\`"</fileline>
            <fileline lineNumber="394">echo  "      ,\`${Base_TABLE_Name}_${INTERNAL_PKG_NAME}\`.\`Keyword_Name\` AS \`Keyword_Name\`"</fileline>
            <fileline lineNumber="395">echo  "      ,\`${Base_Database_Default}_OM_IMPORT\`.\`Keyword_Value\`"</fileline>
            <fileline lineNumber="396">echo  "      ,\`${Base_Database_Default}_OM_IMPORT\`.\`stage\`"</fileline>
            <fileline lineNumber="397">echo  " FROM ( \`${Base_TABLE_Name}_${INTERNAL_PKG_NAME}\` LEFT JOIN \`${Base_Database_Default}_OM_IMPORT\`"</fileline>
            <fileline lineNumber="398">echo  "      ON ( \`${Base_Database_Default}_OM_IMPORT\`.\`Keyword_Name\` = \`${Base_TABLE_Name}_${INTERNAL_PKG_NAME}\`.\`Keyword_Name\` ))"</fileline>
            <fileline lineNumber="399">echo  "         WHERE  \`${Base_Database_Default}_OM_IMPORT\`.\`keywords_root_path\` = 'INFRA'"</fileline>
            <fileline lineNumber="400">}</fileline>
            <fileline lineNumber="401" />
            <fileline lineNumber="402" />
            <fileline lineNumber="403">function SQL_Run_ALL_PROCS_GEN_SUB</fileline>
            <fileline lineNumber="404">{</fileline>
            <fileline lineNumber="405">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="406">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="407">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="408">######################################################</fileline>
            <fileline lineNumber="409">MSG_DISPLAY "Debug" "8" "Current Stack : [ ${Function_PATH} ] " </fileline>
            <fileline lineNumber="410">print "CALL \`PKG_proc_from_OM_ContentAdaptation\`( '${INTERNAL_GO}','${INTERNAL_RO}','${INTERNAL_CO}','${INTERNAL_PO}','${INTERNAL_PFNAME}','${INTERNAL_SERVER_NAME}','${INTERNAL_INST1}','${INTERNAL_INST2}','${INTERNAL_INST3}','${INTERNAL_STAGE}')"</fileline>
            <fileline lineNumber="411" />
            <fileline lineNumber="412" />
            <fileline lineNumber="413">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="414">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="415">####################################################</fileline>
            <fileline lineNumber="416">}</fileline>
            <fileline lineNumber="417" />
            <fileline lineNumber="418" />
            <fileline lineNumber="419">function SQL_Run_ALL_PROCS</fileline>
            <fileline lineNumber="420">{</fileline>
            <fileline lineNumber="421">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="422">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="423">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="424">######################################################</fileline>
            <fileline lineNumber="425">MSG_DISPLAY "Debug" "8" "Current Stack : [ ${Function_PATH} ] " </fileline>
            <fileline lineNumber="426" />
            <fileline lineNumber="427">SQL_Run_ALL_PROCS_GEN_SUB1 &gt; ${INTERNAL_IN_FILE}_RUN_PROCS.tmp</fileline>
            <fileline lineNumber="428">${Base_mysql_bin_proc_use} &lt; ${INTERNAL_IN_FILE}_RUN_PROCS.tmp &gt;&gt; ${INTERNAL_OUT_FILE}_TUN_PROCS.tmp</fileline>
            <fileline lineNumber="429" />
            <fileline lineNumber="430" />
            <fileline lineNumber="431">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="432">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="433">####################################################</fileline>
            <fileline lineNumber="434">}</fileline>
            <fileline lineNumber="435" />
            <fileline lineNumber="436">function SQL_GET_ALL_INFO_FOR_PROCS</fileline>
            <fileline lineNumber="437">{</fileline>
            <fileline lineNumber="438">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="439">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="440">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="441">######################################################</fileline>
            <fileline lineNumber="442">MSG_DISPLAY "Debug" "8" "Current Stack : [ ${Function_PATH} ] " </fileline>
            <fileline lineNumber="443" />
            <fileline lineNumber="444">INTERNAL_IN_FILE_GET_ALL="${Base_Database_TempDir}/GET_ALL_tmp_in.sql"</fileline>
            <fileline lineNumber="445">INTERNAL_OUT_FILE_GET_ALL="${Base_Database_TempDir}/GET_ALL_outfile.file"</fileline>
            <fileline lineNumber="446">SQL_CMD="select * from \`ARPCOM_VIEW_PKG_FOR_PROC\` ;"</fileline>
            <fileline lineNumber="447" />
            <fileline lineNumber="448">echo  "${SQL_CMD}" EXTERNAL_SQL_current_FIFO_file</fileline>
            <fileline lineNumber="449">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="450">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="451">####################################################</fileline>
            <fileline lineNumber="452">}</fileline>
            <fileline lineNumber="453" />
            <fileline lineNumber="454"># Sourcing control variable </fileline>
            <fileline lineNumber="455">LibState="OK"  </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/sgbd/postgres_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 28/06/2024</fileline>
            <fileline lineNumber="4"># generic auto documentation from CAST </fileline>
            <fileline lineNumber="5"># Subject : This library provide base  support for databases interaction      #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO</fileline>
            <fileline lineNumber="10">############################## Postgres #######################################</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">function Do_postgres_init</fileline>
            <fileline lineNumber="13">{</fileline>
            <fileline lineNumber="14">#|#  BASE_Postgres_Install_PATH    : Use this var to set where postgres is installed</fileline>
            <fileline lineNumber="15">#|#  BASE_Postgres_USER            : Use this var to set which user to run any commande on Postgres</fileline>
            <fileline lineNumber="16">#|#  BASE_Postgres_DATA_DIR        : Use this var to set Where postgres store all DDB DATAS</fileline>
            <fileline lineNumber="17">#|#           Basic Use            :</fileline>
            <fileline lineNumber="18">#|#                                  Base_Postgres_Install_PATH="Myspath"</fileline>
            <fileline lineNumber="19">#|#                                  BASE_Postgres_USER="postgres_username"</fileline>
            <fileline lineNumber="20">#|#                                  BASE_Postgres_DATA_DIR="My_dataDir"</fileline>
            <fileline lineNumber="21">#|#                                  BDD_Do_postgres_init</fileline>
            <fileline lineNumber="22">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="23">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="24">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="25">######################################################</fileline>
            <fileline lineNumber="26">MSG_DISPLAY "Debug" "8" "Current Stack : [ ${Function_PATH} ] " </fileline>
            <fileline lineNumber="27">MSG_DISPLAY "Info" "1" "POSTRESG STATUS : [ INIT ] "</fileline>
            <fileline lineNumber="28">MSG_DISPLAY "Config" "1" "Postgres Install PATH    : [ ${BASE_Postgres_Install_PATH}  ]"</fileline>
            <fileline lineNumber="29">MSG_DISPLAY "Config" "1" "Postgres owner username  : [ ${BASE_Postgres_USER}  ]"</fileline>
            <fileline lineNumber="30">MSG_DISPLAY "Config" "1" "Postgres DATA path : [ ${BASE_Postgres_DATA_DIR}  ]"</fileline>
            <fileline lineNumber="31" />
            <fileline lineNumber="32">Base_param_Dir_To_Create="BASE_Postgres_DATA_DIR"</fileline>
            <fileline lineNumber="33">Set_new_directory</fileline>
            <fileline lineNumber="34">su -c "${Base_Postgres_Install_PATH}/bin/initdb -D ${BASE_Postgres_DATA_DIR}" ${BASE_Postgres_USER}</fileline>
            <fileline lineNumber="35">su -c "${Base_Postgres_Install_PATH}/bin/postmaster -D ${BASE_Postgres_DATA_DIR} " ${BASE_Postgres_USER}</fileline>
            <fileline lineNumber="36">su -c "${Base_Postgres_Install_PATH}/bin/createdb test " ${BASE_Postgres_USER}</fileline>
            <fileline lineNumber="37">su -c "${Base_Postgres_Install_PATH}/bin/psql test " ${BASE_Postgres_USER}</fileline>
            <fileline lineNumber="38">MSG_DISPLAY "Info" "1" "POSTRESG STATUS : [ INIT DONE ] "</fileline>
            <fileline lineNumber="39" />
            <fileline lineNumber="40" />
            <fileline lineNumber="41">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="42">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="43">####################################################</fileline>
            <fileline lineNumber="44">}</fileline>
            <fileline lineNumber="45" />
            <fileline lineNumber="46">function Do_postgres_start</fileline>
            <fileline lineNumber="47">{</fileline>
            <fileline lineNumber="48">#|#  Base_Postgres_Install_PATH    : Use this var to set where postgres is installed</fileline>
            <fileline lineNumber="49">#|#  BASE_Postgres_USER            : Use this var to set which user to run any commande on Postgres</fileline>
            <fileline lineNumber="50">#|#  BASE_Postgres_DATA_DIR        : Use this var to set Where postgres store all DDB DATAS</fileline>
            <fileline lineNumber="51">#|#  Base use :</fileline>
            <fileline lineNumber="52" />
            <fileline lineNumber="53">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="54">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="55">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="56">######################################################</fileline>
            <fileline lineNumber="57">MSG_DISPLAY "Debug" "8" "Current Stack : [ ${Function_PATH} ] " </fileline>
            <fileline lineNumber="58" />
            <fileline lineNumber="59" />
            <fileline lineNumber="60">echo ""</fileline>
            <fileline lineNumber="61" />
            <fileline lineNumber="62">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="63">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="64">####################################################</fileline>
            <fileline lineNumber="65">}</fileline>
            <fileline lineNumber="66" />
            <fileline lineNumber="67">function Do_postgres_stop</fileline>
            <fileline lineNumber="68">{</fileline>
            <fileline lineNumber="69">#|#  Base_Postgres_Install_PATH    : Use this var to set where postgres is installed</fileline>
            <fileline lineNumber="70">#|#  BASE_Postgres_USER            : Use this var to set which user to run any commande on Postgres</fileline>
            <fileline lineNumber="71">#|#  BASE_Postgres_DATA_DIR        : Use this var to set Where postgres store all DDB DATAS</fileline>
            <fileline lineNumber="72" />
            <fileline lineNumber="73">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="74">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="75">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="76">######################################################</fileline>
            <fileline lineNumber="77">MSG_DISPLAY "Debug" "8" "Current Stack : [ ${Function_PATH} ] " </fileline>
            <fileline lineNumber="78">echo ""</fileline>
            <fileline lineNumber="79" />
            <fileline lineNumber="80">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="81">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="82">####################################################</fileline>
            <fileline lineNumber="83">}</fileline>
            <fileline lineNumber="84" />
            <fileline lineNumber="85" />
            <fileline lineNumber="86"># Sourcing control variable </fileline>
            <fileline lineNumber="87">LibState="OK"  </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/sgbd/mysql_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 28/06/2024</fileline>
            <fileline lineNumber="4"># generic auto documentation from CAST </fileline>
            <fileline lineNumber="5"># Subject : This library provide base  support for databases interaction      #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO</fileline>
            <fileline lineNumber="10">############################## Postgres #######################################</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">function Do_mysql_init</fileline>
            <fileline lineNumber="13">{</fileline>
            <fileline lineNumber="14">#|#  Base_Mysql_Install_PATH    : Use this var to set where Mysql is installed</fileline>
            <fileline lineNumber="15">#|#  BASE_Mysql_USER            : Use this var to set which user to run any commande on Mysql</fileline>
            <fileline lineNumber="16">#|#  BASE_Mysql_DATA_DIR        : Use this var to set Where Mysql store all DDB DATAS</fileline>
            <fileline lineNumber="17" />
            <fileline lineNumber="18">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="19">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="20">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="21">######################################################</fileline>
            <fileline lineNumber="22">MSG_DISPLAY "Debug" "8" "Current Stack : [ ${Function_PATH} ] " </fileline>
            <fileline lineNumber="23" />
            <fileline lineNumber="24">${Base_Mysql_Install_PATH}/bin/</fileline>
            <fileline lineNumber="25" />
            <fileline lineNumber="26">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="27">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="28">####################################################</fileline>
            <fileline lineNumber="29">}</fileline>
            <fileline lineNumber="30" />
            <fileline lineNumber="31">function Do_mysql_start</fileline>
            <fileline lineNumber="32">{</fileline>
            <fileline lineNumber="33">#|#  Base_Mysql_Install_PATH    : Use this var to set where Mysql is installed</fileline>
            <fileline lineNumber="34">#|#  BASE_Mysql_USER            : Use this var to set which user to run any commande on Mysql</fileline>
            <fileline lineNumber="35">#|#  BASE_Mysql_DATA_DIR        : Use this var to set Where Mysql store all DDB DATAS</fileline>
            <fileline lineNumber="36" />
            <fileline lineNumber="37">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="38">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="39">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="40">######################################################</fileline>
            <fileline lineNumber="41">MSG_DISPLAY "Debug" "8" "Current Stack : [ ${Function_PATH} ] " </fileline>
            <fileline lineNumber="42" />
            <fileline lineNumber="43" />
            <fileline lineNumber="44">echo ""</fileline>
            <fileline lineNumber="45" />
            <fileline lineNumber="46">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="47">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="48">####################################################</fileline>
            <fileline lineNumber="49">}</fileline>
            <fileline lineNumber="50" />
            <fileline lineNumber="51">function Do_mysql_stop</fileline>
            <fileline lineNumber="52">{</fileline>
            <fileline lineNumber="53">#|#  Base_Mysql_Install_PATH    : Use this var to set where Mysql is installed</fileline>
            <fileline lineNumber="54">#|#  BASE_Mysql_USER            : Use this var to set which user to run any commande on Mysql</fileline>
            <fileline lineNumber="55">#|#  BASE_Mysql_DATA_DIR        : Use this var to set Where Mysql store all DDB DATAS</fileline>
            <fileline lineNumber="56" />
            <fileline lineNumber="57">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="58">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="59">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="60">######################################################</fileline>
            <fileline lineNumber="61">MSG_DISPLAY "Debug" "8" "Current Stack : [ ${Function_PATH} ] " </fileline>
            <fileline lineNumber="62" />
            <fileline lineNumber="63" />
            <fileline lineNumber="64">echo ""</fileline>
            <fileline lineNumber="65" />
            <fileline lineNumber="66">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="67">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="68">####################################################</fileline>
            <fileline lineNumber="69">}</fileline>
            <fileline lineNumber="70" />
            <fileline lineNumber="71" />
            <fileline lineNumber="72"># Sourcing control variable </fileline>
            <fileline lineNumber="73">LibState="OK"  </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/azure/azure_route_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 28/06/2024</fileline>
            <fileline lineNumber="4"># generic azure devops tool from CAST </fileline>
            <fileline lineNumber="5" />
            <fileline lineNumber="6">function do_create_route_table() {</fileline>
            <fileline lineNumber="7">  #|#  * create_route_table</fileline>
            <fileline lineNumber="8">  #|#  * @description Creates a route table in the specified resource group.</fileline>
            <fileline lineNumber="9">  #|#  * @param route_table_name The name of the route table.</fileline>
            <fileline lineNumber="10">  #|#  * @param resource_group The resource group for the route table.</fileline>
            <fileline lineNumber="11">  #|#  * @param location The location (region) for the route table.</fileline>
            <fileline lineNumber="12">  #|#  * @usage create_route_table "route_table_name" "resource_group" "location"</fileline>
            <fileline lineNumber="13" />
            <fileline lineNumber="14">  Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="15">  Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="16">  MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="17" />
            <fileline lineNumber="18">  local route_table_name="${1}"</fileline>
            <fileline lineNumber="19">  local resource_group="${2}"</fileline>
            <fileline lineNumber="20">  local location="${3}"</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22">  Empty_Var_Control "${route_table_name}" "route_table_name" "2"</fileline>
            <fileline lineNumber="23">  Empty_Var_Control "${resource_group}" "resource_group" "2"</fileline>
            <fileline lineNumber="24">  Empty_Var_Control "${location}" "location" "2"</fileline>
            <fileline lineNumber="25" />
            <fileline lineNumber="26">  az network route-table create --name "${route_table_name}" --resource-group "${resource_group}" --location "${location}"</fileline>
            <fileline lineNumber="27" />
            <fileline lineNumber="28">  Function_PATH="$(dirname ${Function_PATH})"</fileline>
            <fileline lineNumber="29">}</fileline>
            <fileline lineNumber="30" />
            <fileline lineNumber="31" />
            <fileline lineNumber="32" />
            <fileline lineNumber="33">function do_add_route ()</fileline>
            <fileline lineNumber="34">{</fileline>
            <fileline lineNumber="35">#|# /**</fileline>
            <fileline lineNumber="36">#|#  * set_vm_properties</fileline>
            <fileline lineNumber="37">#|#  * @description Sets the properties of a VM based on provided variables.</fileline>
            <fileline lineNumber="38">#|#  * @param vm_name The name of the VM.</fileline>
            <fileline lineNumber="39">#|#  * @param resource_group The resource group of the VM.</fileline>
            <fileline lineNumber="40">#|#  * @param property_name The name of the property to set.</fileline>
            <fileline lineNumber="41">#|#  * @param property_value The value to set for the property.</fileline>
            <fileline lineNumber="42">#|#  * @usage set_vm_properties "vm_name" "resource_group" "property_name" "property_value"</fileline>
            <fileline lineNumber="43">#|#  */</fileline>
            <fileline lineNumber="44">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="45">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="46">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="47">######################################################</fileline>
            <fileline lineNumber="48">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="49" />
            <fileline lineNumber="50">local vm_name="${1}"</fileline>
            <fileline lineNumber="51">local resource_group="${2}"</fileline>
            <fileline lineNumber="52">local property_name="${3}"</fileline>
            <fileline lineNumber="53">local property_value="${4}"</fileline>
            <fileline lineNumber="54" />
            <fileline lineNumber="55">Empty_Var_Control "${vm_name}" "vm_name" "2"</fileline>
            <fileline lineNumber="56">Empty_Var_Control "${resource_group}" "resource_group" "2"</fileline>
            <fileline lineNumber="57">Empty_Var_Control "${property_name}" "property_name" "2"</fileline>
            <fileline lineNumber="58">Empty_Var_Control "${property_value}" "property_value" "2"</fileline>
            <fileline lineNumber="59" />
            <fileline lineNumber="60" />
            <fileline lineNumber="61">az network route-table route create --resource-group rg-tool-prod-se-frc1 --route-table-name rt-glb-prod-ne-frc02 --name rt-glb-hprd-net-frc01 --next-hop-type VnetLocal --address-prefix 10.10.0.0/23</fileline>
            <fileline lineNumber="62">az network route-table route create --resource-group rg-tool-prod-se-frc1 --route-table-name rt-glb-prod-ne-frc02 --name rt-glb-hprd-net-frc02 --next-hop-type VnetLocal --address-prefix 10.10.2.0/26</fileline>
            <fileline lineNumber="63">az network route-table route create --resource-group rg-tool-prod-se-frc1 --route-table-name rt-glb-prod-ne-frc02 --name rt-glb-hprd-net-frc03 --next-hop-type VnetLocal --address-prefix 10.10.2.64/26</fileline>
            <fileline lineNumber="64">az network route-table route create --resource-group rg-tool-prod-se-frc1 --route-table-name rt-glb-prod-ne-frc02 --name rt-glb-hprd-net-frc04 --next-hop-type VnetLocal --address-prefix 10.10.2.128/26</fileline>
            <fileline lineNumber="65">az network route-table route create --resource-group rg-tool-prod-se-frc1 --route-table-name rt-glb-prod-ne-frc02 --name rt-glb-hprd-net-frc05 --next-hop-type VnetLocal --address-prefix 10.10.2.192/26</fileline>
            <fileline lineNumber="66" />
            <fileline lineNumber="67">az network route-table route create --resource-group MyResourceGroup --route-table-name MyRouteTable --name MyRoute --next-hop-type VirtualAppliance --address-prefix 10.1.0.0/16 --next-hop-ip-address 10.0.0.4</fileline>
            <fileline lineNumber="68" />
            <fileline lineNumber="69" />
            <fileline lineNumber="70" />
            <fileline lineNumber="71">az network route-table route create --resource-group rg-tool-prod-se-frc1 --route-table-name rt-glb-prod-ne-frc02 --name rt-glb-hprd-net-frc05 --next-hop-type VnetLocal --address-prefix 10.10.2.192/26</fileline>
            <fileline lineNumber="72" />
            <fileline lineNumber="73">az network route-table route create --route-table-name rt-hprd-prod-ne-frc-02 --resource-group rg-lzap-hprd-frc01 --name rt-glb-hprd-net-frc01 --address-prefix "10.2.0.0/16" --next-hop-type "VirtualAppliance" --next-hop-ip-address 10.0.2.4</fileline>
            <fileline lineNumber="74" />
            <fileline lineNumber="75">http://52.143.184.250/</fileline>
            <fileline lineNumber="76" />
            <fileline lineNumber="77">rt-hprd-prod-ne-frc-02 </fileline>
            <fileline lineNumber="78" />
            <fileline lineNumber="79">az network route-table route delete --route-table-name "myRouteTable" --resource-group "myResourceGroup" --name "myRoute1"</fileline>
            <fileline lineNumber="80" />
            <fileline lineNumber="81" />
            <fileline lineNumber="82" />
            <fileline lineNumber="83" />
            <fileline lineNumber="84" />
            <fileline lineNumber="85">az network route-table route delete --route-table-name rt-hprd-prod-ne-frc-02 --resource-group rg-lzap-hprd-frc01 --name rt-glb-hprd-net-frc01 </fileline>
            <fileline lineNumber="86">az network route-table route delete --route-table-name rt-hprd-prod-ne-frc-02 --resource-group rg-lzap-hprd-frc01 --name rt-glb-hprd-net-frc02 </fileline>
            <fileline lineNumber="87">az network route-table route delete --route-table-name rt-hprd-prod-ne-frc-02 --resource-group rg-lzap-hprd-frc01 --name rt-glb-hprd-net-frc03 </fileline>
            <fileline lineNumber="88">az network route-table route delete --route-table-name rt-hprd-prod-ne-frc-02 --resource-group rg-lzap-hprd-frc01 --name rt-glb-hprd-net-frc04 </fileline>
            <fileline lineNumber="89">az network route-table route delete --route-table-name rt-hprd-prod-ne-frc-02 --resource-group rg-lzap-hprd-frc01 --name rt-glb-hprd-net-frc05 </fileline>
            <fileline lineNumber="90">az network route-table route delete --route-table-name rt-hprd-prod-ne-frc-02 --resource-group rg-lzap-hprd-frc01 --name rt-glb-hprd-net-frc06 </fileline>
            <fileline lineNumber="91">az network route-table route delete --route-table-name rt-hprd-prod-ne-frc-02 --resource-group rg-lzap-hprd-frc01 --name rt-glb-hprd-net-frc07 </fileline>
            <fileline lineNumber="92">az network route-table route delete --route-table-name rt-hprd-prod-ne-frc-02 --resource-group rg-lzap-hprd-frc01 --name rt-glb-hprd-net-frc08 </fileline>
            <fileline lineNumber="93">az network route-table route delete --route-table-name rt-hprd-prod-ne-frc-02 --resource-group rg-lzap-hprd-frc01 --name rt-glb-hprd-net-frc09 </fileline>
            <fileline lineNumber="94">az network route-table route delete --route-table-name rt-hprd-prod-ne-frc-02 --resource-group rg-lzap-hprd-frc01 --name rt-glb-hprd-net-frc10 </fileline>
            <fileline lineNumber="95" />
            <fileline lineNumber="96" />
            <fileline lineNumber="97" />
            <fileline lineNumber="98" />
            <fileline lineNumber="99" />
            <fileline lineNumber="100">az network route-table route create --route-table-name rt-hprd-prod-ne-frc-02 --resource-group rg-lzap-hprd-frc01 --name rt-glb-hprd-net-frc01 --next-hop-type VnetLocal          --address-prefix 10.0.2.0/24       	</fileline>
            <fileline lineNumber="101">az network route-table route create --route-table-name rt-hprd-prod-ne-frc-02 --resource-group rg-lzap-hprd-frc01 --name rt-glb-hprd-net-frc02 --address-prefix 10.4.50.0/28      --next-hop-type "VirtualAppliance" --next-hop-ip-address 10.0.2.4 </fileline>
            <fileline lineNumber="102">az network route-table route create --route-table-name rt-hprd-prod-ne-frc-02 --resource-group rg-lzap-hprd-frc01 --name rt-glb-hprd-net-frc03 --address-prefix 10.4.4.0/24       --next-hop-type "VirtualAppliance" --next-hop-ip-address 10.0.2.4</fileline>
            <fileline lineNumber="103">az network route-table route create --route-table-name rt-hprd-prod-ne-frc-02 --resource-group rg-lzap-hprd-frc01 --name rt-glb-hprd-net-frc04 --address-prefix 10.10.2.192/26    --next-hop-type "VirtualAppliance" --next-hop-ip-address 10.0.2.4</fileline>
            <fileline lineNumber="104">az network route-table route create --route-table-name rt-hprd-prod-ne-frc-02 --resource-group rg-lzap-hprd-frc01 --name rt-glb-hprd-net-frc05 --address-prefix 10.4.0.0/22       --next-hop-type "VirtualAppliance" --next-hop-ip-address 10.0.2.4</fileline>
            <fileline lineNumber="105">az network route-table route create --route-table-name rt-hprd-prod-ne-frc-02 --resource-group rg-lzap-hprd-frc01 --name rt-glb-hprd-net-frc06 --address-prefix 10.0.3.0/24       --next-hop-type "VirtualAppliance" --next-hop-ip-address 10.0.2.4</fileline>
            <fileline lineNumber="106">az network route-table route create --route-table-name rt-hprd-prod-ne-frc-02 --resource-group rg-lzap-hprd-frc01 --name rt-glb-hprd-net-frc07 --address-prefix 10.0.1.0/24       --next-hop-type "VirtualAppliance" --next-hop-ip-address 10.0.2.4</fileline>
            <fileline lineNumber="107">az network route-table route create --route-table-name rt-hprd-prod-ne-frc-02 --resource-group rg-lzap-hprd-frc01 --name rt-glb-hprd-net-frc08 --address-prefix 10.4.2.0/24       --next-hop-type "VirtualAppliance" --next-hop-ip-address 10.0.2.4</fileline>
            <fileline lineNumber="108">az network route-table route create --route-table-name rt-hprd-prod-ne-frc-02 --resource-group rg-lzap-hprd-frc01 --name rt-glb-hprd-net-frc09 --address-prefix 10.4.1.0/24       --next-hop-type "VirtualAppliance" --next-hop-ip-address 10.0.2.4</fileline>
            <fileline lineNumber="109">az network route-table route create --route-table-name rt-hprd-prod-ne-frc-02 --resource-group rg-lzap-hprd-frc01 --name rt-glb-hprd-net-frc10 --address-prefix 168.63.129.16/32  --next-hop-type "VirtualAppliance" --next-hop-ip-address 10.0.2.4</fileline>
            <fileline lineNumber="110" />
            <fileline lineNumber="111" />
            <fileline lineNumber="112">az network route-table route create --route-table-name rt-hprd-prod-ne-frc-02 --resource-group rg-lzap-hprd-frc01 --name rt-glb-hprd-net-frc01 --next-hop-type VnetLocal          --address-prefix 10.0.2.0/24       	</fileline>
            <fileline lineNumber="113">route add -p 10.4.50.0/28    mask 255.255.255.0 10.10.2.65 if 15</fileline>
            <fileline lineNumber="114">route add -p 10.4.4.0/24     mask 255.255.255.0 10.10.2.65 if 15</fileline>
            <fileline lineNumber="115">route add -p 10.4.0.0/22     mask 255.255.255.0 10.10.2.65 if 15</fileline>
            <fileline lineNumber="116">route add -p 10.0.3.0/24     mask 255.255.255.0 10.10.2.65 if 15</fileline>
            <fileline lineNumber="117">route add -p 10.0.1.0/24     mask 255.255.255.0 10.10.2.65 if 15</fileline>
            <fileline lineNumber="118">route add -p 10.4.2.0/24     mask 255.255.255.0 10.10.2.65 if 15</fileline>
            <fileline lineNumber="119">route add -p 10.4.1.0/24     mask 255.255.255.0 10.10.2.65 if 15</fileline>
            <fileline lineNumber="120">route add -p 10.0.2.0/24    mask 255.255.255.0 10.10.2.65 if 15</fileline>
            <fileline lineNumber="121" />
            <fileline lineNumber="122" />
            <fileline lineNumber="123" />
            <fileline lineNumber="124">route delete 10.0.2.0/24    mask 255.255.255.0 10.10.2.64 </fileline>
            <fileline lineNumber="125">route delete 10.4.50.0/28    mask 255.255.255.0 10.10.2.64 </fileline>
            <fileline lineNumber="126">route delete 10.4.4.0/24     mask 255.255.255.0 10.10.2.64</fileline>
            <fileline lineNumber="127">route delete 10.10.2.192/26  mask 255.255.255.0 10.10.2.64</fileline>
            <fileline lineNumber="128">route delete 10.4.0.0/22     mask 255.255.255.0 10.10.2.64</fileline>
            <fileline lineNumber="129">route delete 10.0.3.0/24     mask 255.255.255.0 10.10.2.64</fileline>
            <fileline lineNumber="130">route delete 10.0.1.0/24     mask 255.255.255.0 10.10.2.64</fileline>
            <fileline lineNumber="131">route delete 10.4.2.0/24     mask 255.255.255.0 10.10.2.64</fileline>
            <fileline lineNumber="132">route delete 10.4.1.0/24     mask 255.255.255.0 10.10.2.64</fileline>
            <fileline lineNumber="133" />
            <fileline lineNumber="134">az network route-table route create --route-table-name rt-hprd-prod-ne-frc-02 --resource-group rg-lzap-hprd-frc01 --name rt-glb-hprd-net-frc10 --address-prefix 168.63.129.16/32  --next-hop-type "VirtualAppliance" --next-hop-ip-address 10.0.2.4</fileline>
            <fileline lineNumber="135" />
            <fileline lineNumber="136">route add 10.0.2.0 mask 255.255.255.0 10.10.2.64</fileline>
            <fileline lineNumber="137" />
            <fileline lineNumber="138">10.0.2.4</fileline>
            <fileline lineNumber="139" />
            <fileline lineNumber="140">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="141">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="142">####################################################</fileline>
            <fileline lineNumber="143">}</fileline>
            <fileline lineNumber="144" />
            <fileline lineNumber="145">function do_remove_root ()</fileline>
            <fileline lineNumber="146">{</fileline>
            <fileline lineNumber="147">#|# /**</fileline>
            <fileline lineNumber="148">#|#  * do_vm_create</fileline>
            <fileline lineNumber="149">#|#  * @description Creates a VM based on provided variables.</fileline>
            <fileline lineNumber="150">#|#  * @param vm_name The name of the VM.</fileline>
            <fileline lineNumber="151">#|#  * @param vm_template The template to use for VM creation.</fileline>
            <fileline lineNumber="152">#|#  * @usage do_vm_create "vm_name" "vm_template"</fileline>
            <fileline lineNumber="153">#|#  */</fileline>
            <fileline lineNumber="154">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="155">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="156">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="157">######################################################</fileline>
            <fileline lineNumber="158">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="159" />
            <fileline lineNumber="160">  local vm_name="${1}"</fileline>
            <fileline lineNumber="161">  local resource_group="${2}"</fileline>
            <fileline lineNumber="162">  local vm_template="${3}"</fileline>
            <fileline lineNumber="163" />
            <fileline lineNumber="164">  Empty_Var_Control "${vm_name}" "vm_name" "2"</fileline>
            <fileline lineNumber="165">  Empty_Var_Control "${resource_group}" "resource_group" "2"</fileline>
            <fileline lineNumber="166">  Empty_Var_Control "${vm_template}" "vm_template" "2"</fileline>
            <fileline lineNumber="167" />
            <fileline lineNumber="168">  az vm create --resource-group "${resource_group}" --name "${vm_name}" --image "${vm_template}"</fileline>
            <fileline lineNumber="169" />
            <fileline lineNumber="170" />
            <fileline lineNumber="171" />
            <fileline lineNumber="172">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="173">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="174">####################################################</fileline>
            <fileline lineNumber="175">}</fileline>
            <fileline lineNumber="176" />
            <fileline lineNumber="177">function get_route_liste ()</fileline>
            <fileline lineNumber="178">{</fileline>
            <fileline lineNumber="179">#|# /**</fileline>
            <fileline lineNumber="180">#|#  * do_vm_remove</fileline>
            <fileline lineNumber="181">#|#  * @description Removes a VM based on provided variables.</fileline>
            <fileline lineNumber="182">#|#  * @param vm_name The name of the VM.</fileline>
            <fileline lineNumber="183">#|#  * @param resource_group The resource group of the VM.</fileline>
            <fileline lineNumber="184">#|#  * @usage do_vm_remove "vm_name" "resource_group"</fileline>
            <fileline lineNumber="185">#|#  */</fileline>
            <fileline lineNumber="186">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="187">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="188">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="189">######################################################</fileline>
            <fileline lineNumber="190">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="191" />
            <fileline lineNumber="192">local vm_name="${1}"</fileline>
            <fileline lineNumber="193">local resource_group="${2}"</fileline>
            <fileline lineNumber="194" />
            <fileline lineNumber="195">Empty_Var_Control "${vm_name}" "vm_name" "2"</fileline>
            <fileline lineNumber="196">Empty_Var_Control "${resource_group}" "resource_group" "2"</fileline>
            <fileline lineNumber="197" />
            <fileline lineNumber="198">az vm delete --resource-group "${resource_group}" --name "${vm_name}" --yes</fileline>
            <fileline lineNumber="199" />
            <fileline lineNumber="200">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="201">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="202">####################################################</fileline>
            <fileline lineNumber="203">}</fileline>
            <fileline lineNumber="204" />
            <fileline lineNumber="205" />
            <fileline lineNumber="206" />
        </content>
    </file>
    <file>
        <filename>./lib/azure/azure_vm_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 28/06/2024</fileline>
            <fileline lineNumber="4"># generic azure devops tool from CAST </fileline>
            <fileline lineNumber="5" />
            <fileline lineNumber="6">function set_vm_properties ()</fileline>
            <fileline lineNumber="7">{</fileline>
            <fileline lineNumber="8">#|# /**</fileline>
            <fileline lineNumber="9">#|#  * set_vm_properties</fileline>
            <fileline lineNumber="10">#|#  * @description Sets the properties of a VM based on provided variables.</fileline>
            <fileline lineNumber="11">#|#  * @param vm_name The name of the VM.</fileline>
            <fileline lineNumber="12">#|#  * @param resource_group The resource group of the VM.</fileline>
            <fileline lineNumber="13">#|#  * @param property_name The name of the property to set.</fileline>
            <fileline lineNumber="14">#|#  * @param property_value The value to set for the property.</fileline>
            <fileline lineNumber="15">#|#  * @usage set_vm_properties "vm_name" "resource_group" "property_name" "property_value"</fileline>
            <fileline lineNumber="16">#|#  */</fileline>
            <fileline lineNumber="17">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="18">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="19">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="20">######################################################</fileline>
            <fileline lineNumber="21">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="22" />
            <fileline lineNumber="23">local vm_name="${1}"</fileline>
            <fileline lineNumber="24">local resource_group="${2}"</fileline>
            <fileline lineNumber="25">local property_name="${3}"</fileline>
            <fileline lineNumber="26">local property_value="${4}"</fileline>
            <fileline lineNumber="27" />
            <fileline lineNumber="28">Empty_Var_Control "${vm_name}" "vm_name" "2"</fileline>
            <fileline lineNumber="29">Empty_Var_Control "${resource_group}" "resource_group" "2"</fileline>
            <fileline lineNumber="30">Empty_Var_Control "${property_name}" "property_name" "2"</fileline>
            <fileline lineNumber="31">Empty_Var_Control "${property_value}" "property_value" "2"</fileline>
            <fileline lineNumber="32" />
            <fileline lineNumber="33">az vm update --resource-group "${resource_group}" --name "${vm_name}" --set "${property_name}=${property_value}"</fileline>
            <fileline lineNumber="34" />
            <fileline lineNumber="35" />
            <fileline lineNumber="36" />
            <fileline lineNumber="37">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="38">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="39">####################################################</fileline>
            <fileline lineNumber="40">}</fileline>
            <fileline lineNumber="41" />
            <fileline lineNumber="42">function do_vm_create ()</fileline>
            <fileline lineNumber="43">{</fileline>
            <fileline lineNumber="44">#|# /**</fileline>
            <fileline lineNumber="45">#|#  * do_vm_create</fileline>
            <fileline lineNumber="46">#|#  * @description Creates a VM based on provided variables.</fileline>
            <fileline lineNumber="47">#|#  * @param vm_name The name of the VM.</fileline>
            <fileline lineNumber="48">#|#  * @param vm_template The template to use for VM creation.</fileline>
            <fileline lineNumber="49">#|#  * @usage do_vm_create "vm_name" "vm_template"</fileline>
            <fileline lineNumber="50">#|#  */</fileline>
            <fileline lineNumber="51">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="52">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="53">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="54">######################################################</fileline>
            <fileline lineNumber="55">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="56" />
            <fileline lineNumber="57">  local vm_name="${1}"</fileline>
            <fileline lineNumber="58">  local resource_group="${2}"</fileline>
            <fileline lineNumber="59">  local vm_template="${3}"</fileline>
            <fileline lineNumber="60" />
            <fileline lineNumber="61">  Empty_Var_Control "${vm_name}" "vm_name" "2"</fileline>
            <fileline lineNumber="62">  Empty_Var_Control "${resource_group}" "resource_group" "2"</fileline>
            <fileline lineNumber="63">  Empty_Var_Control "${vm_template}" "vm_template" "2"</fileline>
            <fileline lineNumber="64" />
            <fileline lineNumber="65">  az vm create --resource-group "${resource_group}" --name "${vm_name}" --image "${vm_template}"</fileline>
            <fileline lineNumber="66" />
            <fileline lineNumber="67" />
            <fileline lineNumber="68" />
            <fileline lineNumber="69">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="70">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="71">####################################################</fileline>
            <fileline lineNumber="72">}</fileline>
            <fileline lineNumber="73" />
            <fileline lineNumber="74">function do_vm_remove ()</fileline>
            <fileline lineNumber="75">{</fileline>
            <fileline lineNumber="76">#|# /**</fileline>
            <fileline lineNumber="77">#|#  * do_vm_remove</fileline>
            <fileline lineNumber="78">#|#  * @description Removes a VM based on provided variables.</fileline>
            <fileline lineNumber="79">#|#  * @param vm_name The name of the VM.</fileline>
            <fileline lineNumber="80">#|#  * @param resource_group The resource group of the VM.</fileline>
            <fileline lineNumber="81">#|#  * @usage do_vm_remove "vm_name" "resource_group"</fileline>
            <fileline lineNumber="82">#|#  */</fileline>
            <fileline lineNumber="83">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="84">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="85">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="86">######################################################</fileline>
            <fileline lineNumber="87">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="88" />
            <fileline lineNumber="89">local vm_name="${1}"</fileline>
            <fileline lineNumber="90">local resource_group="${2}"</fileline>
            <fileline lineNumber="91" />
            <fileline lineNumber="92">Empty_Var_Control "${vm_name}" "vm_name" "2"</fileline>
            <fileline lineNumber="93">Empty_Var_Control "${resource_group}" "resource_group" "2"</fileline>
            <fileline lineNumber="94" />
            <fileline lineNumber="95">az vm delete --resource-group "${resource_group}" --name "${vm_name}" --yes</fileline>
            <fileline lineNumber="96" />
            <fileline lineNumber="97">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="98">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="99">####################################################</fileline>
            <fileline lineNumber="100">}</fileline>
            <fileline lineNumber="101" />
            <fileline lineNumber="102">function do_vm_stop ()</fileline>
            <fileline lineNumber="103">{</fileline>
            <fileline lineNumber="104">#|# /**</fileline>
            <fileline lineNumber="105">#|#  * do_vm_stop</fileline>
            <fileline lineNumber="106">#|#  * @description Stops a VM based on provided variables.</fileline>
            <fileline lineNumber="107">#|#  * @param vm_name The name of the VM.</fileline>
            <fileline lineNumber="108">#|#  * @param resource_group The resource group of the VM.</fileline>
            <fileline lineNumber="109">#|#  * @usage do_vm_stop "vm_name" "resource_group"</fileline>
            <fileline lineNumber="110">#|#  */</fileline>
            <fileline lineNumber="111">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="112">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="113">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="114">######################################################</fileline>
            <fileline lineNumber="115">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="116" />
            <fileline lineNumber="117">local vm_name="${1}"</fileline>
            <fileline lineNumber="118">local resource_group="${2}"</fileline>
            <fileline lineNumber="119" />
            <fileline lineNumber="120">Empty_Var_Control "${vm_name}"        "vm_name"        "2"</fileline>
            <fileline lineNumber="121">Empty_Var_Control "${resource_group}" "resource_group" "2"</fileline>
            <fileline lineNumber="122" />
            <fileline lineNumber="123">az vm stop --resource-group "${resource_group}" --name "${vm_name}"</fileline>
            <fileline lineNumber="124" />
            <fileline lineNumber="125" />
            <fileline lineNumber="126" />
            <fileline lineNumber="127">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="128">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="129">####################################################</fileline>
            <fileline lineNumber="130">}</fileline>
            <fileline lineNumber="131" />
            <fileline lineNumber="132">function do_vm_start ()</fileline>
            <fileline lineNumber="133">{</fileline>
            <fileline lineNumber="134">#|# /**</fileline>
            <fileline lineNumber="135">#|#  * do_vm_start</fileline>
            <fileline lineNumber="136">#|#  * @description Starts a VM based on provided variables.</fileline>
            <fileline lineNumber="137">#|#  * @param vm_name The name of the VM.</fileline>
            <fileline lineNumber="138">#|#  * @param resource_group The resource group of the VM.</fileline>
            <fileline lineNumber="139">#|#  * @usage do_vm_start "vm_name" "resource_group"</fileline>
            <fileline lineNumber="140">#|#  */</fileline>
            <fileline lineNumber="141">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="142">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="143">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="144">######################################################</fileline>
            <fileline lineNumber="145">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="146" />
            <fileline lineNumber="147">local vm_name="${1}"</fileline>
            <fileline lineNumber="148">local resource_group="${2}"</fileline>
            <fileline lineNumber="149" />
            <fileline lineNumber="150">Empty_Var_Control "${vm_name}" "vm_name" "2"</fileline>
            <fileline lineNumber="151">Empty_Var_Control "${resource_group}" "resource_group" "2"</fileline>
            <fileline lineNumber="152" />
            <fileline lineNumber="153">az vm start --resource-group "${resource_group}" --name "${vm_name}"</fileline>
            <fileline lineNumber="154" />
            <fileline lineNumber="155" />
            <fileline lineNumber="156">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="157">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="158">####################################################</fileline>
            <fileline lineNumber="159">}</fileline>
            <fileline lineNumber="160" />
            <fileline lineNumber="161">function Get_vm_config ()</fileline>
            <fileline lineNumber="162">{</fileline>
            <fileline lineNumber="163">#|# /**</fileline>
            <fileline lineNumber="164">#|#  * Get_vm_config</fileline>
            <fileline lineNumber="165">#|#  * @description Retrieves the full configuration of a VM based on provided variables.</fileline>
            <fileline lineNumber="166">#|#  * @param vm_name The name of the VM.</fileline>
            <fileline lineNumber="167">#|#  * @param resource_group The resource group of the VM.</fileline>
            <fileline lineNumber="168">#|#  * @usage Get_vm_config "vm_name" "resource_group"</fileline>
            <fileline lineNumber="169">#|#  */</fileline>
            <fileline lineNumber="170">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="171">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="172">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="173">######################################################</fileline>
            <fileline lineNumber="174">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="175" />
            <fileline lineNumber="176">local vm_name="${1}"</fileline>
            <fileline lineNumber="177">local resource_group="${2}"</fileline>
            <fileline lineNumber="178" />
            <fileline lineNumber="179">Empty_Var_Control "${vm_name}"        "vm_name"        "2"</fileline>
            <fileline lineNumber="180">Empty_Var_Control "${resource_group}" "resource_group" "2"</fileline>
            <fileline lineNumber="181" />
            <fileline lineNumber="182">az vm show --resource-group "${resource_group}" --name "${vm_name}"</fileline>
            <fileline lineNumber="183" />
            <fileline lineNumber="184">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="185">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="186">####################################################</fileline>
            <fileline lineNumber="187">}</fileline>
            <fileline lineNumber="188" />
            <fileline lineNumber="189">function Set_vm_config ()</fileline>
            <fileline lineNumber="190">{</fileline>
            <fileline lineNumber="191">#|# /**</fileline>
            <fileline lineNumber="192">#|#  * Set_vm_config</fileline>
            <fileline lineNumber="193">#|#  * @description Changes the configuration of a VM based on provided variables.</fileline>
            <fileline lineNumber="194">#|#  * @param vm_name The name of the VM.</fileline>
            <fileline lineNumber="195">#|#  * @param config_name The name of the configuration to set.</fileline>
            <fileline lineNumber="196">#|#  * @param config_value The value to set for the configuration.</fileline>
            <fileline lineNumber="197">#|#  * @usage Set_vm_config "vm_name" "config_name" "config_value"</fileline>
            <fileline lineNumber="198">#|#  */</fileline>
            <fileline lineNumber="199">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="200">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="201">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="202">######################################################</fileline>
            <fileline lineNumber="203">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="204" />
            <fileline lineNumber="205">local vm_name="${1}"</fileline>
            <fileline lineNumber="206">local resource_group="${2}"</fileline>
            <fileline lineNumber="207">local config_name="${3}"</fileline>
            <fileline lineNumber="208">local config_value="${4}"</fileline>
            <fileline lineNumber="209" />
            <fileline lineNumber="210">Empty_Var_Control "${vm_name}"        "vm_name"        "2"</fileline>
            <fileline lineNumber="211">Empty_Var_Control "${resource_group}" "resource_group" "2"</fileline>
            <fileline lineNumber="212">Empty_Var_Control "${config_name}"    "config_name"    "2"</fileline>
            <fileline lineNumber="213">Empty_Var_Control "${config_value}"   "config_value"   "2"</fileline>
            <fileline lineNumber="214" />
            <fileline lineNumber="215">az vm update --resource-group "${resource_group}" --name "${vm_name}" --set "${config_name}=${config_value}"</fileline>
            <fileline lineNumber="216" />
            <fileline lineNumber="217" />
            <fileline lineNumber="218">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="219">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="220">####################################################</fileline>
            <fileline lineNumber="221">}</fileline>
            <fileline lineNumber="222" />
            <fileline lineNumber="223" />
        </content>
    </file>
    <file>
        <filename>./lib/azure/azure_object-generator_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 28/06/2024</fileline>
            <fileline lineNumber="4"># generic azure object generator tool from CAST </fileline>
            <fileline lineNumber="5" />
            <fileline lineNumber="6"># Liste des objets Azure avec leurs bigrammes</fileline>
            <fileline lineNumber="7" />
            <fileline lineNumber="8">function object_creation () </fileline>
            <fileline lineNumber="9">{</fileline>
            <fileline lineNumber="10">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="11">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="12">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="13">######################################################</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="15" />
            <fileline lineNumber="16">  local_bigramme "${1}"  </fileline>
            <fileline lineNumber="17" />
            <fileline lineNumber="18">   case ${local_bigramme} in </fileline>
            <fileline lineNumber="19">        vn) MSG_DISPLAY "EdSMessage" "0" "Virtual Network"</fileline>
            <fileline lineNumber="20">        ;;</fileline>
            <fileline lineNumber="21">        sn) MSG_DISPLAY "EdSMessage" "0" "Subnet"</fileline>
            <fileline lineNumber="22">        ;;</fileline>
            <fileline lineNumber="23">        ni) MSG_DISPLAY "EdSMessage" "0" "Network Interface"</fileline>
            <fileline lineNumber="24">        ;;</fileline>
            <fileline lineNumber="25">        ns) MSG_DISPLAY "EdSMessage" "0" "Network Security Group"</fileline>
            <fileline lineNumber="26">        ;;</fileline>
            <fileline lineNumber="27">        pi) MSG_DISPLAY "EdSMessage" "0" "Public IP Address"</fileline>
            <fileline lineNumber="28">        ;;</fileline>
            <fileline lineNumber="29">        il) MSG_DISPLAY "EdSMessage" "0" "Internal Load Balancer"</fileline>
            <fileline lineNumber="30">        ;;</fileline>
            <fileline lineNumber="31">        el) MSG_DISPLAY "EdSMessage" "0" "External Load Balancer"</fileline>
            <fileline lineNumber="32">        ;;</fileline>
            <fileline lineNumber="33">        ag) MSG_DISPLAY "EdSMessage" "0" "Azure Application Gateway"</fileline>
            <fileline lineNumber="34">        ;;</fileline>
            <fileline lineNumber="35">        pe) MSG_DISPLAY "EdSMessage" "0" "Peering"</fileline>
            <fileline lineNumber="36">        ;;</fileline>
            <fileline lineNumber="37">        gw) MSG_DISPLAY "EdSMessage" "0" "Gateway"</fileline>
            <fileline lineNumber="38">        ;;</fileline>
            <fileline lineNumber="39">        nr) MSG_DISPLAY "EdSMessage" "0" "Network Security Group Rule"</fileline>
            <fileline lineNumber="40">        ;;</fileline>
            <fileline lineNumber="41">        rt) MSG_DISPLAY "EdSMessage" "0" "Route Table"</fileline>
            <fileline lineNumber="42">        ;;</fileline>
            <fileline lineNumber="43">        er) MSG_DISPLAY "EdSMessage" "0" "ExpressRoute Circuit"</fileline>
            <fileline lineNumber="44">        ;;</fileline>
            <fileline lineNumber="45">        tm) MSG_DISPLAY "EdSMessage" "0" "Traffic Manager Profile"</fileline>
            <fileline lineNumber="46">        ;;</fileline>
            <fileline lineNumber="47">        cn) MSG_DISPLAY "EdSMessage" "0" "Connection"</fileline>
            <fileline lineNumber="48">        ;;</fileline>
            <fileline lineNumber="49">        as) MSG_DISPLAY "EdSMessage" "0" "Application Security Group"</fileline>
            <fileline lineNumber="50">        ;;</fileline>
            <fileline lineNumber="51">        mg) MSG_DISPLAY "EdSMessage" "0" "Management Groups"</fileline>
            <fileline lineNumber="52">        ;;</fileline>
            <fileline lineNumber="53">        lb) MSG_DISPLAY "EdSMessage" "0" "Load Balancer"</fileline>
            <fileline lineNumber="54">        ;;</fileline>
            <fileline lineNumber="55">        di) MSG_DISPLAY "EdSMessage" "0" "Zone DNS interne"</fileline>
            <fileline lineNumber="56">        ;;</fileline>
            <fileline lineNumber="57">        dp) MSG_DISPLAY "EdSMessage" "0" "Zone DNS public"</fileline>
            <fileline lineNumber="58">        ;;</fileline>
            <fileline lineNumber="59">        fw) MSG_DISPLAY "EdSMessage" "0" "Firewall service"</fileline>
            <fileline lineNumber="60">        ;;</fileline>
            <fileline lineNumber="61">        pr) MSG_DISPLAY "EdSMessage" "0" "Proxy"</fileline>
            <fileline lineNumber="62">        ;;</fileline>
            <fileline lineNumber="63">        ok) MSG_DISPLAY "EdSMessage" "0" "Disk"</fileline>
            <fileline lineNumber="64">        ;;</fileline>
            <fileline lineNumber="65">        st) MSG_DISPLAY "EdSMessage" "0" "Storage"</fileline>
            <fileline lineNumber="66">        ;;</fileline>
            <fileline lineNumber="67">        sa) MSG_DISPLAY "EdSMessage" "0" "Storage Account"</fileline>
            <fileline lineNumber="68">        ;;</fileline>
            <fileline lineNumber="69">        rv) MSG_DISPLAY "EdSMessage" "0" "Recovery Service Vault"</fileline>
            <fileline lineNumber="70">        ;;</fileline>
            <fileline lineNumber="71">        kv) MSG_DISPLAY "EdSMessage" "0" "Key Vault"</fileline>
            <fileline lineNumber="72">        ;;</fileline>
            <fileline lineNumber="73">        io) MSG_DISPLAY "EdSMessage" "0" "Image OS"</fileline>
            <fileline lineNumber="74">        ;;</fileline>
            <fileline lineNumber="75">        fs) MSG_DISPLAY "EdSMessage" "0" "Filer, files server, NAS"</fileline>
            <fileline lineNumber="76">        ;;</fileline>
            <fileline lineNumber="77">        bk) MSG_DISPLAY "EdSMessage" "0" "Backup"</fileline>
            <fileline lineNumber="78">        ;;</fileline>
            <fileline lineNumber="79">        ad) MSG_DISPLAY "EdSMessage" "0" "Active Directory"</fileline>
            <fileline lineNumber="80">        ;;</fileline>
            <fileline lineNumber="81">        av) MSG_DISPLAY "EdSMessage" "0" "Anti-Virus, Anti-Spam"</fileline>
            <fileline lineNumber="82">        ;;</fileline>
            <fileline lineNumber="83">        ar) MSG_DISPLAY "EdSMessage" "0" "Archivage, archive solution"</fileline>
            <fileline lineNumber="84">        ;;</fileline>
            <fileline lineNumber="85">        bt) MSG_DISPLAY "EdSMessage" "0" "Batch server, ETL"</fileline>
            <fileline lineNumber="86">        ;;</fileline>
            <fileline lineNumber="87">        ft) MSG_DISPLAY "EdSMessage" "0" "FTP service, SFTP"</fileline>
            <fileline lineNumber="88">        ;;</fileline>
            <fileline lineNumber="89">        ls) MSG_DISPLAY "EdSMessage" "0" "License server"</fileline>
            <fileline lineNumber="90">        ;;</fileline>
            <fileline lineNumber="91">        ms) MSG_DISPLAY "EdSMessage" "0" "Monitoring server"</fileline>
            <fileline lineNumber="92">        ;;</fileline>
            <fileline lineNumber="93">        or) MSG_DISPLAY "EdSMessage" "0" "Orchestration"</fileline>
            <fileline lineNumber="94">        ;;</fileline>
            <fileline lineNumber="95">        up) MSG_DISPLAY "EdSMessage" "0" "Patching, Update, fixing"</fileline>
            <fileline lineNumber="96">        ;;</fileline>
            <fileline lineNumber="97">        rg) MSG_DISPLAY "EdSMessage" "0" "Resource Group"</fileline>
            <fileline lineNumber="98">        ;;</fileline>
            <fileline lineNumber="99">        rd) MSG_DISPLAY "EdSMessage" "0" "RDP, PMAD, srv de rebond"</fileline>
            <fileline lineNumber="100">        ;;</fileline>
            <fileline lineNumber="101">        sc) MSG_DISPLAY "EdSMessage" "0" "Scheduler server"</fileline>
            <fileline lineNumber="102">        ;;</fileline>
            <fileline lineNumber="103">        ss) MSG_DISPLAY "EdSMessage" "0" "Security for server, audit, compliance"</fileline>
            <fileline lineNumber="104">        ;;</fileline>
            <fileline lineNumber="105">        sm) MSG_DISPLAY "EdSMessage" "0" "SMTP"</fileline>
            <fileline lineNumber="106">        ;;</fileline>
            <fileline lineNumber="107">        ws) MSG_DISPLAY "EdSMessage" "0" "Web Server"</fileline>
            <fileline lineNumber="108">        ;;</fileline>
            <fileline lineNumber="109">        ap) MSG_DISPLAY "EdSMessage" "0" "Application Server"</fileline>
            <fileline lineNumber="110">        ;;</fileline>
            <fileline lineNumber="111">        db) MSG_DISPLAY "EdSMessage" "0" "DB Server"</fileline>
            <fileline lineNumber="112">        ;;</fileline>
            <fileline lineNumber="113">        ma) MSG_DISPLAY "EdSMessage" "0" "Master"</fileline>
            <fileline lineNumber="114">        ;;</fileline>
            <fileline lineNumber="115">esac</fileline>
            <fileline lineNumber="116">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="117">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="118">####################################################</fileline>
            <fileline lineNumber="119">}</fileline>
            <fileline lineNumber="120" />
            <fileline lineNumber="121" />
            <fileline lineNumber="122" />
            <fileline lineNumber="123">LibState="OK"</fileline>
            <fileline lineNumber="124" />
        </content>
    </file>
    <file>
        <filename>./lib/azure/azure_name-generator_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 28/06/2024</fileline>
            <fileline lineNumber="4"># generic azure naming tool from CAST </fileline>
            <fileline lineNumber="5" />
            <fileline lineNumber="6"># functions to generate and set azure ressource name by user with interface</fileline>
            <fileline lineNumber="7" />
            <fileline lineNumber="8"># set app code</fileline>
            <fileline lineNumber="9">function get_app_code ()</fileline>
            <fileline lineNumber="10">{</fileline>
            <fileline lineNumber="11">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="12">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="13">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="14">######################################################</fileline>
            <fileline lineNumber="15">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="16">read -p "Entrez le code de l'application (par defaut: $CODE_APPLI): " user_code_appli</fileline>
            <fileline lineNumber="17">CODE_APPLI=${user_code_appli:-$CODE_APPLI}</fileline>
            <fileline lineNumber="18">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="19">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="20">####################################################</fileline>
            <fileline lineNumber="21">}</fileline>
            <fileline lineNumber="22" />
            <fileline lineNumber="23"># set env for coding</fileline>
            <fileline lineNumber="24">function gen_env_code ()</fileline>
            <fileline lineNumber="25">{</fileline>
            <fileline lineNumber="26">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="27">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="28">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="29">######################################################</fileline>
            <fileline lineNumber="30">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="31">    echo "Selectionnez l'environnement: "</fileline>
            <fileline lineNumber="32">    select env in "${!ENVIRONMENTS[@]}"; do</fileline>
            <fileline lineNumber="33">        if [[ -n "$env" ]]</fileline>
            <fileline lineNumber="34">         then</fileline>
            <fileline lineNumber="35">            ENV=${ENVIRONMENTS[$env]}</fileline>
            <fileline lineNumber="36">            break</fileline>
            <fileline lineNumber="37">        else</fileline>
            <fileline lineNumber="38">            echo "Selection invalide. Veuillez reessayer."</fileline>
            <fileline lineNumber="39">        fi</fileline>
            <fileline lineNumber="40">    done</fileline>
            <fileline lineNumber="41">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="42">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="43">####################################################</fileline>
            <fileline lineNumber="44">}</fileline>
            <fileline lineNumber="45" />
            <fileline lineNumber="46"># set localisation</fileline>
            <fileline lineNumber="47">function get_localisation ()</fileline>
            <fileline lineNumber="48">{</fileline>
            <fileline lineNumber="49">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="50">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="51">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="52">######################################################</fileline>
            <fileline lineNumber="53">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="54">  echo "Select the deployment location (default: France Central): "</fileline>
            <fileline lineNumber="55">    select loc in "${!COUNTRIES[@]}"</fileline>
            <fileline lineNumber="56">     do</fileline>
            <fileline lineNumber="57">        if [[ -n "$loc" ]]; then</fileline>
            <fileline lineNumber="58">            LOCALISATION=${COUNTRIES[$loc]}</fileline>
            <fileline lineNumber="59">            break</fileline>
            <fileline lineNumber="60">        else</fileline>
            <fileline lineNumber="61">            echo "Invalid selection. Please try again."</fileline>
            <fileline lineNumber="62">        fi</fileline>
            <fileline lineNumber="63">    done</fileline>
            <fileline lineNumber="64">    LOCALISATION=${LOCALISATION:-fc}</fileline>
            <fileline lineNumber="65">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="66">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="67">####################################################</fileline>
            <fileline lineNumber="68">}</fileline>
            <fileline lineNumber="69" />
            <fileline lineNumber="70"># select azure object</fileline>
            <fileline lineNumber="71">function get_object_type ()</fileline>
            <fileline lineNumber="72">{</fileline>
            <fileline lineNumber="73">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="74">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="75">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="76">######################################################</fileline>
            <fileline lineNumber="77">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="78">    echo "Selectionnez le type d'objet Azure: "</fileline>
            <fileline lineNumber="79">    select obj in "${!AZURE_OBJECTS[@]}"</fileline>
            <fileline lineNumber="80">     do</fileline>
            <fileline lineNumber="81">        if [[ -n "$obj" ]]</fileline>
            <fileline lineNumber="82">         then</fileline>
            <fileline lineNumber="83">            BIGRAMME=${AZURE_OBJECTS[$obj]}</fileline>
            <fileline lineNumber="84">            CATEGORIE=${CATEGORIES[$obj]}</fileline>
            <fileline lineNumber="85">            break</fileline>
            <fileline lineNumber="86">        else</fileline>
            <fileline lineNumber="87">            echo "Selection invalide. Veuillez reessayer."</fileline>
            <fileline lineNumber="88">        fi</fileline>
            <fileline lineNumber="89">    done</fileline>
            <fileline lineNumber="90">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="91">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="92">####################################################</fileline>
            <fileline lineNumber="93">}</fileline>
            <fileline lineNumber="94" />
            <fileline lineNumber="95"># select index</fileline>
            <fileline lineNumber="96">function get_index()</fileline>
            <fileline lineNumber="97">{</fileline>
            <fileline lineNumber="98">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="99">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="100">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="101">######################################################</fileline>
            <fileline lineNumber="102">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="103">    echo "Select the index (default: 01): "</fileline>
            <fileline lineNumber="104">    select idx in {01..10}</fileline>
            <fileline lineNumber="105">     do</fileline>
            <fileline lineNumber="106">        if [[ -n "$idx" ]]</fileline>
            <fileline lineNumber="107">         then</fileline>
            <fileline lineNumber="108">            INDEX=$idx</fileline>
            <fileline lineNumber="109">            break</fileline>
            <fileline lineNumber="110">        else</fileline>
            <fileline lineNumber="111">            echo "Invalid selection. Please try again."</fileline>
            <fileline lineNumber="112">        fi</fileline>
            <fileline lineNumber="113">    done</fileline>
            <fileline lineNumber="114">    INDEX=${INDEX:-01}</fileline>
            <fileline lineNumber="115">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="116">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="117">####################################################</fileline>
            <fileline lineNumber="118">}</fileline>
            <fileline lineNumber="119" />
            <fileline lineNumber="120" />
            <fileline lineNumber="121"># Fonction pour poser des questions et obtenir les entrees utilisateur</fileline>
            <fileline lineNumber="122">function ask_questions()</fileline>
            <fileline lineNumber="123"> {</fileline>
            <fileline lineNumber="124">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="125">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="126">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="127">######################################################</fileline>
            <fileline lineNumber="128">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="129">    get_app_code</fileline>
            <fileline lineNumber="130">    gen_env_code</fileline>
            <fileline lineNumber="131">    get_localisation</fileline>
            <fileline lineNumber="132">    get_object_type</fileline>
            <fileline lineNumber="133">    get_index</fileline>
            <fileline lineNumber="134">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="135">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="136">####################################################</fileline>
            <fileline lineNumber="137">}</fileline>
            <fileline lineNumber="138" />
            <fileline lineNumber="139">LibState="OK"</fileline>
            <fileline lineNumber="140" />
        </content>
    </file>
    <file>
        <filename>./lib/azure/azure_webapp_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2" />
            <fileline lineNumber="3">#TODO check var null or not</fileline>
            <fileline lineNumber="4" />
            <fileline lineNumber="5">function set_webapp_docker_image ()</fileline>
            <fileline lineNumber="6">{</fileline>
            <fileline lineNumber="7">#TODO [x] integrer la fonction type  from @ACR to @DCH</fileline>
            <fileline lineNumber="8" />
            <fileline lineNumber="9">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="10">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="11">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="12">######################################################</fileline>
            <fileline lineNumber="13" />
            <fileline lineNumber="14">local _RESSOURCE_GROUP="${1}"</fileline>
            <fileline lineNumber="15">local _RESSOURCE_NAME="${2}"</fileline>
            <fileline lineNumber="16">local _DOCKER_IMAGE="${3}"</fileline>
            <fileline lineNumber="17" />
            <fileline lineNumber="18">Empty_Var_Control "_RESSOURCE_GROUP" "${_RESSOURCE_GROUP}" "4"</fileline>
            <fileline lineNumber="19">Empty_Var_Control "_RESSOURCE_NAME" "${_RESSOURCE_NAME}"   "4"</fileline>
            <fileline lineNumber="20">Empty_Var_Control "_DOCKER_IMAGE" "${_DOCKER_IMAGE}"       "4"</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22">az webapp config container set \</fileline>
            <fileline lineNumber="23">  --resource-group "${_RESSOURCE_GROUP}" \</fileline>
            <fileline lineNumber="24">  --name "${_RESSOURCE_NAME}" \</fileline>
            <fileline lineNumber="25">  --container-image-name "${_DOCKER_IMAGE}"</fileline>
            <fileline lineNumber="26" />
            <fileline lineNumber="27">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="28">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="29">####################################################</fileline>
            <fileline lineNumber="30">}</fileline>
            <fileline lineNumber="31" />
            <fileline lineNumber="32">function get_ssh_webapp ()</fileline>
            <fileline lineNumber="33">{</fileline>
            <fileline lineNumber="34">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="35">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="36">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="37">######################################################</fileline>
            <fileline lineNumber="38" />
            <fileline lineNumber="39">  # Executer la commande SSH pour acceder a l'application web</fileline>
            <fileline lineNumber="40">  az webapp ssh -n "${RESSOURCE_NAME}" -g "${RESSOURCE_GROUP}"</fileline>
            <fileline lineNumber="41" />
            <fileline lineNumber="42">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="43">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="44">####################################################    </fileline>
            <fileline lineNumber="45">}</fileline>
            <fileline lineNumber="46" />
        </content>
    </file>
    <file>
        <filename>./lib/azure/azure_ressource-group_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 28/06/2024</fileline>
            <fileline lineNumber="4"># generic azure ressource group managment from CAST</fileline>
            <fileline lineNumber="5" />
            <fileline lineNumber="6" />
            <fileline lineNumber="7"># generate Ressource Group config file with config.cnf</fileline>
            <fileline lineNumber="8">function generate_rg_config_file() </fileline>
            <fileline lineNumber="9">{</fileline>
            <fileline lineNumber="10">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="11">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="12">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="13">######################################################</fileline>
            <fileline lineNumber="14">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | Function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="15">    local id="${1}"</fileline>
            <fileline lineNumber="16">    local location="${2}"</fileline>
            <fileline lineNumber="17">    local managedBy="${3:-NotsSet}"</fileline>
            <fileline lineNumber="18">    local name="${4:-NotsSet}"</fileline>
            <fileline lineNumber="19">    local tags="${5:-NotsSet}"</fileline>
            <fileline lineNumber="20" />
            <fileline lineNumber="21">    Empty_Var_Control "${id}"        "id"         "2" </fileline>
            <fileline lineNumber="22">    Empty_Var_Control "${location}"  "location"   "2" </fileline>
            <fileline lineNumber="23">    Empty_Var_Control "${managedBy}" "managedBy"  "2" </fileline>
            <fileline lineNumber="24">    # Empty_Var_Control "${name}" ""  "2"</fileline>
            <fileline lineNumber="25">    Empty_Var_Control "${tags}"      "tags"       "2" </fileline>
            <fileline lineNumber="26" />
            <fileline lineNumber="27" />
            <fileline lineNumber="28">    local config_file="./config/config.sh"</fileline>
            <fileline lineNumber="29" />
            <fileline lineNumber="30" />
            <fileline lineNumber="31">    echo "Generating configuration file: $config_file"</fileline>
            <fileline lineNumber="32" />
            <fileline lineNumber="33">    cat &lt;&lt;EOL &gt; $config_file</fileline>
            <fileline lineNumber="34">resourceGroup="$( basename $( pwd )) "    </fileline>
            <fileline lineNumber="35">ID="${id}"</fileline>
            <fileline lineNumber="36">LOCATION="${location}"</fileline>
            <fileline lineNumber="37">MANAGEDBY="${managedBy}"</fileline>
            <fileline lineNumber="38">NAME="${name}"</fileline>
            <fileline lineNumber="39">ConfigRessourceGroupeState="OK"</fileline>
            <fileline lineNumber="40">EOL</fileline>
            <fileline lineNumber="41">}</fileline>
            <fileline lineNumber="42" />
            <fileline lineNumber="43"># Fonction pour scanner le groupe de ressources et generer le fichier de configuration</fileline>
            <fileline lineNumber="44">function scan_resource_group() </fileline>
            <fileline lineNumber="45">{</fileline>
            <fileline lineNumber="46">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="47">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="48">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="49">######################################################</fileline>
            <fileline lineNumber="50">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | Function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="51">    local rg="${1}"</fileline>
            <fileline lineNumber="52">    Empty_Var_Control "${rg}"        "rg"        "" "2" </fileline>
            <fileline lineNumber="53" />
            <fileline lineNumber="54">    echo "Scanning resource group: ${rg}"</fileline>
            <fileline lineNumber="55" />
            <fileline lineNumber="56">    # Recuperer les informations du groupe de ressources</fileline>
            <fileline lineNumber="57">    rg_info=$(az group show --name $rg --query "{id:id, location:location, managedBy:managedBy, name:name, tags:tags}" -o json)</fileline>
            <fileline lineNumber="58" />
            <fileline lineNumber="59">    # Lire les informations et generer le fichier de configuration</fileline>
            <fileline lineNumber="60">    id=$(jq -r '.id' &lt;&lt;&lt; "$rg_info")</fileline>
            <fileline lineNumber="61">    location=$(jq -r '.location' &lt;&lt;&lt; "$rg_info")</fileline>
            <fileline lineNumber="62">    managedBy=$(jq -r '.managedBy' &lt;&lt;&lt; "$rg_info")</fileline>
            <fileline lineNumber="63">    name=$(jq -r '.name' &lt;&lt;&lt; "$rg_info")</fileline>
            <fileline lineNumber="64">    tags=$(jq -r '.tags' &lt;&lt;&lt; "$rg_info")</fileline>
            <fileline lineNumber="65">    generate_rg_config_file "$id" "$location" "$managedBy" "$name" "$tags"</fileline>
            <fileline lineNumber="66">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="67">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="68">####################################################</fileline>
            <fileline lineNumber="69">}</fileline>
            <fileline lineNumber="70" />
            <fileline lineNumber="71" />
            <fileline lineNumber="72"># create Ressource Group config's directories first</fileline>
            <fileline lineNumber="73">function create_rg_config_dir ()</fileline>
            <fileline lineNumber="74">{</fileline>
            <fileline lineNumber="75">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="76">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="77">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="78">######################################################</fileline>
            <fileline lineNumber="79">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | Function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="80" />
            <fileline lineNumber="81">  local Rgname="${1}"</fileline>
            <fileline lineNumber="82">  if [ ${Runned_config} -gt 1 ]</fileline>
            <fileline lineNumber="83">   then </fileline>
            <fileline lineNumber="84">       MSG_DISPLAY "check" "0" "checking function create_rg_config_dir"</fileline>
            <fileline lineNumber="85">       MSG_DISPLAY "EdEMessage" "2" ""</fileline>
            <fileline lineNumber="86">   else </fileline>
            <fileline lineNumber="87">      MSG_DISPLAY "check" "0" "checking configuration directory for ressource groupe ${Rgname}" </fileline>
            <fileline lineNumber="88">      if  [ ! -d  ./RGRoot/${Rgname}/config ]</fileline>
            <fileline lineNumber="89">        then </fileline>
            <fileline lineNumber="90">          MSG_DISPLAY "EdWMessage" "1" ""</fileline>
            <fileline lineNumber="91">          mkdir ./RGRoot/${Rgname}/config</fileline>
            <fileline lineNumber="92">          cd ./RGRoot/${Rgname}</fileline>
            <fileline lineNumber="93">          scan_resource_group ${Rgname}</fileline>
            <fileline lineNumber="94">          cd ../../</fileline>
            <fileline lineNumber="95">        else </fileline>
            <fileline lineNumber="96">          MSG_DISPLAY "EdSMessage" "1" ""</fileline>
            <fileline lineNumber="97">          Runned_config="0"</fileline>
            <fileline lineNumber="98">      fi </fileline>
            <fileline lineNumber="99">fi</fileline>
            <fileline lineNumber="100" />
            <fileline lineNumber="101" />
            <fileline lineNumber="102">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="103">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="104">####################################################</fileline>
            <fileline lineNumber="105">}</fileline>
            <fileline lineNumber="106" />
            <fileline lineNumber="107" />
            <fileline lineNumber="108"># create Ressource Group directories</fileline>
            <fileline lineNumber="109">function create_rg_dir ()</fileline>
            <fileline lineNumber="110">{</fileline>
            <fileline lineNumber="111">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="112">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="113">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="114">######################################################</fileline>
            <fileline lineNumber="115">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | Function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="116">  local Rgname="${1}"</fileline>
            <fileline lineNumber="117">  if [ ${Runned_config} -gt 1 ]</fileline>
            <fileline lineNumber="118">   then </fileline>
            <fileline lineNumber="119">       MSG_DISPLAY "check" "0" "checking function create_rg_dir"</fileline>
            <fileline lineNumber="120">       MSG_DISPLAY "EdEMessage" "2" ""</fileline>
            <fileline lineNumber="121">   else </fileline>
            <fileline lineNumber="122">      MSG_DISPLAY "check" "0" "checking directory for ressource groupe ${Rgname}" </fileline>
            <fileline lineNumber="123">      if  [ ! -d ./RGRoot/${Rgname} ]</fileline>
            <fileline lineNumber="124">        then </fileline>
            <fileline lineNumber="125">          MSG_DISPLAY "EdWMessage" "1" ""</fileline>
            <fileline lineNumber="126">          mkdir ./RGRoot/${Rgname}</fileline>
            <fileline lineNumber="127">          mkdir ./RGRoot/${Rgname}/log</fileline>
            <fileline lineNumber="128">          cp ./lib/generics/rg/*.sh ./RGRoot/${repo}/</fileline>
            <fileline lineNumber="129">          cp ./lib/generics/rg/gitignore-tpl ./RGRoot/${repo}/.gitignore</fileline>
            <fileline lineNumber="130">          Runned_config=$( expr ${Runned_config} + 1 )</fileline>
            <fileline lineNumber="131">          create_rg_dir "${Rgname}"</fileline>
            <fileline lineNumber="132">        else </fileline>
            <fileline lineNumber="133">          MSG_DISPLAY "EdSMessage" "1" ""</fileline>
            <fileline lineNumber="134">          Runned_config="0"</fileline>
            <fileline lineNumber="135">      fi </fileline>
            <fileline lineNumber="136">  fi</fileline>
            <fileline lineNumber="137">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="138">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="139">####################################################</fileline>
            <fileline lineNumber="140">}</fileline>
            <fileline lineNumber="141" />
            <fileline lineNumber="142" />
            <fileline lineNumber="143"># create Ressource Groupe object ?</fileline>
            <fileline lineNumber="144">function create_rg_subobject () </fileline>
            <fileline lineNumber="145">{</fileline>
            <fileline lineNumber="146">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="147">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="148">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="149">######################################################</fileline>
            <fileline lineNumber="150">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | Function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="151">  local Rgname="${1}"</fileline>
            <fileline lineNumber="152">  # gathering ressource group object list</fileline>
            <fileline lineNumber="153">  OBJECTS=$(az resource list --resource-group ${Rgname} --query "[].{name:name, type:type}" -o json)</fileline>
            <fileline lineNumber="154" />
            <fileline lineNumber="155">  # Boucle sur chaque objet et genere la structure de repertoires et fichiers</fileline>
            <fileline lineNumber="156">  echo "${OBJECTS}" | jq -c '.[]' | while read -r OBJECT; do</fileline>
            <fileline lineNumber="157">    OBJECT_NAME=$(echo ${OBJECT} | jq -r '.name')</fileline>
            <fileline lineNumber="158">    OBJECT_TYPE=$(echo ${OBJECT} | jq -r '.type')</fileline>
            <fileline lineNumber="159" />
            <fileline lineNumber="160">    # Cree le repertoire pour l'objet</fileline>
            <fileline lineNumber="161">    mkdir -p "$OBJECT_NAME/config"</fileline>
            <fileline lineNumber="162" />
            <fileline lineNumber="163">    # Recupere les details de l'objet</fileline>
            <fileline lineNumber="164">    OBJECT_DETAILS=$(az resource show --resource-group ${Rgname} --name ${OBJECT_NAME} --resource-type ${OBJECT_TYPE} -o json)</fileline>
            <fileline lineNumber="165" />
            <fileline lineNumber="166">    # Convertit les details de l'objet en variables shell et ecrit dans config.sh</fileline>
            <fileline lineNumber="167">    echo "# Configuration pour l'objet ${OBJECT_NAME}" &gt; "${OBJECT_NAME}/config/config.sh"</fileline>
            <fileline lineNumber="168">    echo "$OBJECT_DETAILS" | jq -r 'to_entries | .[] | "" + (.key | ascii_upcase) + "=" + "\"" + (.value | tostring) + "\""' &gt;&gt; "${OBJECT_NAME}/config/config.sh"</fileline>
            <fileline lineNumber="169" />
            <fileline lineNumber="170">done</fileline>
            <fileline lineNumber="171">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="172">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="173">####################################################</fileline>
            <fileline lineNumber="174">}</fileline>
            <fileline lineNumber="175" />
            <fileline lineNumber="176"># Fonction pour verifier l'existence d'un groupe de ressources</fileline>
            <fileline lineNumber="177">function get_all_resource_group() {</fileline>
            <fileline lineNumber="178">    local resource_group_name=$1</fileline>
            <fileline lineNumber="179" />
            <fileline lineNumber="180">    # Obtenir la liste des groupes de ressources</fileline>
            <fileline lineNumber="181">    resource_groups=$(az group list --query "[].name" --output tsv)</fileline>
            <fileline lineNumber="182" />
            <fileline lineNumber="183">    # Afficher tous les groupes de ressources</fileline>
            <fileline lineNumber="184">    echo "Liste des groupes de ressources trouves :"</fileline>
            <fileline lineNumber="185">    echo "$resource_groups"</fileline>
            <fileline lineNumber="186" />
            <fileline lineNumber="187">}</fileline>
            <fileline lineNumber="188" />
            <fileline lineNumber="189">#TODO [X] create function to check if ressource group is present</fileline>
            <fileline lineNumber="190">function Check_ressource_group ()</fileline>
            <fileline lineNumber="191">{</fileline>
            <fileline lineNumber="192">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="193">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="194">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="195">######################################################</fileline>
            <fileline lineNumber="196">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | Function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="197" />
            <fileline lineNumber="198">  if [ ${Runned_on_ok} -gt 1 ]</fileline>
            <fileline lineNumber="199">    then</fileline>
            <fileline lineNumber="200">      MSG_DISPLAY "check" "0" "checking states ressource groupe"</fileline>
            <fileline lineNumber="201">      MSG_DISPLAY "EdWMessage" "1" ""</fileline>
            <fileline lineNumber="202">      exit 1</fileline>
            <fileline lineNumber="203">    else</fileline>
            <fileline lineNumber="204">      MSG_DISPLAY "check" "0" "checking states ressource groupe"</fileline>
            <fileline lineNumber="205" />
            <fileline lineNumber="206">      get_all_resource_group()</fileline>
            <fileline lineNumber="207" />
            <fileline lineNumber="208">      if [ ! -z "$resource_exists" ]</fileline>
            <fileline lineNumber="209">        then</fileline>
            <fileline lineNumber="210">          MSG_DISPLAY "EdWMessage" "1" ""</fileline>
            <fileline lineNumber="211">          echo "Il n'existe aucune ressource groupe."</fileline>
            <fileline lineNumber="212">          read -p "Voulez-vous creer un groupe de ressource ? [y/n]" create_ressource_choice</fileline>
            <fileline lineNumber="213">            if [[ "$create_ressource_choice" =~ $y ]]</fileline>
            <fileline lineNumber="214">              then</fileline>
            <fileline lineNumber="215">              az login</fileline>
            <fileline lineNumber="216">              read -p "Entrer un nom : " ressource_groupe_name</fileline>
            <fileline lineNumber="217">              # TODO [] mettre un switch case pour emplacement voir la conf</fileline>
            <fileline lineNumber="218">              read -p "Choisir un emplacement : " ressource_groupe_location </fileline>
            <fileline lineNumber="219">              az group create --name ${ressource_groupe_name} --location ${essource_groupe_location}</fileline>
            <fileline lineNumber="220" />
            <fileline lineNumber="221">              Runned_on_ok=$( expr ${Runned_on_ok} + 1)</fileline>
            <fileline lineNumber="222">              Check_ressource_group</fileline>
            <fileline lineNumber="223">            fi</fileline>
            <fileline lineNumber="224">            if [[ "$create_ressource_choice" =~ $n ]]</fileline>
            <fileline lineNumber="225">              then</fileline>
            <fileline lineNumber="226">              Runned_on_ok=$( expr ${Runned_on_ok} + 1)</fileline>
            <fileline lineNumber="227">              Check_ressource_group</fileline>
            <fileline lineNumber="228">            fi</fileline>
            <fileline lineNumber="229">        else</fileline>
            <fileline lineNumber="230">          MSG_DISPLAY "EdSMessage" "1" ""</fileline>
            <fileline lineNumber="231">          Runned_on_ok="0"</fileline>
            <fileline lineNumber="232">      fi    </fileline>
            <fileline lineNumber="233">  fi</fileline>
            <fileline lineNumber="234" />
            <fileline lineNumber="235">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="236">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="237">####################################################</fileline>
            <fileline lineNumber="238">}</fileline>
            <fileline lineNumber="239" />
            <fileline lineNumber="240" />
            <fileline lineNumber="241"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/azure/azure_devops_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 28/06/2024</fileline>
            <fileline lineNumber="4"># generic azure devops tool from CAST </fileline>
            <fileline lineNumber="5" />
            <fileline lineNumber="6"># Liste des objets Azure avec leurs bigrammes</fileline>
            <fileline lineNumber="7" />
            <fileline lineNumber="8">function azure_devops_init ()</fileline>
            <fileline lineNumber="9">{</fileline>
            <fileline lineNumber="10">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="11">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="12">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="13">######################################################</fileline>
            <fileline lineNumber="14" />
            <fileline lineNumber="15">Set_new_directory "${Base_Dir_Scripts_GIT_devops_azure}/${infra_organization}" </fileline>
            <fileline lineNumber="16">Set_new_directory "${Base_Dir_Scripts_GIT_devops_azure}/${application_organization}" </fileline>
            <fileline lineNumber="17" />
            <fileline lineNumber="18">get_azure_devops_credential</fileline>
            <fileline lineNumber="19" />
            <fileline lineNumber="20" />
            <fileline lineNumber="21">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="22">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="23">####################################################</fileline>
            <fileline lineNumber="24">}</fileline>
            <fileline lineNumber="25" />
            <fileline lineNumber="26">function get_azure_devops_credential ()</fileline>
            <fileline lineNumber="27">{</fileline>
            <fileline lineNumber="28">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="29">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="30">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="31">######################################################</fileline>
            <fileline lineNumber="32">if [[ ! ${init_azure_devops} -ge 1 ]]</fileline>
            <fileline lineNumber="33">   then </fileline>
            <fileline lineNumber="34">       MSG_DISPLAY "check" "0" "Checking credential store"</fileline>
            <fileline lineNumber="35">       if [[ -f ${Base_Dir_Scripts_cred}/running.cred ]]</fileline>
            <fileline lineNumber="36">          then </fileline>
            <fileline lineNumber="37">              . ${Base_Dir_Scripts_cred}/running.cred</fileline>
            <fileline lineNumber="38">              MSG_DISPLAY "EdSMessage" "2" "FOUND"</fileline>
            <fileline lineNumber="39">          else </fileline>
            <fileline lineNumber="40">              MSG_DISPLAY "EdWMessage" "2" "NOT FOUND"</fileline>
            <fileline lineNumber="41">       fi </fileline>
            <fileline lineNumber="42">       MSG_DISPLAY "check" "0" "Checking credential PAT for devops"</fileline>
            <fileline lineNumber="43">       if [[ -z ${PAT_devops} ]] </fileline>
            <fileline lineNumber="44">            then </fileline>
            <fileline lineNumber="45">                MSG_DISPLAY "EdWMessage" "2" "NOT FOUND"</fileline>
            <fileline lineNumber="46">                read -p "Please give your personal access tocken: " PAT_devops</fileline>
            <fileline lineNumber="47">            else </fileline>
            <fileline lineNumber="48">                MSG_DISPLAY "EdSMessage" "2" "FOUND"</fileline>
            <fileline lineNumber="49">        fi</fileline>
            <fileline lineNumber="50">        init_azure_devops="1"</fileline>
            <fileline lineNumber="51">    else </fileline>
            <fileline lineNumber="52">        if [[ -z ${PAT_devops} ]] </fileline>
            <fileline lineNumber="53">            then </fileline>
            <fileline lineNumber="54">                MSG_DISPLAY "check" "0" "Checking azure personal access tocken"</fileline>
            <fileline lineNumber="55">                MSG_DISPLAY "EdEMessage" "2" "NOT FOUND"</fileline>
            <fileline lineNumber="56">        fi</fileline>
            <fileline lineNumber="57">fi</fileline>
            <fileline lineNumber="58">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="59">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="60">####################################################</fileline>
            <fileline lineNumber="61">}</fileline>
            <fileline lineNumber="62" />
            <fileline lineNumber="63">function get_azure_devops_organization ()</fileline>
            <fileline lineNumber="64">{</fileline>
            <fileline lineNumber="65">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="66">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="67">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="68">######################################################</fileline>
            <fileline lineNumber="69">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="70" />
            <fileline lineNumber="71">get_azure_devops_credential</fileline>
            <fileline lineNumber="72" />
            <fileline lineNumber="73">   # Encode PAT for basic auth</fileline>
            <fileline lineNumber="74">    local encoded_pat=$(printf ":${PAT_devops}" | base64)</fileline>
            <fileline lineNumber="75" />
            <fileline lineNumber="76">    # URL for Azure DevOps organizations API</fileline>
            <fileline lineNumber="77">    local api_url="https://app.vssps.visualstudio.com/_apis/accounts?memberId=${login_devop}&amp;api-version=6.0"</fileline>
            <fileline lineNumber="78" />
            <fileline lineNumber="79">    # Call the API and get the list of organizations</fileline>
            <fileline lineNumber="80">    local response=$(curl -s -H "Authorization: Basic ${encoded_pat}" "${api_url}")</fileline>
            <fileline lineNumber="81" />
            <fileline lineNumber="82">    # Parse and print the organization names</fileline>
            <fileline lineNumber="83">    echo "List of Azure DevOps organizations:"</fileline>
            <fileline lineNumber="84">    echo "${response}" | jq -r '.value[].accountName'</fileline>
            <fileline lineNumber="85" />
            <fileline lineNumber="86" />
            <fileline lineNumber="87" />
            <fileline lineNumber="88">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="89">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="90">####################################################</fileline>
            <fileline lineNumber="91">}</fileline>
            <fileline lineNumber="92" />
            <fileline lineNumber="93">function get_all_azure_gits ()</fileline>
            <fileline lineNumber="94">{</fileline>
            <fileline lineNumber="95">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="96">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="97">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="98">######################################################</fileline>
            <fileline lineNumber="99">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="100" />
            <fileline lineNumber="101">    local organization="${1}"</fileline>
            <fileline lineNumber="102">    local project_list</fileline>
            <fileline lineNumber="103">    local repo_list</fileline>
            <fileline lineNumber="104" />
            <fileline lineNumber="105">    # Set the organization for Azure DevOps</fileline>
            <fileline lineNumber="106">    az devops configure --defaults organization=https://dev.azure.com/${organization}</fileline>
            <fileline lineNumber="107" />
            <fileline lineNumber="108">    # Get a list of all projects in the organization</fileline>
            <fileline lineNumber="109">    project_list=$(az devops project list --query "value[].name" -o tsv)</fileline>
            <fileline lineNumber="110" />
            <fileline lineNumber="111">    MSG_DISPLAY "info" "0" "List of projects in the Azure DevOps subscription:"</fileline>
            <fileline lineNumber="112">    # Loop through each project and get the list of repositories</fileline>
            <fileline lineNumber="113">    for project in ${project_list}</fileline>
            <fileline lineNumber="114">    do</fileline>
            <fileline lineNumber="115">        MSG_DISPLAY "info" "0" "    Project ${project}"</fileline>
            <fileline lineNumber="116" />
            <fileline lineNumber="117">        Set_new_directory "${Base_Dir_Scripts_GIT_devops_azure}/${organization}/${project}"</fileline>
            <fileline lineNumber="118">        # Get the list of repositories for the current project</fileline>
            <fileline lineNumber="119">        repo_list=$(az repos list --project "${project}" --query "[].name" -o tsv)</fileline>
            <fileline lineNumber="120" />
            <fileline lineNumber="121">        # Check if the project has repositories</fileline>
            <fileline lineNumber="122">        MSG_DISPLAY "check" "0" "Check if the project has repositories"</fileline>
            <fileline lineNumber="123">        if [ -z "${repo_list}" ]</fileline>
            <fileline lineNumber="124">        then</fileline>
            <fileline lineNumber="125">            MSG_DISPLAY "EdWMessage" "2" "NOT FOUND"</fileline>
            <fileline lineNumber="126">        else</fileline>
            <fileline lineNumber="127">            MSG_DISPLAY "EdSMessage" "2" "FOUND"</fileline>
            <fileline lineNumber="128">            # Loop through each repository and print its name</fileline>
            <fileline lineNumber="129">            for repo in ${repo_list}</fileline>
            <fileline lineNumber="130">            do</fileline>
            <fileline lineNumber="131">                MSG_DISPLAY "info" "0" " Repository: ${repo}"</fileline>
            <fileline lineNumber="132">                Do_get_git_clone "git@${GIT_SSH_URL}:v3/${organization}/${project}" " ${Base_Dir_Scripts_GIT_devops_azure}/${organization}/${project}" "${repo}"</fileline>
            <fileline lineNumber="133">            done</fileline>
            <fileline lineNumber="134">        fi</fileline>
            <fileline lineNumber="135">    done</fileline>
            <fileline lineNumber="136" />
            <fileline lineNumber="137" />
            <fileline lineNumber="138">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="139">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="140">####################################################</fileline>
            <fileline lineNumber="141">}</fileline>
            <fileline lineNumber="142" />
            <fileline lineNumber="143">function get_object_type ()</fileline>
            <fileline lineNumber="144">{</fileline>
            <fileline lineNumber="145">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="146">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="147">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="148">######################################################</fileline>
            <fileline lineNumber="149">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="150">    echo "Selectionnez le type d'objet Azure: "</fileline>
            <fileline lineNumber="151">    select obj in "${!AZURE_OBJECTS[@]}"</fileline>
            <fileline lineNumber="152">     do</fileline>
            <fileline lineNumber="153">        if [[ -n "$obj" ]]</fileline>
            <fileline lineNumber="154">         then</fileline>
            <fileline lineNumber="155">            BIGRAMME=${AZURE_OBJECTS[$obj]}</fileline>
            <fileline lineNumber="156">            CATEGORIE=${CATEGORIES[$obj]}</fileline>
            <fileline lineNumber="157">            break</fileline>
            <fileline lineNumber="158">        else</fileline>
            <fileline lineNumber="159">            echo "Selection invalide. Veuillez reessayer."</fileline>
            <fileline lineNumber="160">        fi</fileline>
            <fileline lineNumber="161">    done</fileline>
            <fileline lineNumber="162">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="163">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="164">####################################################</fileline>
            <fileline lineNumber="165">}</fileline>
            <fileline lineNumber="166" />
            <fileline lineNumber="167">function get_index()</fileline>
            <fileline lineNumber="168">{</fileline>
            <fileline lineNumber="169">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="170">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="171">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="172">######################################################</fileline>
            <fileline lineNumber="173">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="174">    echo "Select the index (default: 01): "</fileline>
            <fileline lineNumber="175">    select idx in {01..10}</fileline>
            <fileline lineNumber="176">     do</fileline>
            <fileline lineNumber="177">        if [[ -n "$idx" ]]</fileline>
            <fileline lineNumber="178">         then</fileline>
            <fileline lineNumber="179">            INDEX=$idx</fileline>
            <fileline lineNumber="180">            break</fileline>
            <fileline lineNumber="181">        else</fileline>
            <fileline lineNumber="182">            echo "Invalid selection. Please try again."</fileline>
            <fileline lineNumber="183">        fi</fileline>
            <fileline lineNumber="184">    done</fileline>
            <fileline lineNumber="185">    INDEX=${INDEX:-01}</fileline>
            <fileline lineNumber="186">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="187">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="188">####################################################</fileline>
            <fileline lineNumber="189">}</fileline>
            <fileline lineNumber="190" />
            <fileline lineNumber="191" />
            <fileline lineNumber="192"># Fonction pour poser des questions et obtenir les entrees utilisateur</fileline>
            <fileline lineNumber="193">function ask_questions()</fileline>
            <fileline lineNumber="194"> {</fileline>
            <fileline lineNumber="195">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="196">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="197">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="198">######################################################</fileline>
            <fileline lineNumber="199">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="200">    get_app_code</fileline>
            <fileline lineNumber="201">    gen_env_code</fileline>
            <fileline lineNumber="202">    get_localisation</fileline>
            <fileline lineNumber="203">    get_object_type</fileline>
            <fileline lineNumber="204">    get_index</fileline>
            <fileline lineNumber="205">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="206">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="207">####################################################</fileline>
            <fileline lineNumber="208">}</fileline>
            <fileline lineNumber="209" />
            <fileline lineNumber="210">LibState="OK"</fileline>
            <fileline lineNumber="211" />
        </content>
    </file>
    <file>
        <filename>./lib/azure/azure_route-table_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash</fileline>
            <fileline lineNumber="2" />
            <fileline lineNumber="3">function generate_route_config_file()</fileline>
            <fileline lineNumber="4">{</fileline>
            <fileline lineNumber="5">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="6">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="7">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="8">######################################################</fileline>
            <fileline lineNumber="9">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="10">    local route_name="${1}"</fileline>
            <fileline lineNumber="11">    local address_prefix="${2:-Notset}"</fileline>
            <fileline lineNumber="12">    local next_hop_type="${3:-Notset}"</fileline>
            <fileline lineNumber="13">    local next_hop_ip="${4:-Notset}"</fileline>
            <fileline lineNumber="14" />
            <fileline lineNumber="15">    Empty_Var_Control "${route_name}"     "route_name"      "4"</fileline>
            <fileline lineNumber="16">    Empty_Var_Control "${address_prefix}" "address_prefix"  "4"</fileline>
            <fileline lineNumber="17">    Empty_Var_Control "${next_hop_type}"  "next_hop_type"   "4"</fileline>
            <fileline lineNumber="18">    Empty_Var_Control "${next_hop_ip}"    "next_hop_ip"     "4"</fileline>
            <fileline lineNumber="19" />
            <fileline lineNumber="20" />
            <fileline lineNumber="21" />
            <fileline lineNumber="22">    # Creer le repertoire pour la route</fileline>
            <fileline lineNumber="23">    local route_dir="${route_name}"</fileline>
            <fileline lineNumber="24">    mkdir -p "${route_dir}/config"</fileline>
            <fileline lineNumber="25" />
            <fileline lineNumber="26">    # Generer le fichier de configuration</fileline>
            <fileline lineNumber="27">    local config_file="${route_dir}/config/config.sh"</fileline>
            <fileline lineNumber="28" />
            <fileline lineNumber="29">    echo "Generating configuration file: $config_file"</fileline>
            <fileline lineNumber="30" />
            <fileline lineNumber="31">    cat &lt;&lt;EOL &gt; $config_file</fileline>
            <fileline lineNumber="32">ADDRESS_PREFIX="${address_prefix}"</fileline>
            <fileline lineNumber="33">NEXT_HOP_TYPE="${next_hop_type}"</fileline>
            <fileline lineNumber="34">NEXT_HOP_IP="${next_hop_ip}"</fileline>
            <fileline lineNumber="35">EOL</fileline>
            <fileline lineNumber="36">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="37">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="38">####################################################</fileline>
            <fileline lineNumber="39">} </fileline>
            <fileline lineNumber="40" />
            <fileline lineNumber="41" />
            <fileline lineNumber="42">function process_route_table() </fileline>
            <fileline lineNumber="43">{</fileline>
            <fileline lineNumber="44">#|#usage : process_route_table $RESOURCEGROUP $ROUTETABLE</fileline>
            <fileline lineNumber="45">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="46">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="47">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="48">######################################################</fileline>
            <fileline lineNumber="49">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="50">    local rg="${1}"</fileline>
            <fileline lineNumber="51">    local rt_name="${2}"</fileline>
            <fileline lineNumber="52" />
            <fileline lineNumber="53">    echo "Processing route table: ${rt_name} in resource group: $rg"</fileline>
            <fileline lineNumber="54" />
            <fileline lineNumber="55">    # Recuperer les informations de la table de routage</fileline>
            <fileline lineNumber="56">    rt_info=$(az network route-table show --resource-group ${rg} --name ${rt_name} --query "{id:id, routes:routes}" -o json)</fileline>
            <fileline lineNumber="57" />
            <fileline lineNumber="58">    # Extraire les routes et generer des fichiers de configuration</fileline>
            <fileline lineNumber="59">    routes=$(echo "${rt_info}" | jq -c '.routes[]')</fileline>
            <fileline lineNumber="60">    for route in ${routes}</fileline>
            <fileline lineNumber="61">     do</fileline>
            <fileline lineNumber="62">        route_name="$(echo "${routes}" | jq -r '.name')"</fileline>
            <fileline lineNumber="63">        address_prefix="$(echo "${routes}" | jq -r '.addressPrefix')"</fileline>
            <fileline lineNumber="64">        next_hop_type="$(echo "${routes}" | jq -r '.nextHopType')"</fileline>
            <fileline lineNumber="65">        next_hop_ip="$(echo "${routes}" | jq -r '.nextHopIpAddress')"</fileline>
            <fileline lineNumber="66">        generate_route_config_file "${route_name}" "${address_prefix}" "${next_hop_type}" "${next_hop_ip}"</fileline>
            <fileline lineNumber="67">    done</fileline>
            <fileline lineNumber="68">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="69">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="70">####################################################</fileline>
            <fileline lineNumber="71">}</fileline>
            <fileline lineNumber="72" />
            <fileline lineNumber="73" />
            <fileline lineNumber="74">LibState="OK"</fileline>
            <fileline lineNumber="75" />
        </content>
    </file>
    <file>
        <filename>./lib/azure/azure_ipp_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 28/06/2024</fileline>
            <fileline lineNumber="4"># generic azure devops tool from CAST </fileline>
            <fileline lineNumber="5" />
            <fileline lineNumber="6">function set_vm_properties ()</fileline>
            <fileline lineNumber="7">{</fileline>
            <fileline lineNumber="8">#|# /**</fileline>
            <fileline lineNumber="9">#|#  * set_vm_properties</fileline>
            <fileline lineNumber="10">#|#  * @description Sets the properties of a VM based on provided variables.</fileline>
            <fileline lineNumber="11">#|#  * @param vm_name The name of the VM.</fileline>
            <fileline lineNumber="12">#|#  * @param resource_group The resource group of the VM.</fileline>
            <fileline lineNumber="13">#|#  * @param property_name The name of the property to set.</fileline>
            <fileline lineNumber="14">#|#  * @param property_value The value to set for the property.</fileline>
            <fileline lineNumber="15">#|#  * @usage set_vm_properties "vm_name" "resource_group" "property_name" "property_value"</fileline>
            <fileline lineNumber="16">#|#  */</fileline>
            <fileline lineNumber="17">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="18">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="19">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="20">######################################################</fileline>
            <fileline lineNumber="21">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="22" />
            <fileline lineNumber="23">local vm_name="${1}"</fileline>
            <fileline lineNumber="24">local resource_group="${2}"</fileline>
            <fileline lineNumber="25">local property_name="${3}"</fileline>
            <fileline lineNumber="26">local property_value="${4}"</fileline>
            <fileline lineNumber="27" />
            <fileline lineNumber="28">Empty_Var_Control "${vm_name}" "vm_name" "2"</fileline>
            <fileline lineNumber="29">Empty_Var_Control "${resource_group}" "resource_group" "2"</fileline>
            <fileline lineNumber="30">Empty_Var_Control "${property_name}" "property_name" "2"</fileline>
            <fileline lineNumber="31">Empty_Var_Control "${property_value}" "property_value" "2"</fileline>
            <fileline lineNumber="32" />
            <fileline lineNumber="33">az vm update --resource-group "${resource_group}" --name "${vm_name}" --set "${property_name}=${property_value}"</fileline>
            <fileline lineNumber="34" />
            <fileline lineNumber="35" />
            <fileline lineNumber="36" />
            <fileline lineNumber="37">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="38">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="39">####################################################</fileline>
            <fileline lineNumber="40">}</fileline>
            <fileline lineNumber="41" />
            <fileline lineNumber="42">function do_vm_create ()</fileline>
            <fileline lineNumber="43">{</fileline>
            <fileline lineNumber="44">#|# /**</fileline>
            <fileline lineNumber="45">#|#  * do_vm_create</fileline>
            <fileline lineNumber="46">#|#  * @description Creates a VM based on provided variables.</fileline>
            <fileline lineNumber="47">#|#  * @param vm_name The name of the VM.</fileline>
            <fileline lineNumber="48">#|#  * @param vm_template The template to use for VM creation.</fileline>
            <fileline lineNumber="49">#|#  * @usage do_vm_create "vm_name" "vm_template"</fileline>
            <fileline lineNumber="50">#|#  */</fileline>
            <fileline lineNumber="51">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="52">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="53">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="54">######################################################</fileline>
            <fileline lineNumber="55">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="56" />
            <fileline lineNumber="57">  local vm_name="${1}"</fileline>
            <fileline lineNumber="58">  local resource_group="${2}"</fileline>
            <fileline lineNumber="59">  local vm_template="${3}"</fileline>
            <fileline lineNumber="60" />
            <fileline lineNumber="61">  Empty_Var_Control "${vm_name}" "vm_name" "2"</fileline>
            <fileline lineNumber="62">  Empty_Var_Control "${resource_group}" "resource_group" "2"</fileline>
            <fileline lineNumber="63">  Empty_Var_Control "${vm_template}" "vm_template" "2"</fileline>
            <fileline lineNumber="64" />
            <fileline lineNumber="65">  az vm create --resource-group "${resource_group}" --name "${vm_name}" --image "${vm_template}"</fileline>
            <fileline lineNumber="66" />
            <fileline lineNumber="67" />
            <fileline lineNumber="68" />
            <fileline lineNumber="69">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="70">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="71">####################################################</fileline>
            <fileline lineNumber="72">}</fileline>
            <fileline lineNumber="73" />
            <fileline lineNumber="74">function do_vm_remove ()</fileline>
            <fileline lineNumber="75">{</fileline>
            <fileline lineNumber="76">#|# /**</fileline>
            <fileline lineNumber="77">#|#  * do_vm_remove</fileline>
            <fileline lineNumber="78">#|#  * @description Removes a VM based on provided variables.</fileline>
            <fileline lineNumber="79">#|#  * @param vm_name The name of the VM.</fileline>
            <fileline lineNumber="80">#|#  * @param resource_group The resource group of the VM.</fileline>
            <fileline lineNumber="81">#|#  * @usage do_vm_remove "vm_name" "resource_group"</fileline>
            <fileline lineNumber="82">#|#  */</fileline>
            <fileline lineNumber="83">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="84">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="85">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="86">######################################################</fileline>
            <fileline lineNumber="87">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="88" />
            <fileline lineNumber="89">local vm_name="${1}"</fileline>
            <fileline lineNumber="90">local resource_group="${2}"</fileline>
            <fileline lineNumber="91" />
            <fileline lineNumber="92">Empty_Var_Control "${vm_name}" "vm_name" "2"</fileline>
            <fileline lineNumber="93">Empty_Var_Control "${resource_group}" "resource_group" "2"</fileline>
            <fileline lineNumber="94" />
            <fileline lineNumber="95">az vm delete --resource-group "${resource_group}" --name "${vm_name}" --yes</fileline>
            <fileline lineNumber="96" />
            <fileline lineNumber="97">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="98">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="99">####################################################</fileline>
            <fileline lineNumber="100">}</fileline>
            <fileline lineNumber="101" />
            <fileline lineNumber="102">function do_vm_stop ()</fileline>
            <fileline lineNumber="103">{</fileline>
            <fileline lineNumber="104">#|# /**</fileline>
            <fileline lineNumber="105">#|#  * do_vm_stop</fileline>
            <fileline lineNumber="106">#|#  * @description Stops a VM based on provided variables.</fileline>
            <fileline lineNumber="107">#|#  * @param vm_name The name of the VM.</fileline>
            <fileline lineNumber="108">#|#  * @param resource_group The resource group of the VM.</fileline>
            <fileline lineNumber="109">#|#  * @usage do_vm_stop "vm_name" "resource_group"</fileline>
            <fileline lineNumber="110">#|#  */</fileline>
            <fileline lineNumber="111">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="112">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="113">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="114">######################################################</fileline>
            <fileline lineNumber="115">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="116" />
            <fileline lineNumber="117">local vm_name="${1}"</fileline>
            <fileline lineNumber="118">local resource_group="${2}"</fileline>
            <fileline lineNumber="119" />
            <fileline lineNumber="120">Empty_Var_Control "${vm_name}"        "vm_name"        "2"</fileline>
            <fileline lineNumber="121">Empty_Var_Control "${resource_group}" "resource_group" "2"</fileline>
            <fileline lineNumber="122" />
            <fileline lineNumber="123">az vm stop --resource-group "${resource_group}" --name "${vm_name}"</fileline>
            <fileline lineNumber="124" />
            <fileline lineNumber="125" />
            <fileline lineNumber="126" />
            <fileline lineNumber="127">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="128">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="129">####################################################</fileline>
            <fileline lineNumber="130">}</fileline>
            <fileline lineNumber="131" />
            <fileline lineNumber="132">function do_vm_start ()</fileline>
            <fileline lineNumber="133">{</fileline>
            <fileline lineNumber="134">#|# /**</fileline>
            <fileline lineNumber="135">#|#  * do_vm_start</fileline>
            <fileline lineNumber="136">#|#  * @description Starts a VM based on provided variables.</fileline>
            <fileline lineNumber="137">#|#  * @param vm_name The name of the VM.</fileline>
            <fileline lineNumber="138">#|#  * @param resource_group The resource group of the VM.</fileline>
            <fileline lineNumber="139">#|#  * @usage do_vm_start "vm_name" "resource_group"</fileline>
            <fileline lineNumber="140">#|#  */</fileline>
            <fileline lineNumber="141">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="142">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="143">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="144">######################################################</fileline>
            <fileline lineNumber="145">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="146" />
            <fileline lineNumber="147">local vm_name="${1}"</fileline>
            <fileline lineNumber="148">local resource_group="${2}"</fileline>
            <fileline lineNumber="149" />
            <fileline lineNumber="150">Empty_Var_Control "${vm_name}" "vm_name" "2"</fileline>
            <fileline lineNumber="151">Empty_Var_Control "${resource_group}" "resource_group" "2"</fileline>
            <fileline lineNumber="152" />
            <fileline lineNumber="153">az vm start --resource-group "${resource_group}" --name "${vm_name}"</fileline>
            <fileline lineNumber="154" />
            <fileline lineNumber="155" />
            <fileline lineNumber="156">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="157">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="158">####################################################</fileline>
            <fileline lineNumber="159">}</fileline>
            <fileline lineNumber="160" />
            <fileline lineNumber="161">function Get_vm_config ()</fileline>
            <fileline lineNumber="162">{</fileline>
            <fileline lineNumber="163">#|# /**</fileline>
            <fileline lineNumber="164">#|#  * Get_vm_config</fileline>
            <fileline lineNumber="165">#|#  * @description Retrieves the full configuration of a VM based on provided variables.</fileline>
            <fileline lineNumber="166">#|#  * @param vm_name The name of the VM.</fileline>
            <fileline lineNumber="167">#|#  * @param resource_group The resource group of the VM.</fileline>
            <fileline lineNumber="168">#|#  * @usage Get_vm_config "vm_name" "resource_group"</fileline>
            <fileline lineNumber="169">#|#  */</fileline>
            <fileline lineNumber="170">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="171">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="172">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="173">######################################################</fileline>
            <fileline lineNumber="174">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="175" />
            <fileline lineNumber="176">  local vm_name="${1}"</fileline>
            <fileline lineNumber="177">  local resource_group="${2}"</fileline>
            <fileline lineNumber="178" />
            <fileline lineNumber="179">  Empty_Var_Control "${vm_name}" "vm_name" "2"</fileline>
            <fileline lineNumber="180">  Empty_Var_Control "${resource_group}" "resource_group" "2"</fileline>
            <fileline lineNumber="181" />
            <fileline lineNumber="182">  az vm show --resource-group "${resource_group}" --name "${vm_name}"</fileline>
            <fileline lineNumber="183" />
            <fileline lineNumber="184">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="185">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="186">####################################################</fileline>
            <fileline lineNumber="187">}</fileline>
            <fileline lineNumber="188" />
            <fileline lineNumber="189">function Set_vm_config ()</fileline>
            <fileline lineNumber="190">{</fileline>
            <fileline lineNumber="191">#|# /**</fileline>
            <fileline lineNumber="192">#|#  * Set_vm_config</fileline>
            <fileline lineNumber="193">#|#  * @description Changes the configuration of a VM based on provided variables.</fileline>
            <fileline lineNumber="194">#|#  * @param vm_name The name of the VM.</fileline>
            <fileline lineNumber="195">#|#  * @param config_name The name of the configuration to set.</fileline>
            <fileline lineNumber="196">#|#  * @param config_value The value to set for the configuration.</fileline>
            <fileline lineNumber="197">#|#  * @usage Set_vm_config "vm_name" "config_name" "config_value"</fileline>
            <fileline lineNumber="198">#|#  */</fileline>
            <fileline lineNumber="199">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="200">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="201">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="202">######################################################</fileline>
            <fileline lineNumber="203">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="204" />
            <fileline lineNumber="205">local vm_name="${1}"</fileline>
            <fileline lineNumber="206">local resource_group="${2}"</fileline>
            <fileline lineNumber="207">local config_name="${3}"</fileline>
            <fileline lineNumber="208">local config_value="${4}"</fileline>
            <fileline lineNumber="209" />
            <fileline lineNumber="210">Empty_Var_Control "${vm_name}" "vm_name" "2"</fileline>
            <fileline lineNumber="211">Empty_Var_Control "${resource_group}" "resource_group" "2"</fileline>
            <fileline lineNumber="212">Empty_Var_Control "${config_name}" "config_name" "2"</fileline>
            <fileline lineNumber="213">Empty_Var_Control "${config_value}" "config_value" "2"</fileline>
            <fileline lineNumber="214" />
            <fileline lineNumber="215">az vm update --resource-group "${resource_group}" --name "${vm_name}" --set "${config_name}=${config_value}"</fileline>
            <fileline lineNumber="216" />
            <fileline lineNumber="217" />
            <fileline lineNumber="218">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="219">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="220">####################################################</fileline>
            <fileline lineNumber="221">}</fileline>
            <fileline lineNumber="222" />
            <fileline lineNumber="223" />
        </content>
    </file>
    <file>
        <filename>./lib/report_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4" />
            <fileline lineNumber="5"># INFO                                                             </fileline>
            <fileline lineNumber="6"># Subject : This library provide base functions to get system information    </fileline>
            <fileline lineNumber="7" />
            <fileline lineNumber="8">RELEASE=$(cat /proc/sys/kernel/osrelease)</fileline>
            <fileline lineNumber="9">VERSION=$(cat /proc/sys/kernel/version)</fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11">DATE=$(date +%Y-%m-%d)</fileline>
            <fileline lineNumber="12">CPU=$(sed -n -e '/model name/p' /proc/cpuinfo | awk '{print $4,$5,$6,$7,$9}')</fileline>
            <fileline lineNumber="13" />
            <fileline lineNumber="14" />
            <fileline lineNumber="15" />
            <fileline lineNumber="16">function Report_Linux_get_os_release</fileline>
            <fileline lineNumber="17">{</fileline>
            <fileline lineNumber="18">#|# Var to set  : None</fileline>
            <fileline lineNumber="19">#|#</fileline>
            <fileline lineNumber="20">#|# Base usage  : Report_Linux_get_os_release</fileline>
            <fileline lineNumber="21">#|#</fileline>
            <fileline lineNumber="22">#|# Description : This function is used to get kernel information about installed os</fileline>
            <fileline lineNumber="23">#|#</fileline>
            <fileline lineNumber="24">#|# Send Back   : this function returne three vars GLOBALE_OS_TYPE , GLOBALE_OS_RELEASE , GLOBALE_OS_VERSION</fileline>
            <fileline lineNumber="25">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="26">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="27">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="28">######################################################</fileline>
            <fileline lineNumber="29">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="30" />
            <fileline lineNumber="31" />
            <fileline lineNumber="32">RLGOSR_TYPE="$(cat /proc/sys/kernel/ostype)"</fileline>
            <fileline lineNumber="33">RLGOSR_RELEASE="$(cat /proc/sys/kernel/osrelease)"</fileline>
            <fileline lineNumber="34">RLGOSR_VERSION="$(cat /proc/sys/kernel/version | awk  '{ print "\\" $0 }' )"</fileline>
            <fileline lineNumber="35" />
            <fileline lineNumber="36">MSG_DISPLAY "info" "1" "Operating sytem type : [ ${RLGOSR_TYPE}] "</fileline>
            <fileline lineNumber="37">MSG_DISPLAY "info" "1" "Operating sytem release : [ ${RLGOSR_RELEASE} ] "</fileline>
            <fileline lineNumber="38">MSG_DISPLAY "info" "1" "Operating sytem version : [ ${RLGOSR_VERSION} ] "</fileline>
            <fileline lineNumber="39" />
            <fileline lineNumber="40">GLOBALE_OS_TYPE="${RLGOSR_TYPE}"</fileline>
            <fileline lineNumber="41">GLOBALE_OS_RELEASE="${RLGOSR_RELEASE}"</fileline>
            <fileline lineNumber="42">GLOBALE_OS_VERSION="${RLGOSR_VERSION}"</fileline>
            <fileline lineNumber="43" />
            <fileline lineNumber="44">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="45">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="46">####################################################</fileline>
            <fileline lineNumber="47">}</fileline>
            <fileline lineNumber="48" />
            <fileline lineNumber="49" />
            <fileline lineNumber="50">function Report_Linux_get_os_Kernel_params</fileline>
            <fileline lineNumber="51">{</fileline>
            <fileline lineNumber="52">#|# Var to set  : None</fileline>
            <fileline lineNumber="53">#|#</fileline>
            <fileline lineNumber="54">#|# Base usage  : Report_Linux_get_os_Kernel_params</fileline>
            <fileline lineNumber="55">#|#</fileline>
            <fileline lineNumber="56">#|# Description : This function is used to get kernel information about installed os</fileline>
            <fileline lineNumber="57">#|#</fileline>
            <fileline lineNumber="58">#|# Send Back   : this function returne three vars GLOBALE_OS_TYPE , GLOBALE_OS_RELEASE , GLOBALE_OS_VERSION</fileline>
            <fileline lineNumber="59">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="60">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="61">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="62">######################################################</fileline>
            <fileline lineNumber="63">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="64" />
            <fileline lineNumber="65" />
            <fileline lineNumber="66">RLGOKP_SHM_MIN="$(cat /proc/sys/kernel/shmmni)"</fileline>
            <fileline lineNumber="67">RLGOKP_SHM_MAX="$(cat /proc/sys/kernel/shmmax)"</fileline>
            <fileline lineNumber="68">RLGOKP_SHM_ALL="$(cat /proc/sys/kernel/shmall)"</fileline>
            <fileline lineNumber="69" />
            <fileline lineNumber="70">MSG_DISPLAY "info" "1" "Max shared memory pages              : [ ${RLGOKP_SHM_ALL} ] "</fileline>
            <fileline lineNumber="71">MSG_DISPLAY "info" "1" "Max size of shared memory Segment    : [ ${RLGOKP_SHM_MAX} ] "</fileline>
            <fileline lineNumber="72">MSG_DISPLAY "info" "1" "Max number of shared memory segments : [ ${RLGOKP_SHM_MIN} ] "</fileline>
            <fileline lineNumber="73" />
            <fileline lineNumber="74">GLOBALE_SHM_MIN="${RLGOKP_SHM_MIN}"</fileline>
            <fileline lineNumber="75">GLOBALE_SHM_MAX="${RLGOKP_SHM_MAX}"</fileline>
            <fileline lineNumber="76">GLOBALE_SHM_ALL="${RLGOKP_SHM_ALL}"</fileline>
            <fileline lineNumber="77" />
            <fileline lineNumber="78">set -A RLGOKP_sem_all_param $( cat /proc/sys/kernel/sem )</fileline>
            <fileline lineNumber="79" />
            <fileline lineNumber="80">GLOBALE_sem_SEMMSL="${RLGOKP_sem_all_param[0]}"</fileline>
            <fileline lineNumber="81">GLOBALE_sem_SEMOPM="${RLGOKP_sem_all_param[1]}"</fileline>
            <fileline lineNumber="82">GLOBALE_sem_SEMMNS="${RLGOKP_sem_all_param[2]}"</fileline>
            <fileline lineNumber="83">GLOBALE_sem_SEMMNI="${RLGOKP_sem_all_param[3]}"</fileline>
            <fileline lineNumber="84" />
            <fileline lineNumber="85">MSG_DISPLAY "info" "1" "Maximum number of semaphores in a sempahore set : [ ${GLOBALE_sem_SEMMSL} ] "</fileline>
            <fileline lineNumber="86">MSG_DISPLAY "info" "1" "Maximum number of sempahores in the system : [ ${GLOBALE_sem_SEMOPM} ] "</fileline>
            <fileline lineNumber="87">MSG_DISPLAY "info" "1" "Maximum number of operations in a single Start of changesemopEnd of change call : [ ${GLOBALE_sem_SEMMNS} ] "</fileline>
            <fileline lineNumber="88">MSG_DISPLAY "info" "1" "Maximum number of sempahore sets : [ ${GLOBALE_sem_SEMMNI} ] "</fileline>
            <fileline lineNumber="89" />
            <fileline lineNumber="90">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="91">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="92">####################################################</fileline>
            <fileline lineNumber="93">}</fileline>
            <fileline lineNumber="94" />
            <fileline lineNumber="95">function Report_Linux_get_os_IPV4_status</fileline>
            <fileline lineNumber="96">{</fileline>
            <fileline lineNumber="97">#|# Var to set  : None</fileline>
            <fileline lineNumber="98">#|#</fileline>
            <fileline lineNumber="99">#|# Base usage  : Report_Linux_get_os_Kernel_params</fileline>
            <fileline lineNumber="100">#|#</fileline>
            <fileline lineNumber="101">#|# Description : This function is used to get kernel information about installed os</fileline>
            <fileline lineNumber="102">#|#</fileline>
            <fileline lineNumber="103">#|# Send Back   : this function returne three vars GLOBALE_OS_TYPE , GLOBALE_OS_RELEASE , GLOBALE_OS_VERSION</fileline>
            <fileline lineNumber="104">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="105">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="106">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="107">######################################################</fileline>
            <fileline lineNumber="108">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="109" />
            <fileline lineNumber="110" />
            <fileline lineNumber="111">RIS_IPV4_Base_dir="/proc/sys/net/ipv4/"</fileline>
            <fileline lineNumber="112" />
            <fileline lineNumber="113">if [ "$( cat ${RIS_IPV4_Base_dir}/ip_forward)" = "1" ]</fileline>
            <fileline lineNumber="114">   then</fileline>
            <fileline lineNumber="115">   	   RIS_IPV4_forward="Enabled"</fileline>
            <fileline lineNumber="116">   else</fileline>
            <fileline lineNumber="117">       RIS_IPV4_forward="Disabled"</fileline>
            <fileline lineNumber="118">fi</fileline>
            <fileline lineNumber="119">GLOBALE_IPV4_Forward="${RIS_IPV4_forward}"</fileline>
            <fileline lineNumber="120">MSG_DISPLAY "info" "1" "Forward Packets between interfaces  : [ ${GLOBALE_IPV4_Forward} ] "</fileline>
            <fileline lineNumber="121" />
            <fileline lineNumber="122">GLOBALE_IPV4_TTL="$( cat ${RIS_IPV4_Base_dir}/ip_default_ttl)"</fileline>
            <fileline lineNumber="123">MSG_DISPLAY "info" "1" "Forward Packets between interfaces  : [ ${GLOBALE_IPV4_TTL} ] "</fileline>
            <fileline lineNumber="124" />
            <fileline lineNumber="125">if [ "$( cat ${RIS_IPV4_Base_dir}/tcp_abort_on_overflow)" = "1" ]</fileline>
            <fileline lineNumber="126">   then</fileline>
            <fileline lineNumber="127">       RIS_IPV4_abort_on_overflow="Enabled"</fileline>
            <fileline lineNumber="128">   else</fileline>
            <fileline lineNumber="129">       RIS_IPV4_abort_on_overflow="Disabled"</fileline>
            <fileline lineNumber="130">fi</fileline>
            <fileline lineNumber="131">GLOBALE_IPV4_abort_on_overflow=${RIS_IPV4_forward}</fileline>
            <fileline lineNumber="132">MSG_DISPLAY "info" "1" "Tcp connexion abort on overflow   : [ ${GLOBALE_IPV4_abort_on_overflow} ] "</fileline>
            <fileline lineNumber="133" />
            <fileline lineNumber="134">if [ "$( cat ${RIS_IPV4_Base_dir}/tcp_tw_recycle)" = "1" ]</fileline>
            <fileline lineNumber="135">   then</fileline>
            <fileline lineNumber="136">       RIS_IPV4_tcp_tw_recycle="Enabled"</fileline>
            <fileline lineNumber="137">   else</fileline>
            <fileline lineNumber="138">       RIS_IPV4_tcp_tw_recycle="Disabled"</fileline>
            <fileline lineNumber="139">fi</fileline>
            <fileline lineNumber="140">GLOBALE_IPV4_tcp_tw_recycle=${RIS_IPV4_forward}</fileline>
            <fileline lineNumber="141">MSG_DISPLAY "info" "1" "Fast recycling TIME-WAIT sockets  : [ ${GLOBALE_IPV4_tcp_tw_recycle} ] "</fileline>
            <fileline lineNumber="142" />
            <fileline lineNumber="143">if [ "$( cat ${RIS_IPV4_Base_dir}/ip_dynaddr)" = "1" ]</fileline>
            <fileline lineNumber="144">   then</fileline>
            <fileline lineNumber="145">       RIS_IPV4_ip_dynaddr="Enabled"</fileline>
            <fileline lineNumber="146">   else</fileline>
            <fileline lineNumber="147">       RIS_IPV4_ip_dynaddr="Disabled"</fileline>
            <fileline lineNumber="148">fi</fileline>
            <fileline lineNumber="149">GLOBALE_IPV4_ip_dynaddr=${RIS_IPV4_ip_dynaddr}</fileline>
            <fileline lineNumber="150">MSG_DISPLAY "info" "1" "Tcp connexion abort on overflow   : [ ${GLOBALE_IPV4_ip_dynaddr} ] "</fileline>
            <fileline lineNumber="151" />
            <fileline lineNumber="152">if [ "$( cat ${RIS_IPV4_Base_dir}/ip_dynaddr)" = "1" ]</fileline>
            <fileline lineNumber="153">   then</fileline>
            <fileline lineNumber="154">       RIS_IPV4_ip_dynaddr="Enabled"</fileline>
            <fileline lineNumber="155">   else</fileline>
            <fileline lineNumber="156">       RIS_IPV4_ip_dynaddr="Disabled"</fileline>
            <fileline lineNumber="157">fi</fileline>
            <fileline lineNumber="158">GLOBALE_IPV4_ip_dynaddr=${RIS_IPV4_ip_dynaddr}</fileline>
            <fileline lineNumber="159">MSG_DISPLAY "info" "1" "Support for dynamic addresses  : [ ${GLOBALE_IPV4_ip_dynaddr} ] "</fileline>
            <fileline lineNumber="160" />
            <fileline lineNumber="161">if [ "$( cat ${RIS_IPV4_Base_dir}/icmp_echo_ignore_all)" = "1" ]</fileline>
            <fileline lineNumber="162">   then</fileline>
            <fileline lineNumber="163">       RIS_IPV4_icmp_echo_ignore_all="Enabled"</fileline>
            <fileline lineNumber="164">   else</fileline>
            <fileline lineNumber="165">       RIS_IPV4_icmp_echo_ignore_all="Disabled"</fileline>
            <fileline lineNumber="166">fi</fileline>
            <fileline lineNumber="167">GLOBALE_IPV4_icmp_echo_ignore_all=${RIS_IPV4_icmp_echo_ignore_all}</fileline>
            <fileline lineNumber="168">MSG_DISPLAY "info" "1" "Ignore all icmp echo  : [ ${GLOBALE_IPV4_icmp_echo_ignore_all} ] "</fileline>
            <fileline lineNumber="169" />
            <fileline lineNumber="170">if [ "$( cat ${RIS_IPV4_Base_dir}/icmp_echo_ignore_broadcasts)" = "1" ]</fileline>
            <fileline lineNumber="171">   then</fileline>
            <fileline lineNumber="172">       RIS_IPV4_icmp_echo_ignore_broadcasts="Enabled"</fileline>
            <fileline lineNumber="173">   else</fileline>
            <fileline lineNumber="174">       RIS_IPV4_icmp_echo_ignore_broadcasts="Disabled"</fileline>
            <fileline lineNumber="175">fi</fileline>
            <fileline lineNumber="176">GLOBALE_IPV4_icmp_echo_ignore_broadcasts=${RIS_IPV4_icmp_echo_ignore_broadcasts}</fileline>
            <fileline lineNumber="177">MSG_DISPLAY "info" "1" "Ignore all icmp echo on multicast : [ ${GLOBALE_IPV4_icmp_echo_ignore_broadcasts} ] "</fileline>
            <fileline lineNumber="178" />
            <fileline lineNumber="179" />
            <fileline lineNumber="180">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="181">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="182">####################################################</fileline>
            <fileline lineNumber="183">}</fileline>
            <fileline lineNumber="184" />
            <fileline lineNumber="185">function Repport_FS_State_ONE_Server</fileline>
            <fileline lineNumber="186">{</fileline>
            <fileline lineNumber="187">#|# Var to set  :</fileline>
            <fileline lineNumber="188">#|# RFSOS_PF_Name : Use this var to set plate forme name to use</fileline>
            <fileline lineNumber="189">#|#             : Use this var to set</fileline>
            <fileline lineNumber="190">#|# ${1}        : Use this var to set [ RFSOS_PF_Name ]</fileline>
            <fileline lineNumber="191">#|# ${2}        : Use this var to set [  ]</fileline>
            <fileline lineNumber="192">#|#</fileline>
            <fileline lineNumber="193">#|# Base usage  : None</fileline>
            <fileline lineNumber="194">#|#</fileline>
            <fileline lineNumber="195">#|# Description : None</fileline>
            <fileline lineNumber="196">#|#</fileline>
            <fileline lineNumber="197">#|# Send Back   : None</fileline>
            <fileline lineNumber="198">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="199">Function_Name="State_ONE_Server"</fileline>
            <fileline lineNumber="200">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="201">######################################################</fileline>
            <fileline lineNumber="202">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="203" />
            <fileline lineNumber="204" />
            <fileline lineNumber="205">CURENT_WORK_DIR=`echo ${Current_PF} | awk -F\/ '{ print $NF }'`</fileline>
            <fileline lineNumber="206">MSG_DISPLAY "debug" "0" "Current CURENT WORK DIR : [ ${CURENT_WORK_DIR} ] "</fileline>
            <fileline lineNumber="207" />
            <fileline lineNumber="208">CURRENT_GENERATE_DIR=${Server_Stat_Directory}/${CURENT_WORK_DIR}</fileline>
            <fileline lineNumber="209">MSG_DISPLAY "debug" "0" "Current CURRENT GENERATE DIR : [ ${CURRENT_GENERATE_DIR} ] "</fileline>
            <fileline lineNumber="210" />
            <fileline lineNumber="211">Current_Generated_Report="${CURRENT_GENERATE_DIR}/${current_server}.HTML"</fileline>
            <fileline lineNumber="212">Set_new_directory "${CURRENT_GENERATE_DIR}"</fileline>
            <fileline lineNumber="213" />
            <fileline lineNumber="214">Full_Server_File_PATH="${Current_PF}/${current_server}"</fileline>
            <fileline lineNumber="215">MSG_DISPLAY "debug" "0" "Current Full Server File PATH to Check : [ ${Full_Server_File_PATH} ] "</fileline>
            <fileline lineNumber="216" />
            <fileline lineNumber="217">HTML_File_to_export="${Server_Stat_Directory}/${CURENT_WORK_DIR}/${current_server}.html"</fileline>
            <fileline lineNumber="218">Server_Name_To_report="${current_server}"</fileline>
            <fileline lineNumber="219">HEAD_REPORT</fileline>
            <fileline lineNumber="220">TABLE_HEAD_REPORT_FS</fileline>
            <fileline lineNumber="221" />
            <fileline lineNumber="222">for Lines in $( cat ${Full_Server_File_PATH} )</fileline>
            <fileline lineNumber="223">    do</fileline>
            <fileline lineNumber="224">       MSG_DISPLAY "debug" "0" "Current lines : [ ${Lines} ] "</fileline>
            <fileline lineNumber="225" />
            <fileline lineNumber="226">       Device_Name_To_State=$( echo ${Lines} | awk -F\| '{ print $1 }' )</fileline>
            <fileline lineNumber="227">       MSG_DISPLAY "debug" "0" "Current Device Name To State : [ ${Device_Name_To_State} ] "</fileline>
            <fileline lineNumber="228" />
            <fileline lineNumber="229">       Device_size_To_state="$( echo ${Lines} | awk -F\| '{ print $2 }' )"</fileline>
            <fileline lineNumber="230">       MSG_DISPLAY "debug" "0" "Current Device size To state : [ ${Device_size_To_state} ] "</fileline>
            <fileline lineNumber="231" />
            <fileline lineNumber="232">       Device_OcSi_To_State="$( echo ${Lines} | awk -F\| '{ print $3 }' )"</fileline>
            <fileline lineNumber="233">       MSG_DISPLAY "debug" "0" "Current Device Name To State : [ ${Device_Name_To_State} ] "</fileline>
            <fileline lineNumber="234" />
            <fileline lineNumber="235">       Device_Free_To_State="$( echo ${Lines} | awk -F\| '{ print $4 }' )"</fileline>
            <fileline lineNumber="236">       MSG_DISPLAY "debug" "0" "Current Device Free Space To State : [ ${Device_Free_To_State} ] "</fileline>
            <fileline lineNumber="237" />
            <fileline lineNumber="238">       Device_perc_To_State=$( echo ${Lines} | awk -F\| '{ print $5 }' )</fileline>
            <fileline lineNumber="239">       MSG_DISPLAY "debug" "0" "Current Device percent used To State : [ ${Device_perc_To_State} ] "</fileline>
            <fileline lineNumber="240" />
            <fileline lineNumber="241">       Device_Mnts_To_State=$( echo ${Lines} | awk -F\| '{ print $6 }' )</fileline>
            <fileline lineNumber="242">       MSG_DISPLAY "debug" "0" "Current Device Mount point To State : [ ${Device_Mnts_To_State} ] "</fileline>
            <fileline lineNumber="243" />
            <fileline lineNumber="244">       Percent_Occuped=$( echo ${Device_perc_To_State}  | awk -F% '{ print $1 }' )</fileline>
            <fileline lineNumber="245">       MSG_DISPLAY "debug" "0" "Current Percent_Occuped : [ ${Percent_Occuped} ] "</fileline>
            <fileline lineNumber="246">       if [ "${Percent_Occuped}" -gt "85" ]</fileline>
            <fileline lineNumber="247">          then</fileline>
            <fileline lineNumber="248">               if [ "${Percent_Occuped}" -gt "95" ]</fileline>
            <fileline lineNumber="249">                  then</fileline>
            <fileline lineNumber="250">                     State_Case="ERROR"</fileline>
            <fileline lineNumber="251">                     MSG_DISPLAY "info" "1" "ERROR File System ${Device_Name_To_State} mounted on ${Device_Mnts_To_State} is at  : ${Percent_Occuped}"</fileline>
            <fileline lineNumber="252">                     Error_HTML_REPORT_FS</fileline>
            <fileline lineNumber="253">                 else</fileline>
            <fileline lineNumber="254">                     State_Case="WARNING"</fileline>
            <fileline lineNumber="255">                     MSG_DISPLAY "info" "1" "Warning File System ${Device_Name_To_State} mounted on ${Device_Mnts_To_State} is at  : ${Percent_Occuped}"</fileline>
            <fileline lineNumber="256">                     Warn_HTML_REPORT_FS</fileline>
            <fileline lineNumber="257">              fi</fileline>
            <fileline lineNumber="258">          else</fileline>
            <fileline lineNumber="259">              State_Case="GOOD"</fileline>
            <fileline lineNumber="260">              MSG_DISPLAY "info" "1" "File System ${Device_Name_To_State} mounted on ${Device_Mnts_To_State} is at  : ${Percent_Occuped}"</fileline>
            <fileline lineNumber="261">              HTML_Good_Html_Report_FS</fileline>
            <fileline lineNumber="262">              meta_Report_GENERATE_INFS</fileline>
            <fileline lineNumber="263">       fi</fileline>
            <fileline lineNumber="264">done</fileline>
            <fileline lineNumber="265">TABLE_CLOSE_REPORT_FS</fileline>
            <fileline lineNumber="266">footer_report_gen</fileline>
            <fileline lineNumber="267">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="268">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="269">####################################################</fileline>
            <fileline lineNumber="270">}</fileline>
            <fileline lineNumber="271" />
            <fileline lineNumber="272">function Dummy_function</fileline>
            <fileline lineNumber="273">{</fileline>
            <fileline lineNumber="274">#|# Var to set  : None</fileline>
            <fileline lineNumber="275">#|#             : Use this var to set</fileline>
            <fileline lineNumber="276">#|#             : Use this var to set</fileline>
            <fileline lineNumber="277">#|# ${1}        : Use this var to set [  ]</fileline>
            <fileline lineNumber="278">#|# ${2}        : Use this var to set [  ]</fileline>
            <fileline lineNumber="279">#|#</fileline>
            <fileline lineNumber="280">#|# Base usage  : None</fileline>
            <fileline lineNumber="281">#|#</fileline>
            <fileline lineNumber="282">#|# Description : None</fileline>
            <fileline lineNumber="283">#|#</fileline>
            <fileline lineNumber="284">#|# Send Back   : None</fileline>
            <fileline lineNumber="285">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="286">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="287">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="288">######################################################</fileline>
            <fileline lineNumber="289">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="290" />
            <fileline lineNumber="291" />
            <fileline lineNumber="292">MSG_DISPLAY "info" "1" "this is a model function"</fileline>
            <fileline lineNumber="293" />
            <fileline lineNumber="294">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="295">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="296">####################################################</fileline>
            <fileline lineNumber="297">}</fileline>
            <fileline lineNumber="298" />
            <fileline lineNumber="299"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/internet_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># generic # Subject : This lib is used to provide any function about web and download   #</fileline>
            <fileline lineNumber="5" />
            <fileline lineNumber="6"># INFO</fileline>
            <fileline lineNumber="7" />
            <fileline lineNumber="8">############################</fileline>
            <fileline lineNumber="9" />
            <fileline lineNumber="10" />
            <fileline lineNumber="11" />
            <fileline lineNumber="12">function Internet_Http_Get</fileline>
            <fileline lineNumber="13">{</fileline>
            <fileline lineNumber="14">#|# Base_Param_URL          : Use this var to set the base URL tu use for WGET</fileline>
            <fileline lineNumber="15">#|# Base_Param_File_To_Get  : Use this var to set the file to download with WGET</fileline>
            <fileline lineNumber="16">#|# PWD_Recept_PKG           : Use this var to set the directory for reception of file downloaded</fileline>
            <fileline lineNumber="17">#|# Base use :</fileline>
            <fileline lineNumber="18">#|#           Internet_Http_Get "My_pkg_URL" "My_pkg" "My_pkg_repository"</fileline>
            <fileline lineNumber="19">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="20">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="21">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="22">######################################################</fileline>
            <fileline lineNumber="23">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="24" />
            <fileline lineNumber="25" />
            <fileline lineNumber="26" />
            <fileline lineNumber="27">local Base_Param_URL="${1}"</fileline>
            <fileline lineNumber="28">local Base_Param_File_To_Get="${2}"</fileline>
            <fileline lineNumber="29">local PWD_Recept_PKG="${3}"</fileline>
            <fileline lineNumber="30">local Base_Url_Parameter="${4}"</fileline>
            <fileline lineNumber="31" />
            <fileline lineNumber="32" />
            <fileline lineNumber="33">MSG_DISPLAY "debug" "0" "Recept Directory is set to  : [ ${PWD_Recept_PKG} ] "</fileline>
            <fileline lineNumber="34">Set_new_directory "${PWD_Recept_PKG}"</fileline>
            <fileline lineNumber="35" />
            <fileline lineNumber="36">MSG_DISPLAY "check" "0" "downloading [ ${Base_Param_URL}/${Base_Param_File_To_Get}${Base_Url_Parameter} ] "</fileline>
            <fileline lineNumber="37">if [ -e "${PWD_Recept_PKG}/${Base_Param_File_To_Get}" ]</fileline>
            <fileline lineNumber="38">   then</fileline>
            <fileline lineNumber="39">  	   MSG_DISPLAY "EdSMessage" "1" "Allready Downloaded" </fileline>
            <fileline lineNumber="40">   else</fileline>
            <fileline lineNumber="41">        DLW_Final_URL="${Base_Param_URL}/${Base_Param_File_To_Get}${Base_Url_Parameter}"</fileline>
            <fileline lineNumber="42">        MSG_DISPLAY "debug" "0" "DLW_Final_URL is set to   : [ ${DLW_Final_URL} ] "</fileline>
            <fileline lineNumber="43">        ${Global_Tool_wget_bin}  ${WGET_OPTIONS} --directory-prefix=${PWD_Recept_PKG} ${DLW_Final_URL}</fileline>
            <fileline lineNumber="44">        if [ ! -e "${PWD_Recept_PKG}/${Base_Param_File_To_Get}" ]</fileline>
            <fileline lineNumber="45">           then</fileline>
            <fileline lineNumber="46">               MSG_DISPLAY "EdEMessage" "1" "Failled"  </fileline>
            <fileline lineNumber="47">           else</fileline>
            <fileline lineNumber="48">               MSG_DISPLAY "EdSMessage" "1" "Success"  </fileline>
            <fileline lineNumber="49">         fi</fileline>
            <fileline lineNumber="50">  fi</fileline>
            <fileline lineNumber="51" />
            <fileline lineNumber="52">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="53">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="54">####################################################</fileline>
            <fileline lineNumber="55">}</fileline>
            <fileline lineNumber="56" />
            <fileline lineNumber="57">LibState="OK"</fileline>
        </content>
    </file>
    <file>
        <filename>./lib/system_base/DateTime_lib.sh</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># DateTime.lib                                                                #</fileline>
            <fileline lineNumber="3"># Creation Date : 28/12/2022                                                  #</fileline>
            <fileline lineNumber="4"># Support mail  : doraken@doraken.net                                         #</fileline>
            <fileline lineNumber="5"># Author        : Arnaud Crampet                                              #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7"># Subject : This library provide base element to manage Date and Time Fomatin # </fileline>
            <fileline lineNumber="8">#           Vars                                                              #</fileline>
            <fileline lineNumber="9">###############################################################################</fileline>
            <fileline lineNumber="10">####</fileline>
            <fileline lineNumber="11"># INFO</fileline>
            <fileline lineNumber="12" />
            <fileline lineNumber="13">GLB_USE_DATE="$(date +%Y_%m_%d-%HH_%MM)"</fileline>
            <fileline lineNumber="14">GLB_HORODATE="$(date +%Y_%m_%d-%HH_%MM)"</fileline>
            <fileline lineNumber="15">GLB_DATEDAY="$(date +%Y_%m_%d)"</fileline>
            <fileline lineNumber="16" />
            <fileline lineNumber="17">function Get_horodate ()</fileline>
            <fileline lineNumber="18">{</fileline>
            <fileline lineNumber="19">    #|# Update GLB_HORODATE with the current date and time</fileline>
            <fileline lineNumber="20">    #|# Usage: </fileline>
            <fileline lineNumber="21">    #|#   Get_horodate</fileline>
            <fileline lineNumber="22">    ############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="23">    Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="24">    Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="25">    ######################################################</fileline>
            <fileline lineNumber="26" />
            <fileline lineNumber="27">    GLB_HORODATE="$(date +%Y_%m_%d-%H_%M)"</fileline>
            <fileline lineNumber="28" />
            <fileline lineNumber="29">    ############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="30">    Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="31">    ####################################################</fileline>
            <fileline lineNumber="32">}</fileline>
            <fileline lineNumber="33" />
            <fileline lineNumber="34">function Get_dateDay()</fileline>
            <fileline lineNumber="35">{</fileline>
            <fileline lineNumber="36">    #|# Update GLB_DATEDAY with the current date and time</fileline>
            <fileline lineNumber="37">    #|# Usage: </fileline>
            <fileline lineNumber="38">    #|#   Get_dateDay</fileline>
            <fileline lineNumber="39">    ############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="40">    Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="41">    Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="42">    ######################################################</fileline>
            <fileline lineNumber="43" />
            <fileline lineNumber="44">    GLB_DATEDAY="$(date +%Y_%m_%d)"</fileline>
            <fileline lineNumber="45" />
            <fileline lineNumber="46">    ############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="47">    Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="48">    ####################################################</fileline>
            <fileline lineNumber="49">}</fileline>
            <fileline lineNumber="50" />
            <fileline lineNumber="51">function Get_UseDate()</fileline>
            <fileline lineNumber="52">{</fileline>
            <fileline lineNumber="53">    #|# Update GLB_USE_DATE with the current date and time</fileline>
            <fileline lineNumber="54">    #|# Usage: </fileline>
            <fileline lineNumber="55">    #|#   Get_UseDate</fileline>
            <fileline lineNumber="56">    ############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="57">    Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="58">    Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="59">    ######################################################</fileline>
            <fileline lineNumber="60" />
            <fileline lineNumber="61">    GLB_USE_DATE="$(date +%Y_%m_%d-%H_%M)"</fileline>
            <fileline lineNumber="62" />
            <fileline lineNumber="63">    ############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="64">    Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="65">    ####################################################</fileline>
            <fileline lineNumber="66">}</fileline>
            <fileline lineNumber="67" />
            <fileline lineNumber="68">LibState="OK"</fileline>
            <fileline lineNumber="69" />
        </content>
    </file>
    <file>
        <filename>./lib/system_base/services_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                      #</fileline>
            <fileline lineNumber="5"># Subject : This library provide base element to manage service under linux   #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO </fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11">function Do_service_enable_bootstart</fileline>
            <fileline lineNumber="12">{</fileline>
            <fileline lineNumber="13">#|# Var to set  : </fileline>
            <fileline lineNumber="14">#|# AcivateServiceName  : Use this var to set service name to activate at boot time</fileline>
            <fileline lineNumber="15">#|# ${1}        : Use this var to set [ AcivateServiceName ]                      </fileline>
            <fileline lineNumber="16">#|#</fileline>
            <fileline lineNumber="17">#|# Base usage  : Do_service_enable_bootstart "ServiceNAme"</fileline>
            <fileline lineNumber="18">#|#</fileline>
            <fileline lineNumber="19">#|# Description : This function is used to activate service at boot time.</fileline>
            <fileline lineNumber="20">#|#</fileline>
            <fileline lineNumber="21">#|# Send Back   : None</fileline>
            <fileline lineNumber="22">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="23">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="24">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="25">######################################################</fileline>
            <fileline lineNumber="26">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="27" />
            <fileline lineNumber="28">local AcivateServiceName="${1}"</fileline>
            <fileline lineNumber="29">Empty_Var_Control "${AcivateServiceName}" "AcivateServiceName"  "4" "Service name is a mandatory parameter "</fileline>
            <fileline lineNumber="30" />
            <fileline lineNumber="31" />
            <fileline lineNumber="32">Test_service_ststus ${AcivateServiceName}</fileline>
            <fileline lineNumber="33" />
            <fileline lineNumber="34">if [ ${ServiceStatus} = "enabled" ] </fileline>
            <fileline lineNumber="35">	then </fileline>
            <fileline lineNumber="36">		MSG_DISPLAY "info" "1" "Service ${AcivateServiceName} is already : [ ${ServiceStatus} ]"</fileline>
            <fileline lineNumber="37">	else </fileline>
            <fileline lineNumber="38">		systemctl enable ${AcivateServiceName}	</fileline>
            <fileline lineNumber="39">		CTRL_Result_func "${?}" "Activation of service : ${AcivateServiceName}" " [ can't Actiate ] " "2" "" ""</fileline>
            <fileline lineNumber="40">		Test_service_ststus ${AcivateServiceName}</fileline>
            <fileline lineNumber="41">		if [ ${ServiceStatus} = "enabled" ] </fileline>
            <fileline lineNumber="42">			then </fileline>
            <fileline lineNumber="43">				MSG_DISPLAY "info" "1" "Service ${AcivateServiceName} is succesfully : [ ${ServiceStatus} ]"</fileline>
            <fileline lineNumber="44">			else </fileline>
            <fileline lineNumber="45">				MSG_DISPLAY "EdEMessage" "1" "Service ${AcivateServiceName} can t be enabled : [ ${ServiceStatus} ]"</fileline>
            <fileline lineNumber="46">		fi </fileline>
            <fileline lineNumber="47">fi </fileline>
            <fileline lineNumber="48" />
            <fileline lineNumber="49" />
            <fileline lineNumber="50">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="51">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="52">#################################################### </fileline>
            <fileline lineNumber="53">}</fileline>
            <fileline lineNumber="54" />
            <fileline lineNumber="55">function Do_service_disable_bootstart</fileline>
            <fileline lineNumber="56">{</fileline>
            <fileline lineNumber="57">#|# Var to set  : </fileline>
            <fileline lineNumber="58">#|# AcivateServiceName  : Use this var to set service name to activate at boot time</fileline>
            <fileline lineNumber="59">#|# ${1}        : Use this var to set [ AcivateServiceName ]                      </fileline>
            <fileline lineNumber="60">#|#</fileline>
            <fileline lineNumber="61">#|# Base usage  : Do_service_disable_bootstart "ServiceNAme"</fileline>
            <fileline lineNumber="62">#|#</fileline>
            <fileline lineNumber="63">#|# Description : This function is used to activate service at boot time.</fileline>
            <fileline lineNumber="64">#|#</fileline>
            <fileline lineNumber="65">#|# Send Back   : None</fileline>
            <fileline lineNumber="66">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="67">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="68">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="69">######################################################</fileline>
            <fileline lineNumber="70">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="71" />
            <fileline lineNumber="72">local AcivateServiceName="${1}"</fileline>
            <fileline lineNumber="73">Empty_Var_Control "${AcivateServiceName}" "AcivateServiceName"  "4" "Service name is a mandatory parameter "</fileline>
            <fileline lineNumber="74" />
            <fileline lineNumber="75" />
            <fileline lineNumber="76">Test_service_ststus ${AcivateServiceName}</fileline>
            <fileline lineNumber="77" />
            <fileline lineNumber="78">if [ ${ServiceStatus} = "disabled" ] </fileline>
            <fileline lineNumber="79">	then </fileline>
            <fileline lineNumber="80">		MSG_DISPLAY "info" "1" "Service ${AcivateServiceName} is already : [ ${ServiceStatus} ]"</fileline>
            <fileline lineNumber="81">	else </fileline>
            <fileline lineNumber="82">		systemctl disable ${AcivateServiceName}	</fileline>
            <fileline lineNumber="83">		CTRL_Result_func "${?}" "Activation of service : ${AcivateServiceName}" " [ can't Actiate ] " "2" "" ""</fileline>
            <fileline lineNumber="84">		Test_service_ststus ${AcivateServiceName}</fileline>
            <fileline lineNumber="85">		if [ ${ServiceStatus} = "disabled" ] </fileline>
            <fileline lineNumber="86">			then </fileline>
            <fileline lineNumber="87">				MSG_DISPLAY "info" "1" "Service ${AcivateServiceName} is succesfully : [ ${ServiceStatus} ]"</fileline>
            <fileline lineNumber="88">			else </fileline>
            <fileline lineNumber="89">				MSG_DISPLAY "EdEMessage" "1" "Service ${AcivateServiceName} can t be disabled : [ ${ServiceStatus} ]"</fileline>
            <fileline lineNumber="90">		fi </fileline>
            <fileline lineNumber="91">fi </fileline>
            <fileline lineNumber="92" />
            <fileline lineNumber="93" />
            <fileline lineNumber="94">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="95">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="96">#################################################### </fileline>
            <fileline lineNumber="97">}</fileline>
            <fileline lineNumber="98" />
            <fileline lineNumber="99" />
            <fileline lineNumber="100" />
            <fileline lineNumber="101">function Test_service_ststus</fileline>
            <fileline lineNumber="102">{</fileline>
            <fileline lineNumber="103">#|# Var to set  : None</fileline>
            <fileline lineNumber="104">#|#             : Use this var to set </fileline>
            <fileline lineNumber="105">#|#             : Use this var to set </fileline>
            <fileline lineNumber="106">#|# ${1}        : Use this var to set [  ]                </fileline>
            <fileline lineNumber="107">#|# ${2}        : Use this var to set [  ]               </fileline>
            <fileline lineNumber="108">#|#</fileline>
            <fileline lineNumber="109">#|# Base usage  : None</fileline>
            <fileline lineNumber="110">#|#</fileline>
            <fileline lineNumber="111">#|# Description : None</fileline>
            <fileline lineNumber="112">#|#</fileline>
            <fileline lineNumber="113">#|# Send Back   : None</fileline>
            <fileline lineNumber="114">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="115">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="116">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="117">######################################################!</fileline>
            <fileline lineNumber="118">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="119" />
            <fileline lineNumber="120">local CheckServiceName="${1}"</fileline>
            <fileline lineNumber="121">Empty_Var_Control "${CheckServiceName}" "CheckServiceName"  "4" "Service name is a mandatory parameter "</fileline>
            <fileline lineNumber="122" />
            <fileline lineNumber="123" />
            <fileline lineNumber="124">ServiceStatus=$(systemctl status ntpd.service | grep "Loaded" | awk -F\; '{ print $2}')</fileline>
            <fileline lineNumber="125">MSG_DISPLAY "info" "1" "Service ${CheckServiceName} is : [ ${ServiceStatus} ]"</fileline>
            <fileline lineNumber="126" />
            <fileline lineNumber="127">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="128">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="129">#################################################### </fileline>
            <fileline lineNumber="130">}</fileline>
            <fileline lineNumber="131" />
            <fileline lineNumber="132" />
            <fileline lineNumber="133">function Get_service_liste () </fileline>
            <fileline lineNumber="134">{</fileline>
            <fileline lineNumber="135">#|# Var to set  : None             </fileline>
            <fileline lineNumber="136">#|#</fileline>
            <fileline lineNumber="137">#|# Base usage  : Get_service_liste</fileline>
            <fileline lineNumber="138">#|#</fileline>
            <fileline lineNumber="139">#|# Description : this function generate or regenerate list of all installed services</fileline>
            <fileline lineNumber="140">#|#</fileline>
            <fileline lineNumber="141">#|# Send Back   : _activated_service as service array </fileline>
            <fileline lineNumber="142">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="143">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="144">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="145">######################################################!</fileline>
            <fileline lineNumber="146" />
            <fileline lineNumber="147">_activated_service=""</fileline>
            <fileline lineNumber="148">for _services in $(service --status-all 2&gt;&amp;1  | awk '{ print $4 }')</fileline>
            <fileline lineNumber="149">    do  </fileline>
            <fileline lineNumber="150">	  MSG_DISPLAY "debug" "0" "Service found : [ ${_services} ]" </fileline>
            <fileline lineNumber="151">	  _activated_service="${_activated_service} ${_services}"</fileline>
            <fileline lineNumber="152">done</fileline>
            <fileline lineNumber="153" />
            <fileline lineNumber="154">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="155">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="156">#################################################### 	</fileline>
            <fileline lineNumber="157">}</fileline>
            <fileline lineNumber="158" />
            <fileline lineNumber="159" />
            <fileline lineNumber="160">function Get_service_status () </fileline>
            <fileline lineNumber="161">{</fileline>
            <fileline lineNumber="162">#|# Var to set  : _ServiceNAme             </fileline>
            <fileline lineNumber="163">#|#</fileline>
            <fileline lineNumber="164">#|# Base usage  : Get_service_liste</fileline>
            <fileline lineNumber="165">#|#</fileline>
            <fileline lineNumber="166">#|# Description : this function generate or regenerate list of all installed services</fileline>
            <fileline lineNumber="167">#|#</fileline>
            <fileline lineNumber="168">#|# Send Back   : _activated_service as service array </fileline>
            <fileline lineNumber="169">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="170">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="171">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="172">######################################################!</fileline>
            <fileline lineNumber="173" />
            <fileline lineNumber="174">local _ServiceNAme="${1}"</fileline>
            <fileline lineNumber="175">_service_state=$(service --status-all 2&gt;&amp;1  | awk '{print $2}')</fileline>
            <fileline lineNumber="176" />
            <fileline lineNumber="177">case ${_service_state} in </fileline>
            <fileline lineNumber="178">      +) ;; </fileline>
            <fileline lineNumber="179">	  -) ;;</fileline>
            <fileline lineNumber="180">	  ?) ;;</fileline>
            <fileline lineNumber="181">	  *) ;;</fileline>
            <fileline lineNumber="182">esac </fileline>
            <fileline lineNumber="183" />
            <fileline lineNumber="184">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="185">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="186">#################################################### 	</fileline>
            <fileline lineNumber="187">}</fileline>
            <fileline lineNumber="188" />
            <fileline lineNumber="189" />
            <fileline lineNumber="190" />
            <fileline lineNumber="191">function Do_service_stop () </fileline>
            <fileline lineNumber="192">{</fileline>
            <fileline lineNumber="193">#|# Var to set  : None             </fileline>
            <fileline lineNumber="194">#|#</fileline>
            <fileline lineNumber="195">#|# Base usage  : Get_service_liste</fileline>
            <fileline lineNumber="196">#|#</fileline>
            <fileline lineNumber="197">#|# Description : this function generate or regenerate list of all installed services</fileline>
            <fileline lineNumber="198">#|#</fileline>
            <fileline lineNumber="199">#|# Send Back   : _activated_service as service array </fileline>
            <fileline lineNumber="200">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="201">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="202">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="203">######################################################!</fileline>
            <fileline lineNumber="204" />
            <fileline lineNumber="205">_activated_service=""</fileline>
            <fileline lineNumber="206">for _services in $(service --status-all 2&gt;&amp;1  | awk '{ print $4 }')</fileline>
            <fileline lineNumber="207">    do  </fileline>
            <fileline lineNumber="208">	  MSG_DISPLAY "debug" "0" "Service found : [ ${_services} ]" </fileline>
            <fileline lineNumber="209">	  _activated_service="${_activated_service} ${_services}"</fileline>
            <fileline lineNumber="210">done</fileline>
            <fileline lineNumber="211" />
            <fileline lineNumber="212">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="213">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="214">#################################################### 	</fileline>
            <fileline lineNumber="215">}</fileline>
            <fileline lineNumber="216" />
            <fileline lineNumber="217">function Do_service_start () </fileline>
            <fileline lineNumber="218">{</fileline>
            <fileline lineNumber="219">#|# Var to set  : None             </fileline>
            <fileline lineNumber="220">#|#</fileline>
            <fileline lineNumber="221">#|# Base usage  : Get_service_liste</fileline>
            <fileline lineNumber="222">#|#</fileline>
            <fileline lineNumber="223">#|# Description : this function generate or regenerate list of all installed services</fileline>
            <fileline lineNumber="224">#|#</fileline>
            <fileline lineNumber="225">#|# Send Back   : _activated_service as service array </fileline>
            <fileline lineNumber="226">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="227">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="228">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="229">######################################################!</fileline>
            <fileline lineNumber="230" />
            <fileline lineNumber="231">_activated_service=""</fileline>
            <fileline lineNumber="232">for _services in $(service --status-all 2&gt;&amp;1  | awk '{ print $4 }')</fileline>
            <fileline lineNumber="233">    do  </fileline>
            <fileline lineNumber="234">	  MSG_DISPLAY "debug" "0" "Service found : [ ${_services} ]" </fileline>
            <fileline lineNumber="235">	  _activated_service="${_activated_service} ${_services}"</fileline>
            <fileline lineNumber="236">done</fileline>
            <fileline lineNumber="237" />
            <fileline lineNumber="238">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="239">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="240">#################################################### 	</fileline>
            <fileline lineNumber="241">}</fileline>
            <fileline lineNumber="242" />
            <fileline lineNumber="243" />
            <fileline lineNumber="244" />
            <fileline lineNumber="245">function Dummy_function</fileline>
            <fileline lineNumber="246">{</fileline>
            <fileline lineNumber="247">#|# Var to set  : None</fileline>
            <fileline lineNumber="248">#|#             : Use this var to set </fileline>
            <fileline lineNumber="249">#|#             : Use this var to set </fileline>
            <fileline lineNumber="250">#|# ${1}        : Use this var to set [  ]                </fileline>
            <fileline lineNumber="251">#|# ${2}        : Use this var to set [  ]               </fileline>
            <fileline lineNumber="252">#|#</fileline>
            <fileline lineNumber="253">#|# Base usage  : None</fileline>
            <fileline lineNumber="254">#|#</fileline>
            <fileline lineNumber="255">#|# Description : None</fileline>
            <fileline lineNumber="256">#|#</fileline>
            <fileline lineNumber="257">#|# Send Back   : None</fileline>
            <fileline lineNumber="258">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="259">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="260">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="261">######################################################</fileline>
            <fileline lineNumber="262">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="263" />
            <fileline lineNumber="264" />
            <fileline lineNumber="265">MSG_DISPLAY "info" "1" "this is a model function"</fileline>
            <fileline lineNumber="266" />
            <fileline lineNumber="267">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="268">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="269">#################################################### </fileline>
            <fileline lineNumber="270">}</fileline>
            <fileline lineNumber="271" />
            <fileline lineNumber="272"># Sourcing control variable </fileline>
            <fileline lineNumber="273">LibState="OK"  </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/system_base/system_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                 #</fileline>
            <fileline lineNumber="5"># Subject : This library provides base system command tunnig env              #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO </fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11" />
            <fileline lineNumber="12">function Get_system_tunning</fileline>
            <fileline lineNumber="13">{</fileline>
            <fileline lineNumber="14">#|# Var to set   : </fileline>
            <fileline lineNumber="15">#|# SYSTEM_NAME  : use this var to set system name of the current operation system</fileline>
            <fileline lineNumber="16">#|#</fileline>
            <fileline lineNumber="17">#|# Base usage   : Get_system_tunning</fileline>
            <fileline lineNumber="18">#|#</fileline>
            <fileline lineNumber="19">#|# Returne : Function execution   </fileline>
            <fileline lineNumber="20">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="21">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="22">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="23">######################################################</fileline>
            <fileline lineNumber="24">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="25" />
            <fileline lineNumber="26">  SYSTEM_NAME=$(uname)</fileline>
            <fileline lineNumber="27">  case ${SYSTEM_NAME} in </fileline>
            <fileline lineNumber="28">       Linux|linux|LINUX) echo  "Tunning scripts vars for [ ${SYSTEM_NAME} ] "</fileline>
            <fileline lineNumber="29">                          Get_system_tunning_SUB_LINUX</fileline>
            <fileline lineNumber="30">                       ;;</fileline>
            <fileline lineNumber="31">             AIX|aix|Aix) echo  "Tunning scripts vars for [ ${SYSTEM_NAME} ] "</fileline>
            <fileline lineNumber="32">                          Get_system_tunning_SUB_AIX</fileline>
            <fileline lineNumber="33">                       ;;</fileline>
            <fileline lineNumber="34">             SunOS|SUNOS|sunos) echo  "Tunning scripts vars for [ ${SYSTEM_NAME} ] "</fileline>
            <fileline lineNumber="35">                          Get_system_tunning_SUB_SOLARIS</fileline>
            <fileline lineNumber="36">                       ;;</fileline>
            <fileline lineNumber="37">                       *)echo  "Not yet suppoted system [ ${SYSTEM_NAME} ] "</fileline>
            <fileline lineNumber="38">                         CAST_SUPPORT_MSG "1"</fileline>
            <fileline lineNumber="39">                       ;;</fileline>
            <fileline lineNumber="40">  esac </fileline>
            <fileline lineNumber="41">}</fileline>
            <fileline lineNumber="42" />
            <fileline lineNumber="43">function Get_system_tunning_SUB_LINUX </fileline>
            <fileline lineNumber="44">{</fileline>
            <fileline lineNumber="45">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="46">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="47">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="48">######################################################</fileline>
            <fileline lineNumber="49">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="50" />
            <fileline lineNumber="51" />
            <fileline lineNumber="52"> CMD_WHO="who i am"</fileline>
            <fileline lineNumber="53"> CMD_UNCOMPRESS_ZIP=""</fileline>
            <fileline lineNumber="54"> CMD_UNCOMPRESS="tar xvzf ${OLD_PWD}/${PACKAGE} "</fileline>
            <fileline lineNumber="55"> CMD_RECOMPRESS_ZIP=""</fileline>
            <fileline lineNumber="56"> PKGFile_Type_Comp="gzip"</fileline>
            <fileline lineNumber="57"> PKGFile_Type_Comp_SYSSPEC="data"</fileline>
            <fileline lineNumber="58"> Get_linux_distro</fileline>
            <fileline lineNumber="59" />
            <fileline lineNumber="60">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="61">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="62">####################################################</fileline>
            <fileline lineNumber="63">}</fileline>
            <fileline lineNumber="64" />
            <fileline lineNumber="65" />
            <fileline lineNumber="66" />
            <fileline lineNumber="67">function Get_linux_distro {</fileline>
            <fileline lineNumber="68">    #|# /**</fileline>
            <fileline lineNumber="69">    #|#  * detect_linux_distro</fileline>
            <fileline lineNumber="70">    #|#  * @desc Determines the Linux distribution type</fileline>
            <fileline lineNumber="71">    #|#  * @return Prints the type of Linux distribution: Debian, Ubuntu, Red Hat, or others</fileline>
            <fileline lineNumber="72">    #|#  *</fileline>
            <fileline lineNumber="73">    #|#  * Usage:</fileline>
            <fileline lineNumber="74">    #|#  * detect_linux_distro</fileline>
            <fileline lineNumber="75">    #|#  **/</fileline>
            <fileline lineNumber="76" />
            <fileline lineNumber="77">    MSG_DISPLAY "check" "0" "Determining kind of linux :"</fileline>
            <fileline lineNumber="78">    if [ -f /etc/os-release ]</fileline>
            <fileline lineNumber="79">      then</fileline>
            <fileline lineNumber="80">        . /etc/os-release</fileline>
            <fileline lineNumber="81">        case "${ID}" in</fileline>
            <fileline lineNumber="82">            debian) MSG_DISPLAY "EdSMessage" "0" "${ID}"</fileline>
            <fileline lineNumber="83">                    GLB_default_package_manager="apt"</fileline>
            <fileline lineNumber="84">                ;;</fileline>
            <fileline lineNumber="85">            ubuntu) MSG_DISPLAY "EdSMessage" "0" "${ID}"</fileline>
            <fileline lineNumber="86">                    GLB_default_package_manager="apt"</fileline>
            <fileline lineNumber="87">                ;;</fileline>
            <fileline lineNumber="88">            rhel|centos|fedora) MSG_DISPLAY "EdSMessage" "0" "${ID}"</fileline>
            <fileline lineNumber="89">                                GLB_default_package_manager="yum"</fileline>
            <fileline lineNumber="90">                ;;</fileline>
            <fileline lineNumber="91">            *)</fileline>
            <fileline lineNumber="92">               MSG_DISPLAY "EdWMessage" "0" "${ID} - ${NAME} "</fileline>
            <fileline lineNumber="93">               MSG_DISPLAY "info" "0" "Unsupported linux distro"</fileline>
            <fileline lineNumber="94">               CAST_SUPPORT_MSG</fileline>
            <fileline lineNumber="95">                ;;</fileline>
            <fileline lineNumber="96">        esac</fileline>
            <fileline lineNumber="97">    else</fileline>
            <fileline lineNumber="98">        MSG_DISPLAY "EdWMessage" "0" "unknown"</fileline>
            <fileline lineNumber="99">        MSG_DISPLAY "info" "0" "Unsupported linux distro"</fileline>
            <fileline lineNumber="100">        CAST_SUPPORT_MSG</fileline>
            <fileline lineNumber="101">    fi</fileline>
            <fileline lineNumber="102" />
            <fileline lineNumber="103">}</fileline>
            <fileline lineNumber="104" />
            <fileline lineNumber="105" />
            <fileline lineNumber="106">function Get_system_tunning_SUB_AIX</fileline>
            <fileline lineNumber="107">{</fileline>
            <fileline lineNumber="108">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="109">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="110">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="111">######################################################</fileline>
            <fileline lineNumber="112">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="113" />
            <fileline lineNumber="114" />
            <fileline lineNumber="115"> CMD_WHO="who -m"</fileline>
            <fileline lineNumber="116"> CMD_UNCOMPRESS_ZIP="gzip -d ${OLD_PWD}/${PACKAGE}" </fileline>
            <fileline lineNumber="117"> CMD_UNCOMPRESS_TAR="tar -xvf ${OLD_PWD}/${PKG_noext}.tar"</fileline>
            <fileline lineNumber="118"> CMD_RECOMPRESS_ZIP="gzip ${OLD_PWD}/${PKG_noext}.tar  "</fileline>
            <fileline lineNumber="119"> PKGFile_Type_Comp="gzip"</fileline>
            <fileline lineNumber="120"> PKGFile_Type_Comp_SYSSPEC="data"</fileline>
            <fileline lineNumber="121" />
            <fileline lineNumber="122">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="123">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="124">####################################################</fileline>
            <fileline lineNumber="125">}</fileline>
            <fileline lineNumber="126" />
            <fileline lineNumber="127">function Get_system_random_,number</fileline>
            <fileline lineNumber="128">{</fileline>
            <fileline lineNumber="129">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="130">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="131">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="132">######################################################</fileline>
            <fileline lineNumber="133">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="134" />
            <fileline lineNumber="135" />
            <fileline lineNumber="136">EXTERNAL_randomized_var="${RANDOM}"</fileline>
            <fileline lineNumber="137">MSG_DISPLAY "debug" "0" "Current Randomized VAR  : [ ${EXTERNAL_randomized_var} ] "</fileline>
            <fileline lineNumber="138" />
            <fileline lineNumber="139" />
            <fileline lineNumber="140">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="141">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="142">####################################################</fileline>
            <fileline lineNumber="143">}</fileline>
            <fileline lineNumber="144" />
            <fileline lineNumber="145" />
            <fileline lineNumber="146">function Set_system_counter</fileline>
            <fileline lineNumber="147">#|# Set_system_counter_TO_init             : use this var to init counter to 0</fileline>
            <fileline lineNumber="148">#|# ${1}                               : use this var to set Set_system_counter_TO_init</fileline>
            <fileline lineNumber="149">#|# External_Return_Counter            : is used to returne counter value</fileline>
            <fileline lineNumber="150">#|# Basic use                          : Set_system_counter_TO_init "[ To init ]"</fileline>
            <fileline lineNumber="151">{</fileline>
            <fileline lineNumber="152">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="153">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="154">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="155">######################################################</fileline>
            <fileline lineNumber="156">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="157" />
            <fileline lineNumber="158">local Set_system_counter_TO_init="${1}"</fileline>
            <fileline lineNumber="159" />
            <fileline lineNumber="160">Empty_Var_Control "${Set_system_counter_TO_init}" "Set_system_counter_TO_init" "4"</fileline>
            <fileline lineNumber="161" />
            <fileline lineNumber="162">External_Return_Counter="0" </fileline>
            <fileline lineNumber="163">if [ "${Set_system_counter_TO_init}" = "init" ]</fileline>
            <fileline lineNumber="164">   then </fileline>
            <fileline lineNumber="165">   	   Internal_var_count="0"</fileline>
            <fileline lineNumber="166">   else</fileline>
            <fileline lineNumber="167">       Internal_var_count="$( expr ${Internal_var_count} + 1 )"</fileline>
            <fileline lineNumber="168">fi </fileline>
            <fileline lineNumber="169">External_Return_Counter="${Internal_var_count}"       </fileline>
            <fileline lineNumber="170" />
            <fileline lineNumber="171" />
            <fileline lineNumber="172">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="173">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="174">####################################################	</fileline>
            <fileline lineNumber="175">} </fileline>
            <fileline lineNumber="176" />
            <fileline lineNumber="177"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/system_base/ConfigSys/NetConsoleCfg_lib.sh</filename>
        <content>
            <fileline lineNumber="1">###############################################################################</fileline>
            <fileline lineNumber="2"># NetConsole.cfg.lib                                                          #</fileline>
            <fileline lineNumber="3">#                                                                             #</fileline>
            <fileline lineNumber="4"># Creation Date : 18/02/2016                                                  #</fileline>
            <fileline lineNumber="5"># Team          : Myself                                                      #</fileline>
            <fileline lineNumber="6"># Support mail  : doraken@doraken.net                                          #</fileline>
            <fileline lineNumber="7"># Author        : Arnaud Crampet                                              #</fileline>
            <fileline lineNumber="8">#                                                                             #</fileline>
            <fileline lineNumber="9"># Subject : This library provide base function to rebuild NetCosole config    #</fileline>
            <fileline lineNumber="10">#                                                                             #</fileline>
            <fileline lineNumber="11">###############################################################################</fileline>
            <fileline lineNumber="12">####</fileline>
            <fileline lineNumber="13"># INFO </fileline>
            <fileline lineNumber="14" />
            <fileline lineNumber="15" />
            <fileline lineNumber="16" />
            <fileline lineNumber="17">function Do_configure_NetConsole</fileline>
            <fileline lineNumber="18">{</fileline>
            <fileline lineNumber="19">#|# Var to set  : None</fileline>
            <fileline lineNumber="20">#|#             : Use this var to set </fileline>
            <fileline lineNumber="21">#|#             : Use this var to set </fileline>
            <fileline lineNumber="22">#|# ${1}        : Use this var to set [  ]                </fileline>
            <fileline lineNumber="23">#|# ${2}        : Use this var to set [  ]               </fileline>
            <fileline lineNumber="24">#|#</fileline>
            <fileline lineNumber="25">#|# Base usage  : None</fileline>
            <fileline lineNumber="26">#|#</fileline>
            <fileline lineNumber="27">#|# Description : None</fileline>
            <fileline lineNumber="28">#|#</fileline>
            <fileline lineNumber="29">#|# Send Back   : None</fileline>
            <fileline lineNumber="30">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="31">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="32">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="33">######################################################</fileline>
            <fileline lineNumber="34">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="35" />
            <fileline lineNumber="36" />
            <fileline lineNumber="37">local NetConsolePort="${1}"</fileline>
            <fileline lineNumber="38">local SyslogServerAddr="${2}"</fileline>
            <fileline lineNumber="39">local SysLogPort="${3}"</fileline>
            <fileline lineNumber="40">local SysLogMacAddr="${4}"</fileline>
            <fileline lineNumber="41" />
            <fileline lineNumber="42">Empty_Var_Control "${NetConsolePort}"   "NetConsolePort"    "4" " Net Console port is a mandatory parameter "</fileline>
            <fileline lineNumber="43">Empty_Var_Control "${SyslogServerAddr}" "SyslogServerAddr"  "4" " Syslog serveur ip aresse is a mandatory parameter "</fileline>
            <fileline lineNumber="44">Empty_Var_Control "${SysLogPort}"       "SysLogPort"        "4" " syslog port is a mandatory parameter "</fileline>
            <fileline lineNumber="45">Empty_Var_Control "${SysLogMacAddr}"    "SysLogMacAddr"     "4" " syslog Mac adresse is a mandatory parameter "</fileline>
            <fileline lineNumber="46" />
            <fileline lineNumber="47">File_Backup "${NetConsoleConfig}"</fileline>
            <fileline lineNumber="48">FileneconsoleConfigRedirector=" &gt;&gt; ${NetConsoleConfig}"</fileline>
            <fileline lineNumber="49" />
            <fileline lineNumber="50">echo  "" &gt; ${NetConsoleConfig}</fileline>
            <fileline lineNumber="51" />
            <fileline lineNumber="52">eval echo  "# This is the configuration file for the netconsole service.  By starting"       ${FileneconsoleConfigRedirector}</fileline>
            <fileline lineNumber="53">eval echo  "# this service you allow a remote syslog daemon to record console output"        ${FileneconsoleConfigRedirector}</fileline>
            <fileline lineNumber="54">eval echo  "# from this system."                                                             ${FileneconsoleConfigRedirector}</fileline>
            <fileline lineNumber="55">eval echo  ""                                                                                ${FileneconsoleConfigRedirector} </fileline>
            <fileline lineNumber="56">eval echo  "# The local port number that the netconsole module will use"                     ${FileneconsoleConfigRedirector}</fileline>
            <fileline lineNumber="57">eval echo  "LOCALPORT=${NetConsolePort}"                                                     ${FileneconsoleConfigRedirector}</fileline>
            <fileline lineNumber="58">eval echo  ""                                                                                ${FileneconsoleConfigRedirector}</fileline>
            <fileline lineNumber="59">eval echo  "# The ethernet device to send console messages out of (only set this if it"      ${FileneconsoleConfigRedirector}</fileline>
            <fileline lineNumber="60">eval echo  "# can't be automatically determined)"                                            ${FileneconsoleConfigRedirector}</fileline>
            <fileline lineNumber="61">eval echo  "# DEV="                                                                          ${FileneconsoleConfigRedirector}</fileline>
            <fileline lineNumber="62">eval echo  ""                                                                                ${FileneconsoleConfigRedirector}</fileline>
            <fileline lineNumber="63">eval echo  "# The IP address of the remote syslog server to send messages to"                ${FileneconsoleConfigRedirector}</fileline>
            <fileline lineNumber="64">eval echo  "SYSLOGADDR=${SyslogServerAddr}"                                                  ${FileneconsoleConfigRedirector}</fileline>
            <fileline lineNumber="65">eval echo  ""                                                                                ${FileneconsoleConfigRedirector}</fileline>
            <fileline lineNumber="66">eval echo  "# The listening port of the remote syslog daemon"                                ${FileneconsoleConfigRedirector}</fileline>
            <fileline lineNumber="67">eval echo  "SYSLOGPORT=${SysLogPort}"                                                        ${FileneconsoleConfigRedirector}</fileline>
            <fileline lineNumber="68">eval echo  ""                                                                                ${FileneconsoleConfigRedirector}</fileline>
            <fileline lineNumber="69">eval echo  "# The MAC address of the remote syslog server (only set this if it can t"        ${FileneconsoleConfigRedirector}</fileline>
            <fileline lineNumber="70">eval echo  "# be automatically determined)"                                                  ${FileneconsoleConfigRedirector}</fileline>
            <fileline lineNumber="71">eval echo  "SYSLOGMACADDR=${SysLogMacAddr}"                                                  ${FileneconsoleConfigRedirector}</fileline>
            <fileline lineNumber="72" />
            <fileline lineNumber="73" />
            <fileline lineNumber="74">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="75">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="76">#################################################### </fileline>
            <fileline lineNumber="77">}</fileline>
            <fileline lineNumber="78" />
            <fileline lineNumber="79" />
            <fileline lineNumber="80" />
            <fileline lineNumber="81" />
            <fileline lineNumber="82" />
            <fileline lineNumber="83">function Dummy_function</fileline>
            <fileline lineNumber="84">{</fileline>
            <fileline lineNumber="85">#|# Var to set  : None</fileline>
            <fileline lineNumber="86">#|#             : Use this var to set </fileline>
            <fileline lineNumber="87">#|#             : Use this var to set </fileline>
            <fileline lineNumber="88">#|# ${1}        : Use this var to set [  ]                </fileline>
            <fileline lineNumber="89">#|# ${2}        : Use this var to set [  ]               </fileline>
            <fileline lineNumber="90">#|#</fileline>
            <fileline lineNumber="91">#|# Base usage  : None</fileline>
            <fileline lineNumber="92">#|#</fileline>
            <fileline lineNumber="93">#|# Description : None</fileline>
            <fileline lineNumber="94">#|#</fileline>
            <fileline lineNumber="95">#|# Send Back   : None</fileline>
            <fileline lineNumber="96">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="97">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="98">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="99">######################################################</fileline>
            <fileline lineNumber="100">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="101" />
            <fileline lineNumber="102" />
            <fileline lineNumber="103">MSG_DISPLAY "info" "1" "this is a model function"</fileline>
            <fileline lineNumber="104" />
            <fileline lineNumber="105">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="106">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="107">#################################################### </fileline>
            <fileline lineNumber="108">}</fileline>
            <fileline lineNumber="109" />
            <fileline lineNumber="110"># Sourcing control variable </fileline>
            <fileline lineNumber="111">LibState="OK"  </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/system_base/backup/Sys_Bakup_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                                         #</fileline>
            <fileline lineNumber="5"># Subject : This library provide base system config file backup runtimes      #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO </fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11">function Do_passwd_backup</fileline>
            <fileline lineNumber="12">{</fileline>
            <fileline lineNumber="13">#|# Var to set  : None</fileline>
            <fileline lineNumber="14">#|# Base usage  : Do_passwd_backup</fileline>
            <fileline lineNumber="15">#|#</fileline>
            <fileline lineNumber="16">#|# Description : This function is used tu generate a day dated backup of</fileline>
            <fileline lineNumber="17">#|#               passwd , shadows and group file . This may prevent any </fileline>
            <fileline lineNumber="18">#|#               risk of user data loose</fileline>
            <fileline lineNumber="19">#|#</fileline>
            <fileline lineNumber="20">#|# Send Back   : None</fileline>
            <fileline lineNumber="21">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="22">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="23">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="24">######################################################</fileline>
            <fileline lineNumber="25">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="26" />
            <fileline lineNumber="27" />
            <fileline lineNumber="28">File_Backup "/etc/passwd"</fileline>
            <fileline lineNumber="29">#File_Backup "/etc/group"</fileline>
            <fileline lineNumber="30" />
            <fileline lineNumber="31" />
            <fileline lineNumber="32">MSG_DISPLAY "info" "1" "this is a model function"</fileline>
            <fileline lineNumber="33">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="34">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="35">#################################################### </fileline>
            <fileline lineNumber="36">}</fileline>
            <fileline lineNumber="37" />
            <fileline lineNumber="38">function Do_group_backup</fileline>
            <fileline lineNumber="39">{</fileline>
            <fileline lineNumber="40">#|# Var to set  : None</fileline>
            <fileline lineNumber="41">#|# Base usage  : Backup_groupDef</fileline>
            <fileline lineNumber="42">#|#</fileline>
            <fileline lineNumber="43">#|# Description : This function is used to create a specifica backup of  </fileline>
            <fileline lineNumber="44">#|#               passwd , shadows and group file . This may prevent any </fileline>
            <fileline lineNumber="45">#|#               risk of user data loose</fileline>
            <fileline lineNumber="46">#|#</fileline>
            <fileline lineNumber="47">#|# Send Back   : None</fileline>
            <fileline lineNumber="48">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="49">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="50">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="51">######################################################</fileline>
            <fileline lineNumber="52">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="53" />
            <fileline lineNumber="54" />
            <fileline lineNumber="55">#File_Backup "/etc/passwd"</fileline>
            <fileline lineNumber="56">File_Backup "/etc/group"</fileline>
            <fileline lineNumber="57" />
            <fileline lineNumber="58" />
            <fileline lineNumber="59">MSG_DISPLAY "info" "1" "this is a model function"</fileline>
            <fileline lineNumber="60">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="61">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="62">#################################################### </fileline>
            <fileline lineNumber="63">}</fileline>
            <fileline lineNumber="64" />
            <fileline lineNumber="65" />
            <fileline lineNumber="66" />
            <fileline lineNumber="67" />
            <fileline lineNumber="68" />
            <fileline lineNumber="69" />
            <fileline lineNumber="70" />
            <fileline lineNumber="71" />
            <fileline lineNumber="72">function Dummy_function</fileline>
            <fileline lineNumber="73">{</fileline>
            <fileline lineNumber="74">#|# Var to set  : None</fileline>
            <fileline lineNumber="75">#|#             : Use this var to set </fileline>
            <fileline lineNumber="76">#|#             : Use this var to set </fileline>
            <fileline lineNumber="77">#|# ${1}        : Use this var to set [  ]                </fileline>
            <fileline lineNumber="78">#|# ${2}        : Use this var to set [  ]               </fileline>
            <fileline lineNumber="79">#|#</fileline>
            <fileline lineNumber="80">#|# Base usage  : None</fileline>
            <fileline lineNumber="81">#|#</fileline>
            <fileline lineNumber="82">#|# Description : None</fileline>
            <fileline lineNumber="83">#|#</fileline>
            <fileline lineNumber="84">#|# Send Back   : None</fileline>
            <fileline lineNumber="85">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="86">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="87">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="88">######################################################</fileline>
            <fileline lineNumber="89">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="90" />
            <fileline lineNumber="91" />
            <fileline lineNumber="92">MSG_DISPLAY "info" "1" "this is a model function"</fileline>
            <fileline lineNumber="93" />
            <fileline lineNumber="94">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="95">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="96">#################################################### </fileline>
            <fileline lineNumber="97">}</fileline>
            <fileline lineNumber="98" />
            <fileline lineNumber="99" />
            <fileline lineNumber="100" />
            <fileline lineNumber="101" />
            <fileline lineNumber="102" />
            <fileline lineNumber="103" />
            <fileline lineNumber="104" />
            <fileline lineNumber="105" />
            <fileline lineNumber="106"># Sourcing control variable </fileline>
            <fileline lineNumber="107">LibState="OK"  </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/system_base/file_system/fs_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                                        #</fileline>
            <fileline lineNumber="5"># Subject : This library provide base file system check and stat              #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO</fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11">function FS_List_local</fileline>
            <fileline lineNumber="12">{</fileline>
            <fileline lineNumber="13">#|#  Basic usage       : FS_List_local</fileline>
            <fileline lineNumber="14">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="15">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="16">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="17">######################################################</fileline>
            <fileline lineNumber="18">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="19" />
            <fileline lineNumber="20">Set_system_counter "init"</fileline>
            <fileline lineNumber="21">for FS_see in $(df -P | grep dev | egrep -v "none" | awk '{print $1}')</fileline>
            <fileline lineNumber="22">  do</fileline>
            <fileline lineNumber="23">  	Set_system_counter</fileline>
            <fileline lineNumber="24">    Counted_FS="${External_Return_Counter}"</fileline>
            <fileline lineNumber="25">    FS_Name_list_tmp="${FS_Name_list_tmp} ${FS_see}"</fileline>
            <fileline lineNumber="26">done</fileline>
            <fileline lineNumber="27">FS_Max=${Counted_FS}</fileline>
            <fileline lineNumber="28">set -A FS_Name_list $( echo  ${FS_Name_list_tmp} )</fileline>
            <fileline lineNumber="29" />
            <fileline lineNumber="30">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="31">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="32">####################################################</fileline>
            <fileline lineNumber="33">}</fileline>
            <fileline lineNumber="34" />
            <fileline lineNumber="35">function FS_Get_all_Full_Stats</fileline>
            <fileline lineNumber="36">{</fileline>
            <fileline lineNumber="37">#|# Var to set  :</fileline>
            <fileline lineNumber="38">#|# FS_Name_list : array list of FS</fileline>
            <fileline lineNumber="39">#|#</fileline>
            <fileline lineNumber="40">#|# Base usage  :  S_Get_all_Full_Stats "Aray_List_FS"</fileline>
            <fileline lineNumber="41">#|#</fileline>
            <fileline lineNumber="42">#|# Description : This function is used to get stats for all File system Mega</fileline>
            <fileline lineNumber="43">#|#               octet and report for a gloab usage of disk space and get FS by</fileline>
            <fileline lineNumber="44">#|#               FS stats</fileline>
            <fileline lineNumber="45">#|#</fileline>
            <fileline lineNumber="46">#|# Send Back   : Global disk usage and fs by fs usag</fileline>
            <fileline lineNumber="47">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="48">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="49">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="50">######################################################</fileline>
            <fileline lineNumber="51">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="52" />
            <fileline lineNumber="53">Set_system_counter "init"</fileline>
            <fileline lineNumber="54" />
            <fileline lineNumber="55" />
            <fileline lineNumber="56">for FS_To_Get_INFS in $(echo ${FS_Name_list[@]} )</fileline>
            <fileline lineNumber="57">  do</fileline>
            <fileline lineNumber="58">  	FS_Get_all_stats "${FS_To_Get_INFS}"</fileline>
            <fileline lineNumber="59">  	MSG_DISPLAY "debug" "0"  "Working on FS : [ ${FS_To_Get_INFS} ]"</fileline>
            <fileline lineNumber="60">    Total_Size_list_base="${Total_Size_list_base} ${External_FS_Size_Mo_Result}"</fileline>
            <fileline lineNumber="61">    Free_Size_List_Base="${Free_Size_List_Base} ${External_FS_Free_Mo_Result}"</fileline>
            <fileline lineNumber="62">    Used_Size_liste_Base="${Used_Size_liste_Base} ${External_FS_Used_Mo_Result}"</fileline>
            <fileline lineNumber="63">done</fileline>
            <fileline lineNumber="64" />
            <fileline lineNumber="65">set FS_SIZE_ARRAY       $( echo ${Total_Size_list_base} )</fileline>
            <fileline lineNumber="66">set FS_FREE_SIZE_ARRAY  $( echo ${Free_Size_List_Base}  )</fileline>
            <fileline lineNumber="67">set FS_USED_SIZE_ARRAY  $( echo ${Used_Size_liste_Base} )</fileline>
            <fileline lineNumber="68" />
            <fileline lineNumber="69">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="70">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="71">####################################################</fileline>
            <fileline lineNumber="72">}</fileline>
            <fileline lineNumber="73" />
            <fileline lineNumber="74">function FS_See_USED_Total</fileline>
            <fileline lineNumber="75">{</fileline>
            <fileline lineNumber="76">#|# Var to set  : None</fileline>
            <fileline lineNumber="77">#|#</fileline>
            <fileline lineNumber="78">#|# Base usage  :  FS_See_USED_Total</fileline>
            <fileline lineNumber="79">#|#</fileline>
            <fileline lineNumber="80">#|# Description : This function is used to get stats for all File system Mega</fileline>
            <fileline lineNumber="81">#|#               octet and report for a gloab usage of disk space</fileline>
            <fileline lineNumber="82">#|#</fileline>
            <fileline lineNumber="83">#|# Send Back   : Global disk usage</fileline>
            <fileline lineNumber="84">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="85">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="86">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="87">######################################################</fileline>
            <fileline lineNumber="88">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="89" />
            <fileline lineNumber="90" />
            <fileline lineNumber="91">FS_Get_all_Full_Stats</fileline>
            <fileline lineNumber="92">Last_CALC_USED="0"</fileline>
            <fileline lineNumber="93" />
            <fileline lineNumber="94">for FS_Calc_used_CACL in $(echo ${FS_USED_SIZE_ARRAY[@]} )</fileline>
            <fileline lineNumber="95">  do</fileline>
            <fileline lineNumber="96">  	CALC_USED="$( expr ${Last_CALC_USED} + ${FS_Calc_used_CACL})"</fileline>
            <fileline lineNumber="97">    Last_CALC_USED="${CALC_USED}"</fileline>
            <fileline lineNumber="98">done</fileline>
            <fileline lineNumber="99">USED_TOTAL=${Last_CALC_USED}</fileline>
            <fileline lineNumber="100" />
            <fileline lineNumber="101">for FS_Calc_Free_CACL in $(echo ${FS_FREE_SIZE_ARRAY[@]} )</fileline>
            <fileline lineNumber="102">  do</fileline>
            <fileline lineNumber="103">  	CALC_Free="$( expr ${Last_CALC_Free} + ${FS_Calc_Free_CACL})"</fileline>
            <fileline lineNumber="104">    Last_CALC_Free="${CALC_Free}"</fileline>
            <fileline lineNumber="105">done</fileline>
            <fileline lineNumber="106">FREE_TOTAL=${Last_CALC_Free}</fileline>
            <fileline lineNumber="107" />
            <fileline lineNumber="108">for FS_Calc_SIZE_CACL in $(echo ${FS_SIZE_ARRAY[@]} )</fileline>
            <fileline lineNumber="109">  do</fileline>
            <fileline lineNumber="110">  	CALC_SIZE="$( expr ${Last_CALC_Free} + ${FS_Calc_Size_CACL})"</fileline>
            <fileline lineNumber="111">    Last_CALC_SIZE="${CALC_SIZE}"</fileline>
            <fileline lineNumber="112">done</fileline>
            <fileline lineNumber="113">SIZE_TOTAL=${Last_CALC_SIZE}</fileline>
            <fileline lineNumber="114" />
            <fileline lineNumber="115">MSG_DISPLAY "info" "1" "File Sytem TOTAL Size : [ ${SIZE_TOTAL} Mo ] Used : [ ${USED_TOTAL} Mo ] Free : [ ${FREE_TOTAL} Mo ] "</fileline>
            <fileline lineNumber="116">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="117">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="118">####################################################</fileline>
            <fileline lineNumber="119">}</fileline>
            <fileline lineNumber="120" />
            <fileline lineNumber="121" />
            <fileline lineNumber="122" />
            <fileline lineNumber="123">function FS_Get_all_stats</fileline>
            <fileline lineNumber="124">{</fileline>
            <fileline lineNumber="125">#|# Var to set  :</fileline>
            <fileline lineNumber="126">#|# FSAS_Name_To_Use : Use this var to set</fileline>
            <fileline lineNumber="127">#|# ${1}        : Use this var to set [ FSAS_Name_To_Use ]</fileline>
            <fileline lineNumber="128">#|#</fileline>
            <fileline lineNumber="129">#|# Base usage  :  FS_Get_all_stats "FS_Name"</fileline>
            <fileline lineNumber="130">#|#</fileline>
            <fileline lineNumber="131">#|# Description : This function is used to get all File system stat in Mega octet</fileline>
            <fileline lineNumber="132">#|#</fileline>
            <fileline lineNumber="133">#|# Send Back   : Fs Used/free/total size in Mo</fileline>
            <fileline lineNumber="134">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="135">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="136">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="137">######################################################</fileline>
            <fileline lineNumber="138">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="139" />
            <fileline lineNumber="140" />
            <fileline lineNumber="141">local FSAS_Name_To_Use="${1}"</fileline>
            <fileline lineNumber="142">Empty_Var_Control "${FSAS_Name_To_Use}" "FSAS_Name_To_Use"  "4"</fileline>
            <fileline lineNumber="143" />
            <fileline lineNumber="144">FS_Get_Used_Mo "${FSAS_Name_To_Use}"</fileline>
            <fileline lineNumber="145">FS_Get_Free_Mo "${FSAS_Name_To_Use}"</fileline>
            <fileline lineNumber="146">FS_Get_Size_Mo "${FSAS_Name_To_Use}"</fileline>
            <fileline lineNumber="147" />
            <fileline lineNumber="148">MSG_DISPLAY "info" "1" "File Sytem ${FSAS_Name_To_Use} Size : [ ${External_FS_Used_Mo_Result} Mo ] Used : [ ${External_FS_Used_Mo_Result} Mo ] Free : [ ${External_FS_Free_Mo_Result} Mo ] "</fileline>
            <fileline lineNumber="149" />
            <fileline lineNumber="150">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="151">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="152">####################################################</fileline>
            <fileline lineNumber="153">}</fileline>
            <fileline lineNumber="154" />
            <fileline lineNumber="155">function FS_Get_Used_Mo</fileline>
            <fileline lineNumber="156">{</fileline>
            <fileline lineNumber="157">#|# Var to set  :</fileline>
            <fileline lineNumber="158">#|# FSUM_Name_To_Use : Use this var to set</fileline>
            <fileline lineNumber="159">#|# ${1}        : Use this var to set [ FSUM_Name_To_Use ]</fileline>
            <fileline lineNumber="160">#|#</fileline>
            <fileline lineNumber="161">#|# Base usage  :  FS_Get_Used_Mo "FS_Name"</fileline>
            <fileline lineNumber="162">#|#</fileline>
            <fileline lineNumber="163">#|# Description : This function is used to get used File system size in Mega octet</fileline>
            <fileline lineNumber="164">#|#</fileline>
            <fileline lineNumber="165">#|# Send Back   : Fs Used size in Mo</fileline>
            <fileline lineNumber="166">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="167">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="168">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="169">######################################################</fileline>
            <fileline lineNumber="170">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="171" />
            <fileline lineNumber="172" />
            <fileline lineNumber="173" />
            <fileline lineNumber="174">local FSUM_Name_To_Use="${1}"</fileline>
            <fileline lineNumber="175">Empty_Var_Control "${FSUM_Name_To_Use}" "FSUM_Name_To_Use"  "4"</fileline>
            <fileline lineNumber="176" />
            <fileline lineNumber="177">FSUM_Used_Base="$(df -P ${FSUM_Name_To_Use} | grep ${FSUM_Name_To_Use} | awk '{print $3}')"</fileline>
            <fileline lineNumber="178">FSUM_Used_Mo_Result="$( expr  ${FSUM_Used_Base} \/ 1024 )"</fileline>
            <fileline lineNumber="179" />
            <fileline lineNumber="180">MSG_DISPLAY "debug" "0" "Resulte of Used space for ${FSFM_Name_To_Use} : [ ${FSFM_Free_Mo_Result} ]"</fileline>
            <fileline lineNumber="181" />
            <fileline lineNumber="182">External_FS_Used_Mo_Result="${FSUM_Used_Mo_Result}"</fileline>
            <fileline lineNumber="183">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="184">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="185">####################################################</fileline>
            <fileline lineNumber="186">}</fileline>
            <fileline lineNumber="187" />
            <fileline lineNumber="188">function FS_Get_Free_Mo</fileline>
            <fileline lineNumber="189">{</fileline>
            <fileline lineNumber="190">#|# Var to set  :</fileline>
            <fileline lineNumber="191">#|# FSFM_Name_To_Use : Use this var to set</fileline>
            <fileline lineNumber="192">#|# ${1}        : Use this var to set [ FSFM_Name_To_Use ]</fileline>
            <fileline lineNumber="193">#|#</fileline>
            <fileline lineNumber="194">#|# Base usage  :  FS_Get_Free_Mo "FS_Name"</fileline>
            <fileline lineNumber="195">#|#</fileline>
            <fileline lineNumber="196">#|# Description : This function is used to get free File system size in Mega octet</fileline>
            <fileline lineNumber="197">#|#</fileline>
            <fileline lineNumber="198">#|# Send Back   : Fs free size in Mo</fileline>
            <fileline lineNumber="199">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="200">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="201">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="202">######################################################</fileline>
            <fileline lineNumber="203">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="204" />
            <fileline lineNumber="205" />
            <fileline lineNumber="206" />
            <fileline lineNumber="207">local FSFM_Name_To_Use="${1}"</fileline>
            <fileline lineNumber="208">Empty_Var_Control "${FSFM_Name_To_Use}" "FSFM_Name_To_Use"  "4"</fileline>
            <fileline lineNumber="209" />
            <fileline lineNumber="210">FSFM_Free_Base="$(df -P ${FSFM_Name_To_Use} | grep ${FSFM_Name_To_Use} | awk '{print $4}')"</fileline>
            <fileline lineNumber="211">FSFM_Free_Mo_Result="$( expr  ${FSFM_Free_Base} \/ 1024 )"</fileline>
            <fileline lineNumber="212">MSG_DISPLAY "debug" "0" "Resulte of free space for ${FSFM_Name_To_Use} : [ ${FSFM_Free_Mo_Result} ]"</fileline>
            <fileline lineNumber="213" />
            <fileline lineNumber="214">External_FS_Free_Mo_Result="${FSFM_Free_Mo_Result}"</fileline>
            <fileline lineNumber="215">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="216">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="217">####################################################</fileline>
            <fileline lineNumber="218">}</fileline>
            <fileline lineNumber="219" />
            <fileline lineNumber="220">function FS_Get_Size_Mo</fileline>
            <fileline lineNumber="221">{</fileline>
            <fileline lineNumber="222">#|# Var to set  :</fileline>
            <fileline lineNumber="223">#|# FSGS_Name_To_Use : Use this var to set</fileline>
            <fileline lineNumber="224">#|# ${1}        : Use this var to set [ FSGS_Name_To_Use ]</fileline>
            <fileline lineNumber="225">#|#</fileline>
            <fileline lineNumber="226">#|# Base usage  :  FS_Get_Size_Mo "FS_Name"</fileline>
            <fileline lineNumber="227">#|#</fileline>
            <fileline lineNumber="228">#|# Description : This function is used to get File system size in Mega octet</fileline>
            <fileline lineNumber="229">#|#</fileline>
            <fileline lineNumber="230">#|# Send Back   : Fs size in Mo</fileline>
            <fileline lineNumber="231">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="232">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="233">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="234">######################################################</fileline>
            <fileline lineNumber="235">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="236" />
            <fileline lineNumber="237" />
            <fileline lineNumber="238" />
            <fileline lineNumber="239">local FSGS_Name_To_Use="${1}"</fileline>
            <fileline lineNumber="240">Empty_Var_Control "${FSGS_Name_To_Use}" "FSGS_Name_To_Use"  "4"</fileline>
            <fileline lineNumber="241" />
            <fileline lineNumber="242">FSGS_Size_Base="$(df -P ${FSGS_Name_To_Use} | grep ${FSGS_Name_To_Use} | awk '{print $2}')"</fileline>
            <fileline lineNumber="243">FSGS_Size_Mo_Result="$( expr  ${FSGS_Size_Base} \/ 1024 )"</fileline>
            <fileline lineNumber="244" />
            <fileline lineNumber="245">MSG_DISPLAY "debug" "0" "Resulte of Size for ${FSFM_Name_To_Use} : [ ${FSFM_Free_Mo_Result} ]"</fileline>
            <fileline lineNumber="246" />
            <fileline lineNumber="247">External_FS_Size_Mo_Result="${FSGS_Size_Mo_Result}"</fileline>
            <fileline lineNumber="248">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="249">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="250">####################################################</fileline>
            <fileline lineNumber="251">}</fileline>
            <fileline lineNumber="252" />
            <fileline lineNumber="253">function FS_check_if_present</fileline>
            <fileline lineNumber="254">{</fileline>
            <fileline lineNumber="255">#|# Var to set  :</fileline>
            <fileline lineNumber="256">#|# FSGS_Name_To_Use : Use this var to set</fileline>
            <fileline lineNumber="257">#|# ${1}        : Use this var to set [ FSGS_Name_To_Use ]</fileline>
            <fileline lineNumber="258">#|#</fileline>
            <fileline lineNumber="259">#|# Base usage  :  FS_check_if_present "FS_Name"</fileline>
            <fileline lineNumber="260">#|#</fileline>
            <fileline lineNumber="261">#|# Description : This function is used to check FS is present</fileline>
            <fileline lineNumber="262">#|#</fileline>
            <fileline lineNumber="263">#|# Send Back   : Fs status </fileline>
            <fileline lineNumber="264">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="265">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="266">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="267">######################################################</fileline>
            <fileline lineNumber="268">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="269" />
            <fileline lineNumber="270" />
            <fileline lineNumber="271" />
            <fileline lineNumber="272">local FSGS_Name_To_Use="${1}"</fileline>
            <fileline lineNumber="273">Empty_Var_Control "${FSGS_Name_To_Use}" "FSGS_Name_To_Use"  "4"</fileline>
            <fileline lineNumber="274" />
            <fileline lineNumber="275">df ${FSGS_Name_To_Use} 2&gt; /dev/null</fileline>
            <fileline lineNumber="276">CTRL_Result_func "${?}" "FS check on mount point : [ ${FSGS_Name_To_Use}] " "Can t find it " "1" </fileline>
            <fileline lineNumber="277" />
            <fileline lineNumber="278" />
            <fileline lineNumber="279">External_FS_Size_Mo_Result="${FSGS_Size_Mo_Result}"</fileline>
            <fileline lineNumber="280">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="281">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="282">####################################################</fileline>
            <fileline lineNumber="283">}</fileline>
            <fileline lineNumber="284" />
            <fileline lineNumber="285">function FS_Build_Catalog </fileline>
            <fileline lineNumber="286">{</fileline>
            <fileline lineNumber="287">#|# Var to set  :</fileline>
            <fileline lineNumber="288">#|#                No var to set </fileline>
            <fileline lineNumber="289">#|# Base usage  :  FS_Build_Catalog  </fileline>
            <fileline lineNumber="290">#|#</fileline>
            <fileline lineNumber="291">#|# Description : This function is used to File system catalog information.</fileline>
            <fileline lineNumber="292">#|#</fileline>
            <fileline lineNumber="293">#|# Send Back   : File system catalog in /srv/admin/data/catalogue/FileSystem.cat</fileline>
            <fileline lineNumber="294">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="295">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="296">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="297">######################################################</fileline>
            <fileline lineNumber="298">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="299" />
            <fileline lineNumber="300" />
            <fileline lineNumber="301">Test_file_presence "${Base_FS_catalogue}" "Create_File" "0"  ""  ""</fileline>
            <fileline lineNumber="302">df -h | awk '{ print $1 "|" $6 "|" $5  }'  &gt; ${Base_FS_catalogue} </fileline>
            <fileline lineNumber="303" />
            <fileline lineNumber="304" />
            <fileline lineNumber="305">External_FS_Size_Mo_Result="${FSGS_Size_Mo_Result}"</fileline>
            <fileline lineNumber="306">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="307">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="308">####################################################		</fileline>
            <fileline lineNumber="309" />
            <fileline lineNumber="310">}</fileline>
            <fileline lineNumber="311" />
            <fileline lineNumber="312">function FS_DISPLAY_Catalog </fileline>
            <fileline lineNumber="313">{</fileline>
            <fileline lineNumber="314">#|# Var to set  :</fileline>
            <fileline lineNumber="315">#|#                No var to set </fileline>
            <fileline lineNumber="316">#|# Base usage  :  FS_Build_Catalog  </fileline>
            <fileline lineNumber="317">#|#</fileline>
            <fileline lineNumber="318">#|# Description : This function is used to File system catalog information.</fileline>
            <fileline lineNumber="319">#|#</fileline>
            <fileline lineNumber="320">#|# Send Back   : File system catalog in /srv/admin/data/catalogue/FileSystem.cat</fileline>
            <fileline lineNumber="321">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="322">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="323">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="324">######################################################</fileline>
            <fileline lineNumber="325">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="326" />
            <fileline lineNumber="327" />
            <fileline lineNumber="328">Test_file_presence "${Base_FS_catalogue}" "Create_File" "2"  ""  ""</fileline>
            <fileline lineNumber="329">df -h | awk '{ print $1 "|" $6 "|" $5  }'  &gt; ${Base_FS_catalogue} </fileline>
            <fileline lineNumber="330" />
            <fileline lineNumber="331" />
            <fileline lineNumber="332">External_FS_Size_Mo_Result="${FSGS_Size_Mo_Result}"</fileline>
            <fileline lineNumber="333">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="334">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="335">####################################################		</fileline>
            <fileline lineNumber="336" />
            <fileline lineNumber="337">}</fileline>
            <fileline lineNumber="338" />
            <fileline lineNumber="339" />
            <fileline lineNumber="340" />
            <fileline lineNumber="341"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/system_base/file_system/loop_device_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                        #</fileline>
            <fileline lineNumber="5"># Subject : This library provide base loop device manipulation runtimes       #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO </fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11">function Do_device_loop_Create_base_file</fileline>
            <fileline lineNumber="12">{</fileline>
            <fileline lineNumber="13">#|# Base_Var_File_Loop_To_Create       : use this var to set the loop file to create </fileline>
            <fileline lineNumber="14">#|# Base_Var_File_Loop_Size_To_Create  : Use this var to set the size of the lopp file to create</fileline>
            <fileline lineNumber="15">#|# Base usage : </fileline>
            <fileline lineNumber="16">#|#              Base_Var_File_Loop_To_Create="My_device_file" ( full path ) </fileline>
            <fileline lineNumber="17">#|#              Base_Var_File_Loop_Size_To_Create="My_size" (for  100 mo = 100 * 1000 = 100000 ) </fileline>
            <fileline lineNumber="18">#|#              Device_loop_Create</fileline>
            <fileline lineNumber="19">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="20">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="21">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="22">######################################################</fileline>
            <fileline lineNumber="23">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="24" />
            <fileline lineNumber="25" />
            <fileline lineNumber="26" />
            <fileline lineNumber="27">File_Exist "${Base_Var_File_Loop_To_Create}" "Create_File" "2" </fileline>
            <fileline lineNumber="28">if [ "${RETURNVAR_Test_file_presence}" = "1" ]</fileline>
            <fileline lineNumber="29">    then </fileline>
            <fileline lineNumber="30">     MSG_TO_Display="the loop file already existe do you want to continue and overwrite ?"</fileline>
            <fileline lineNumber="31">     USER_Continue_ON_ERR</fileline>
            <fileline lineNumber="32">    else </fileline>
            <fileline lineNumber="33">    dd if=/dev/zero of=${Base_Var_File_Loop_To_Create} bs=1k count=${Base_Var_File_Loop_Size_To_Create}</fileline>
            <fileline lineNumber="34">fi</fileline>
            <fileline lineNumber="35" />
            <fileline lineNumber="36">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="37">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="38">#################################################### </fileline>
            <fileline lineNumber="39">}</fileline>
            <fileline lineNumber="40" />
            <fileline lineNumber="41">function Loop_linker_format</fileline>
            <fileline lineNumber="42">{</fileline>
            <fileline lineNumber="43">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="44">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="45">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="46">######################################################</fileline>
            <fileline lineNumber="47">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="48" />
            <fileline lineNumber="49" />
            <fileline lineNumber="50" />
            <fileline lineNumber="51">MSG_DISPLAY "info" "1" "Creating links between loop and files  : [ Started ] "</fileline>
            <fileline lineNumber="52" />
            <fileline lineNumber="53">last_att_loop=$(cat ${Base_Chroot_catalog_file} | grep last_loop | awk '{ print $2 }')</fileline>
            <fileline lineNumber="54">New_att_loop=$(expr ${last_att_loop} + 1) </fileline>
            <fileline lineNumber="55">echo "${Chroot_Name}| created on $(date) | | |D|" &gt;&gt; ${Base_Chroot_catalog_file}</fileline>
            <fileline lineNumber="56">echo " echo \" regenerating configuration loop device for ${Chroot_Name}\"" &gt;&gt; ${Base_Dir_Scripts_Tmp_Auto_Lib}/Loop_configuration.ksh</fileline>
            <fileline lineNumber="57">for Loops_to_map in ${Loops_File_Liste}</fileline>
            <fileline lineNumber="58">do </fileline>
            <fileline lineNumber="59">   echo "losetup /dev/loop${New_att_loop} ${Loops_to_map}"</fileline>
            <fileline lineNumber="60">   losetup /dev/loop${New_att_loop} ${Loops_to_map}</fileline>
            <fileline lineNumber="61">   echo "${Chroot_Name}| loop Device loop${New_att_loop} | file   |  ${Loops_to_map}|T|" &gt;&gt; ${Base_Chroot_catalog_file}</fileline>
            <fileline lineNumber="62">   echo "losetup /dev/loop${New_att_loop} ${Loops_to_map}" &gt;&gt; ${Base_Scriptname_auto_loop_conf}</fileline>
            <fileline lineNumber="63">   echo "losetup -d /dev/loop${New_att_loop} "   &gt;&gt; ${Base_Scriptname_auto_loop_deconf}</fileline>
            <fileline lineNumber="64">   mkfs.ext2 /dev/loop${New_att_loop} </fileline>
            <fileline lineNumber="65">   New_att_loop=$(expr ${New_att_loop} + 1) </fileline>
            <fileline lineNumber="66">done</fileline>
            <fileline lineNumber="67">echo "" &gt;&gt;  ${Base_Chroot_catalog_file}  </fileline>
            <fileline lineNumber="68">cat ${Base_Chroot_catalog_file} | egrep -v last_loop &gt; ${Base_Chroot_catalog_tmp_file}</fileline>
            <fileline lineNumber="69">cat ${Base_Chroot_catalog_tmp_file} &gt; ${Base_Chroot_catalog_file}</fileline>
            <fileline lineNumber="70">echo "last_loop ${New_att_loop}" &gt;&gt; ${Base_Chroot_catalog_file}</fileline>
            <fileline lineNumber="71">MSG_DISPLAY "info" "1" "Creating links between loop and files  : [ Started ] "</fileline>
            <fileline lineNumber="72" />
            <fileline lineNumber="73" />
            <fileline lineNumber="74">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="75">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="76">#################################################### </fileline>
            <fileline lineNumber="77">}</fileline>
            <fileline lineNumber="78" />
            <fileline lineNumber="79" />
            <fileline lineNumber="80"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/system_base/file_system/lvm_device_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                                  #</fileline>
            <fileline lineNumber="5"># Subject : This library provide base loop device manipulation runtimes       #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO </fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11">function Do_lvm_device_create</fileline>
            <fileline lineNumber="12">{</fileline>
            <fileline lineNumber="13">#|# Var to set  : </fileline>
            <fileline lineNumber="14">#|# LVMDC_Name_lv : Use this var to set name of the created lv ( Mandatory )</fileline>
            <fileline lineNumber="15">#|# LVMDC_Size_lv : Use this var to set size of the created lv ( Mandatory )</fileline>
            <fileline lineNumber="16">#|# LVMDC_VG_NAME : Use this var to set name of the used vg    ( Mandatory )</fileline>
            <fileline lineNumber="17">#|# ${1}          : Use this var to set [ LVMDC_Name_lv ]                   </fileline>
            <fileline lineNumber="18">#|# ${2}          : Use this var to set [ LVMDC_Size_lv ]</fileline>
            <fileline lineNumber="19">#|# ${3}          : Use this var to set [ LVMDC_VG_NAME ]                 </fileline>
            <fileline lineNumber="20">#|#</fileline>
            <fileline lineNumber="21">#|# Base usage  : Do_lvm_device_create "LVMDC_Name_lv" "LVMDC_Size_lv" "LVMDC_VG_NAME" </fileline>
            <fileline lineNumber="22">#|#</fileline>
            <fileline lineNumber="23">#|# Description : This function is used to creat lvm logical volume</fileline>
            <fileline lineNumber="24">#|#</fileline>
            <fileline lineNumber="25">#|# Send Back   : lvm logical volume</fileline>
            <fileline lineNumber="26">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="27">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="28">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="29">######################################################</fileline>
            <fileline lineNumber="30">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="31" />
            <fileline lineNumber="32" />
            <fileline lineNumber="33">local LVMDC_Name_lv="${1}"                    </fileline>
            <fileline lineNumber="34">local LVMDC_Size_lv="${2}" </fileline>
            <fileline lineNumber="35">local LVMDC_VG_NAME="${3}"  </fileline>
            <fileline lineNumber="36" />
            <fileline lineNumber="37">Empty_Var_Control "${LVMDC_Name_lv}" "LVMDC_Name_lv"  "4" " logical volume name is a mandatory parameter "</fileline>
            <fileline lineNumber="38">Empty_Var_Control "${LVMDC_Size_lv}" "LVMDC_Size_lv"  "4" " logical volume size is a mandatory parameter "</fileline>
            <fileline lineNumber="39">Empty_Var_Control "${LVMDC_VG_NAME}" "LVMDC_VG_NAME"  "4" " volume group name is a mandatory parameter "</fileline>
            <fileline lineNumber="40" />
            <fileline lineNumber="41">lvcreate -L ${LVMDC_Size_lv} -n ${LVMDC_Name_lv} ${LVMDC_VG_NAME} </fileline>
            <fileline lineNumber="42">CTRL_Result_func "${?}" "Creation of logical volume ${LVMDC_Name_lv} on vg ${LVMDC_VG_NAME}" " [ can't create ] " "2" "" ""</fileline>
            <fileline lineNumber="43">Test_lvm_device_presence "${LVMDC_Name_lv}" "${LVMDC_VG_NAME}"  "2" "" ""</fileline>
            <fileline lineNumber="44">################# Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="45">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="46">###################################################### 	</fileline>
            <fileline lineNumber="47">}</fileline>
            <fileline lineNumber="48" />
            <fileline lineNumber="49">function Do_lvm_device_delete</fileline>
            <fileline lineNumber="50">{</fileline>
            <fileline lineNumber="51">#|# Var to set  : </fileline>
            <fileline lineNumber="52">#|# LVMDD_Name_lv : Use this var to set ( Mandatory )</fileline>
            <fileline lineNumber="53">#|# LVMDD_VG_NAME : Use this var to set ( Mandatory )</fileline>
            <fileline lineNumber="54">#|# ${1}          : Use this var to set [ LVMDD_Name_lv ]                   </fileline>
            <fileline lineNumber="55">#|# ${2}          : Use this var to set [ LVMDD_VG_NAME ]                 </fileline>
            <fileline lineNumber="56">#|#</fileline>
            <fileline lineNumber="57">#|# Base usage  : Do_lvm_device_delete "LVMDD_Name_lv" "LVMDD_VG_NAME" </fileline>
            <fileline lineNumber="58">#|#</fileline>
            <fileline lineNumber="59">#|# Description : This function is used to delete lvm logical volume</fileline>
            <fileline lineNumber="60">#|#</fileline>
            <fileline lineNumber="61">#|# Send Back   : lvm logical volume deletion</fileline>
            <fileline lineNumber="62">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="63">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="64">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="65">######################################################</fileline>
            <fileline lineNumber="66">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="67" />
            <fileline lineNumber="68" />
            <fileline lineNumber="69">local LVMDD_Name_lv="${1}"                    </fileline>
            <fileline lineNumber="70">local LVMDD_VG_NAME="${2}" </fileline>
            <fileline lineNumber="71" />
            <fileline lineNumber="72">Empty_Var_Control "${LVMDD_Name_lv}" "LVMDD_Name_lv"  "4" " logical volume name is a mandatory parameter "</fileline>
            <fileline lineNumber="73">Empty_Var_Control "${LVMDD_VG_NAME}" "LVMDD_VG_NAME"  "4" " volume group name is a mandatory parameter "</fileline>
            <fileline lineNumber="74" />
            <fileline lineNumber="75">lvremove  /dev/${LVMDD_VG_NAME}/${LVMDD_Name_lv}</fileline>
            <fileline lineNumber="76" />
            <fileline lineNumber="77">CTRL_Result_func "${?}" "Deletion of logical volume ${LVMDC_Name_lv} on vg ${LVMDC_VG_NAME}" " [ can't create ] " "2" "" ""</fileline>
            <fileline lineNumber="78">################# Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="79">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="80">###################################################### 	</fileline>
            <fileline lineNumber="81">}</fileline>
            <fileline lineNumber="82" />
            <fileline lineNumber="83">function Test_lvm_device_presence</fileline>
            <fileline lineNumber="84">{</fileline>
            <fileline lineNumber="85">#|# Var to set  : </fileline>
            <fileline lineNumber="86">#|# LVMDEX_Name_lv        : Use this var to set Logical volume name to check ( Mandatory )</fileline>
            <fileline lineNumber="87">#|# LVMDEX_VG_NAME        : Use this var to set Volume group name of the lv  ( Mandatory )</fileline>
            <fileline lineNumber="88">#|# LVMDEX_err_level      : Use this var to set error level of the check     ( Mandatory )</fileline>
            <fileline lineNumber="89">#|# LVMDEX_On_Fail_Action : Use this var to set on chek fail action          ( Optional )</fileline>
            <fileline lineNumber="90">#|# LVMDEX_On_ok_Action   : Use this var to set on check ok action           ( Optional )</fileline>
            <fileline lineNumber="91">#|# ${1}          : Use this var to set [ LVMDEX_Name_lv ]                   </fileline>
            <fileline lineNumber="92">#|# ${2}          : Use this var to set [ LVMDEX_VG_NAME ]</fileline>
            <fileline lineNumber="93">#|# ${3}          : Use this var to set [ LVMDEX_err_level ]                   </fileline>
            <fileline lineNumber="94">#|# ${4}          : Use this var to set [ LVMDEX_On_Fail_Action ]</fileline>
            <fileline lineNumber="95">#|# ${5}          : Use this var to set [ LVMDEX_On_ok_Action ]              </fileline>
            <fileline lineNumber="96">#|#</fileline>
            <fileline lineNumber="97">#|# Base usage  : Do_lvm_device_delete "LVMDEX_Name_lv" "LVMDEX_VG_NAME"  "LVMDEX_err_level" "LVMDEX_On_Fail_Action" "LVMDEX_On_ok_Action"</fileline>
            <fileline lineNumber="98">#|#</fileline>
            <fileline lineNumber="99">#|# Description : This function is used to check existance of a lvm logical volume</fileline>
            <fileline lineNumber="100">#|#</fileline>
            <fileline lineNumber="101">#|# Send Back   : lvm logical volume Information and action </fileline>
            <fileline lineNumber="102">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="103">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="104">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="105">######################################################</fileline>
            <fileline lineNumber="106">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="107" />
            <fileline lineNumber="108" />
            <fileline lineNumber="109">local LVMDEX_Name_lv="${1}"                 </fileline>
            <fileline lineNumber="110">local LVMDEX_VG_NAME="${2}"</fileline>
            <fileline lineNumber="111">local LVMDEX_err_level="${3}"                </fileline>
            <fileline lineNumber="112">local LVMDEX_On_Fail_Action="${4}"</fileline>
            <fileline lineNumber="113">local LVMDEX_On_ok_Action="${5}"   </fileline>
            <fileline lineNumber="114" />
            <fileline lineNumber="115">Empty_Var_Control "${LVMDEX_Name_lv}"   "LVMDEX_Name_lv"    "4" " logical volume name is a mandatory parameter "</fileline>
            <fileline lineNumber="116">Empty_Var_Control "${LVMDEX_VG_NAME}"   "LVMDEX_VG_NAME"    "4" " volume group name is a mandatory parameter "</fileline>
            <fileline lineNumber="117">Empty_Var_Control "${LVMDEX_err_level}" "LVMDEX_err_level"  "4" " error level is a mandatory parameter "</fileline>
            <fileline lineNumber="118" />
            <fileline lineNumber="119">lvdisplay  /dev/${LVMDEX_VG_NAME}/${LVMDEX_Name_lv} &gt; /dev/null</fileline>
            <fileline lineNumber="120">CTRL_Result_func "${?}" "Status of logical volume ${LVMDEX_Name_lv} on vg ${LVMDEX_VG_NAME}" " [ Not present ] " "${LVMDEX_err_level}" "${LVMDEX_On_Fail_Action}" "${LVMDEX_On_ok_Action}"</fileline>
            <fileline lineNumber="121" />
            <fileline lineNumber="122">################# Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="123">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="124">###################################################### 	</fileline>
            <fileline lineNumber="125">}</fileline>
            <fileline lineNumber="126" />
            <fileline lineNumber="127">function Get_lvm_volume_group_status</fileline>
            <fileline lineNumber="128">{</fileline>
            <fileline lineNumber="129">#|# LVM_device_vg_name          : Use this var to set the name of the checked VG</fileline>
            <fileline lineNumber="130">#|# LVM_device_vg_Status_action : Use this var to set the action chek to do </fileline>
            <fileline lineNumber="131">#|# ${1}                        : To set LVM_device_vg_name</fileline>
            <fileline lineNumber="132">#|# ${2}                        : To set LVM_device_vg_Status_action</fileline>
            <fileline lineNumber="133">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="134">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="135">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="136">######################################################</fileline>
            <fileline lineNumber="137">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="138" />
            <fileline lineNumber="139" />
            <fileline lineNumber="140">local LVM_device_vg_name="${1}"</fileline>
            <fileline lineNumber="141" />
            <fileline lineNumber="142">case ${LVM_device_vg_Status_action} in </fileline>
            <fileline lineNumber="143">                 free_space) vgdisplay ${LVM_device_vg_name} | grep "VG Name" </fileline>
            <fileline lineNumber="144">						     vgdisplay ${LVM_device_vg_name} | grep "Free  PE"  | awk '{ print $1 " " $4 " " $7 " " $8 }'</fileline>
            <fileline lineNumber="145">						     ;;</fileline>
            <fileline lineNumber="146">                 list) vgdisplay  | grep "VG Name" </fileline>
            <fileline lineNumber="147">                 ;;</fileline>
            <fileline lineNumber="148">                 *)</fileline>
            <fileline lineNumber="149">esac</fileline>
            <fileline lineNumber="150" />
            <fileline lineNumber="151">################# Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="152">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="153">###################################################### 	</fileline>
            <fileline lineNumber="154">}</fileline>
            <fileline lineNumber="155" />
            <fileline lineNumber="156">function Get_lvm_volume_volume_liste</fileline>
            <fileline lineNumber="157">{</fileline>
            <fileline lineNumber="158">#|# This function is used to get full list of all LV device on the computer.</fileline>
            <fileline lineNumber="159">#|# LVM_device_VAR          : This var is user to store the name of var used to send back data.</fileline>
            <fileline lineNumber="160">#|# </fileline>
            <fileline lineNumber="161">#|# ${1}                        : To set LVM_device_vg_name</fileline>
            <fileline lineNumber="162">#|# ${2}                        : To set LVM_device_vg_Status_action</fileline>
            <fileline lineNumber="163">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="164">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="165">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="166">######################################################</fileline>
            <fileline lineNumber="167">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="168" />
            <fileline lineNumber="169" />
            <fileline lineNumber="170">LVM_device_VAR="${1}"</fileline>
            <fileline lineNumber="171" />
            <fileline lineNumber="172">MSG_DISPLAY "debug" "0" "Send back var is : [ ${LVM_device_VAR} ]"</fileline>
            <fileline lineNumber="173" />
            <fileline lineNumber="174">################# Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="175">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="176">######################################################</fileline>
            <fileline lineNumber="177">}</fileline>
            <fileline lineNumber="178" />
            <fileline lineNumber="179" />
            <fileline lineNumber="180">function Loop_linker_format</fileline>
            <fileline lineNumber="181">{</fileline>
            <fileline lineNumber="182">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="183">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="184">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="185">######################################################</fileline>
            <fileline lineNumber="186">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="187" />
            <fileline lineNumber="188" />
            <fileline lineNumber="189" />
            <fileline lineNumber="190">MSG_DISPLAY "info" "1" "Creating links between loop and files  : [ Started ] "</fileline>
            <fileline lineNumber="191" />
            <fileline lineNumber="192">last_att_loop=$(cat ${Base_Chroot_catalog_file} | grep last_loop | awk '{ print $2 }')</fileline>
            <fileline lineNumber="193">New_att_loop=$(expr ${last_att_loop} + 1) </fileline>
            <fileline lineNumber="194">echo "${Chroot_Name}| created on $(date) | | |D|" &gt;&gt; ${Base_Chroot_catalog_file}</fileline>
            <fileline lineNumber="195">echo " echo \" regenerating configuration loop device for ${Chroot_Name}\"" &gt;&gt; ${Base_Dir_Scripts_Tmp_Auto_Lib}/Loop_configuration.ksh</fileline>
            <fileline lineNumber="196">for Loops_to_map in ${Loops_File_Liste}</fileline>
            <fileline lineNumber="197">do </fileline>
            <fileline lineNumber="198">   echo "losetup /dev/loop${New_att_loop} ${Loops_to_map}"</fileline>
            <fileline lineNumber="199">   losetup /dev/loop${New_att_loop} ${Loops_to_map}</fileline>
            <fileline lineNumber="200">   echo "${Chroot_Name}| loop Device loop${New_att_loop} | file   |  ${Loops_to_map}|T|" &gt;&gt; ${Base_Chroot_catalog_file}</fileline>
            <fileline lineNumber="201">   echo "losetup /dev/loop${New_att_loop} ${Loops_to_map}" &gt;&gt; ${Base_Scriptname_auto_loop_conf}</fileline>
            <fileline lineNumber="202">   echo "losetup -d /dev/loop${New_att_loop} "   &gt;&gt; ${Base_Scriptname_auto_loop_deconf}</fileline>
            <fileline lineNumber="203">   mkfs.ext2 /dev/loop${New_att_loop} </fileline>
            <fileline lineNumber="204">   New_att_loop=$(expr ${New_att_loop} + 1) </fileline>
            <fileline lineNumber="205">done</fileline>
            <fileline lineNumber="206">echo "" &gt;&gt;  ${Base_Chroot_catalog_file}  </fileline>
            <fileline lineNumber="207">cat ${Base_Chroot_catalog_file} | egrep -v last_loop &gt; ${Base_Chroot_catalog_tmp_file}</fileline>
            <fileline lineNumber="208">cat ${Base_Chroot_catalog_tmp_file} &gt; ${Base_Chroot_catalog_file}</fileline>
            <fileline lineNumber="209">echo "last_loop ${New_att_loop}" &gt;&gt; ${Base_Chroot_catalog_file}</fileline>
            <fileline lineNumber="210">MSG_DISPLAY "info" "1" "Creating links between loop and files  : [ Started ] "</fileline>
            <fileline lineNumber="211" />
            <fileline lineNumber="212" />
            <fileline lineNumber="213">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="214">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="215">#################################################### </fileline>
            <fileline lineNumber="216">}</fileline>
            <fileline lineNumber="217" />
            <fileline lineNumber="218" />
            <fileline lineNumber="219"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/system_base/install/apt_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                 #</fileline>
            <fileline lineNumber="5"># Subject : This library provide base elements needed by C.A.S.T. scripts     #</fileline>
            <fileline lineNumber="6">#           tto deploy or install packages on debian like systems             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO </fileline>
            <fileline lineNumber="10">#      this lib is for all linux based systems ( may run on solaris and AIX but not supported in this version )</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12">function Do_apt_autoupdate ()</fileline>
            <fileline lineNumber="13">{</fileline>
            <fileline lineNumber="14">#|# Description : This function is used to update all package definition on debian like system. </fileline>
            <fileline lineNumber="15">#|#</fileline>
            <fileline lineNumber="16">#|# Var to set    : none</fileline>
            <fileline lineNumber="17">#|#</fileline>
            <fileline lineNumber="18">#|# Base usage  : Do_apt_autoupdate "</fileline>
            <fileline lineNumber="19">#|#</fileline>
            <fileline lineNumber="20">#|# Send Back   : system updated package catalogue </fileline>
            <fileline lineNumber="21">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="22">Function_PATH="${Function_PATH}/${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="23">######################################################</fileline>
            <fileline lineNumber="24">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="25" />
            <fileline lineNumber="26" />
            <fileline lineNumber="27">if [ ${_apt_update_runed} = 1 ]</fileline>
            <fileline lineNumber="28">   then </fileline>
            <fileline lineNumber="29">        MSG_DISPLAY "debug" "0" "Package Catalogue update : [ DONE ] "</fileline>
            <fileline lineNumber="30">   else</fileline>
            <fileline lineNumber="31">        MSG_DISPLAY "debug" "0" "Package ${aptPackageStatus} : [ RUN ] " </fileline>
            <fileline lineNumber="32">        apt-get update &gt; /dev/null 2&gt;&amp;1 </fileline>
            <fileline lineNumber="33">        CTRL_Result_func "${?}" "status for package catalogue update : " "Not Installed" "4" "" "" "nomsg"</fileline>
            <fileline lineNumber="34">fi </fileline>
            <fileline lineNumber="35" />
            <fileline lineNumber="36">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="37">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="38">#################################################### </fileline>
            <fileline lineNumber="39" />
            <fileline lineNumber="40">}</fileline>
            <fileline lineNumber="41" />
            <fileline lineNumber="42" />
            <fileline lineNumber="43">function Do_apt_install_package</fileline>
            <fileline lineNumber="44">{</fileline>
            <fileline lineNumber="45">#|# Description : This function is used to manage installation of apt packages on system. </fileline>
            <fileline lineNumber="46">#|#</fileline>
            <fileline lineNumber="47">#|# Var to set    :</fileline>
            <fileline lineNumber="48">#|#                 aptPackageToInstall  : Use this var to set wiche package to install with apt</fileline>
            <fileline lineNumber="49">#|#                 ${1}            : Use this var to set [ aptPackageToInstall ]</fileline>
            <fileline lineNumber="50">#|#</fileline>
            <fileline lineNumber="51">#|# Base usage  : Do_apt_install_package "My_package_to_install"</fileline>
            <fileline lineNumber="52">#|#</fileline>
            <fileline lineNumber="53">#|# Send Back   : Installed package</fileline>
            <fileline lineNumber="54">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="55">Function_PATH="${Function_PATH}/${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="56">######################################################</fileline>
            <fileline lineNumber="57">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="58" />
            <fileline lineNumber="59" />
            <fileline lineNumber="60">local aptPackageToInstall="${1}"</fileline>
            <fileline lineNumber="61">Empty_Var_Control "${aptPackageToInstall}" "aptPackageToInstall"  "4" "package name is a mandatory parameter "</fileline>
            <fileline lineNumber="62">Test_apt_package_presence ${aptPackageToInstall}</fileline>
            <fileline lineNumber="63">if [ "${aptPackageStatus}" = "NOT INSTALLED" ] </fileline>
            <fileline lineNumber="64">then </fileline>
            <fileline lineNumber="65">    apt-get install ${aptPackageToInstall} -y&gt; /dev/null 2&gt;&amp;1 </fileline>
            <fileline lineNumber="66">    CTRL_Result_func "${?}" "status for package : [ ${aptPackageToCheck}] " "Not Installed" "4" "" "" "nomsg"</fileline>
            <fileline lineNumber="67">else</fileline>
            <fileline lineNumber="68">    MSG_DISPLAY "debug" "0" "Package ${aptPackageStatus} : [ INSTALLED ] "</fileline>
            <fileline lineNumber="69">fi</fileline>
            <fileline lineNumber="70" />
            <fileline lineNumber="71">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="72">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="73">#################################################### </fileline>
            <fileline lineNumber="74">} </fileline>
            <fileline lineNumber="75" />
            <fileline lineNumber="76">function Do_apt_uninstall_package</fileline>
            <fileline lineNumber="77">{</fileline>
            <fileline lineNumber="78">#|# Description         : This function is used to manage uninstallation of apt packages on system.</fileline>
            <fileline lineNumber="79">#|# </fileline>
            <fileline lineNumber="80">#|# Var to set            : </fileline>
            <fileline lineNumber="81">#|#                            aptPackageToUnInstall Use this var to set which package to uninstall</fileline>
            <fileline lineNumber="82">#|#                         ${1}                 : use this var to set aptPackageToUnInstall</fileline>
            <fileline lineNumber="83">#|#</fileline>
            <fileline lineNumber="84">#|# Basic use             : Do_apt_install_package "My_package_to_uninstall" </fileline>
            <fileline lineNumber="85">#|#</fileline>
            <fileline lineNumber="86">#|# Send Back       : Unsinstalled package</fileline>
            <fileline lineNumber="87">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="88">Function_PATH="${Function_PATH}/${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="89">######################################################</fileline>
            <fileline lineNumber="90">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="91" />
            <fileline lineNumber="92" />
            <fileline lineNumber="93">local aptPackageToUnInstall="${1}"</fileline>
            <fileline lineNumber="94" />
            <fileline lineNumber="95">Test_apt_package_presence ${aptPackageToUnInstall}</fileline>
            <fileline lineNumber="96">if [ "${aptPackageStatus}" = "INSTALLED" ] </fileline>
            <fileline lineNumber="97">then </fileline>
            <fileline lineNumber="98">    apt-get remove  ${aptPackageToUnInstall} -y -q&gt; /dev/null 2&gt;&amp;1</fileline>
            <fileline lineNumber="99">    CTRL_Result_func "${?}" "status for package : [ ${aptPackageToUnInstall}] " "Can t uninstall" "4" "" "" "nomsg"</fileline>
            <fileline lineNumber="100">else</fileline>
            <fileline lineNumber="101">    MSG_DISPLAY "debug" "Package ${aptPackageStatus} : [ NOT INSTALLED ] "</fileline>
            <fileline lineNumber="102">fi</fileline>
            <fileline lineNumber="103">apt-get update -y&gt; /dev/null 2&gt;&amp;1 1&gt; /dev/null </fileline>
            <fileline lineNumber="104">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="105">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="106">#################################################### </fileline>
            <fileline lineNumber="107">} </fileline>
            <fileline lineNumber="108" />
            <fileline lineNumber="109">function Test_apt_package_presence</fileline>
            <fileline lineNumber="110">{</fileline>
            <fileline lineNumber="111">#|# Var to set  : aptPackageToCheck             </fileline>
            <fileline lineNumber="112">#|#</fileline>
            <fileline lineNumber="113">#|# Base usage  : CTest_apt_package_presence PackageName</fileline>
            <fileline lineNumber="114">#|#</fileline>
            <fileline lineNumber="115">#|# Description : This function Check package instalation status.</fileline>
            <fileline lineNumber="116">#|#</fileline>
            <fileline lineNumber="117">#|# Send Back   : Info and action ( execution of other fcntion to set many information about the system) </fileline>
            <fileline lineNumber="118">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="119">Function_PATH="${Function_PATH}/${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="120">######################################################</fileline>
            <fileline lineNumber="121">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="122" />
            <fileline lineNumber="123" />
            <fileline lineNumber="124">local aptPackageToCheck="${1}"</fileline>
            <fileline lineNumber="125">Empty_Var_Control "${aptPackageToCheck}" "aptPackageToCheck"  "4" "package name is a mandatory parameter "</fileline>
            <fileline lineNumber="126" />
            <fileline lineNumber="127" />
            <fileline lineNumber="128">dpkg-query --show ${aptPackageToCheck} &gt; /dev/null 2&gt;&amp;1</fileline>
            <fileline lineNumber="129">CTRL_Result_func "${?}" "status for package : [ ${aptPackageToCheck}] " "Not Installed" "0" "Test_apt_package_presence_sub_u" "Test_apt_package_presence_sub_i" "nomsg"</fileline>
            <fileline lineNumber="130" />
            <fileline lineNumber="131" />
            <fileline lineNumber="132">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="133">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="134">#################################################### </fileline>
            <fileline lineNumber="135">} </fileline>
            <fileline lineNumber="136" />
            <fileline lineNumber="137">function Test_apt_package_presence_sub_i</fileline>
            <fileline lineNumber="138">{</fileline>
            <fileline lineNumber="139">#|# Description : This function is used with CTRL_Result_func as success or error result</fileline>
            <fileline lineNumber="140">#|#</fileline>
            <fileline lineNumber="141">#|# Var to set  : None             </fileline>
            <fileline lineNumber="142">#|#</fileline>
            <fileline lineNumber="143">#|# Base usage  : Test_apt_package_presence_sub_i </fileline>
            <fileline lineNumber="144">#|#</fileline>
            <fileline lineNumber="145">#|# Send Back   : aptPackageStatus seted at INSTALLED</fileline>
            <fileline lineNumber="146">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="147">Function_PATH="${Function_PATH}/${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="148">######################################################</fileline>
            <fileline lineNumber="149">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="150" />
            <fileline lineNumber="151" />
            <fileline lineNumber="152">aptPackageStatus="INSTALLED"</fileline>
            <fileline lineNumber="153" />
            <fileline lineNumber="154">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="155">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="156">####################################################</fileline>
            <fileline lineNumber="157">}</fileline>
            <fileline lineNumber="158" />
            <fileline lineNumber="159">function Test_apt_package_presence_sub_u</fileline>
            <fileline lineNumber="160">{</fileline>
            <fileline lineNumber="161">#|# Description : This function is used with CTRL_Result_func as success or error result</fileline>
            <fileline lineNumber="162">#|#</fileline>
            <fileline lineNumber="163">#|# Var to set  : None             </fileline>
            <fileline lineNumber="164">#|#</fileline>
            <fileline lineNumber="165">#|# Base usage  : Test_apt_package_presence_sub_u </fileline>
            <fileline lineNumber="166">#|#</fileline>
            <fileline lineNumber="167">#|# Send Back   : aptPackageStatus seted at NOT INSTALLED</fileline>
            <fileline lineNumber="168">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="169">Function_PATH="${Function_PATH}/${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="170">######################################################</fileline>
            <fileline lineNumber="171">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="172" />
            <fileline lineNumber="173" />
            <fileline lineNumber="174">aptPackageStatus="NOT INSTALLED"</fileline>
            <fileline lineNumber="175" />
            <fileline lineNumber="176">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="177">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="178">####################################################</fileline>
            <fileline lineNumber="179">}</fileline>
            <fileline lineNumber="180" />
            <fileline lineNumber="181"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/system_base/install/yum_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                     #</fileline>
            <fileline lineNumber="5"># Subject : This library provide base elements needed by C.A.S.T. scripts     #</fileline>
            <fileline lineNumber="6">#           this lib is based on C.A.S.T. framwork created by ARNAUD CRAMPET  #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO </fileline>
            <fileline lineNumber="10">#      this lib is for all linux based systems ( may run on solaris and AIX but not supported in this version )</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12" />
            <fileline lineNumber="13" />
            <fileline lineNumber="14" />
            <fileline lineNumber="15">function Do_yum_install_package</fileline>
            <fileline lineNumber="16">{</fileline>
            <fileline lineNumber="17">#|# Description : This function is used to manage installation of yum packages on system. </fileline>
            <fileline lineNumber="18">#|#</fileline>
            <fileline lineNumber="19">#|# Var to set    :</fileline>
            <fileline lineNumber="20">#|#                 YumPackageToInstall  : Use this var to set wiche package to install with yum</fileline>
            <fileline lineNumber="21">#|#                 ${1}            : Use this var to set [ YumPackageToInstall ]</fileline>
            <fileline lineNumber="22">#|#</fileline>
            <fileline lineNumber="23">#|# Base usage  : Do_yum_install_package "My_package_to_install"</fileline>
            <fileline lineNumber="24">#|#</fileline>
            <fileline lineNumber="25">#|# Send Back   : Installed package</fileline>
            <fileline lineNumber="26">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="27">Function_PATH="${Function_PATH}/${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="28">######################################################</fileline>
            <fileline lineNumber="29">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="30" />
            <fileline lineNumber="31" />
            <fileline lineNumber="32">local YumPackageToInstall="${1}"</fileline>
            <fileline lineNumber="33">Empty_Var_Control "${YumPackageToInstall}" "YumPackageToInstall"  "4" "package name is a mandatory parameter "</fileline>
            <fileline lineNumber="34">Test_yum_package_presence ${YumPackageToInstall}</fileline>
            <fileline lineNumber="35">if [ "${YumPackageStatus}" = "NOT INSTALLED" ] </fileline>
            <fileline lineNumber="36">then </fileline>
            <fileline lineNumber="37">    yum install ${YumPackageToInstall} -y&gt; /dev/null 2&gt;&amp;1 </fileline>
            <fileline lineNumber="38">    CTRL_Result_func "${?}" "status for package : [ ${YumPackageToCheck}] " "Not Installed" "4" "" "" "nomsg"</fileline>
            <fileline lineNumber="39">else</fileline>
            <fileline lineNumber="40">    MSG_DISPLAY "debug" "0" "Package ${YumPackageStatus} : [ INSTALLED ] "</fileline>
            <fileline lineNumber="41">fi</fileline>
            <fileline lineNumber="42" />
            <fileline lineNumber="43">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="44">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="45">#################################################### </fileline>
            <fileline lineNumber="46">} </fileline>
            <fileline lineNumber="47" />
            <fileline lineNumber="48">function Do_yum_uninstall_package</fileline>
            <fileline lineNumber="49">{</fileline>
            <fileline lineNumber="50">#|# Description         : This function is used to manage uninstallation of yum packages on system.</fileline>
            <fileline lineNumber="51">#|# </fileline>
            <fileline lineNumber="52">#|# Var to set            : </fileline>
            <fileline lineNumber="53">#|#                            YumPackageToUnInstall Use this var to set which package to uninstall</fileline>
            <fileline lineNumber="54">#|#                         ${1}                 : use this var to set YumPackageToUnInstall</fileline>
            <fileline lineNumber="55">#|#</fileline>
            <fileline lineNumber="56">#|# Basic use             : Do_yum_install_package "My_package_to_uninstall" </fileline>
            <fileline lineNumber="57">#|#</fileline>
            <fileline lineNumber="58">#|# Send Back       : Unsinstalled package</fileline>
            <fileline lineNumber="59">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="60">Function_PATH="${Function_PATH}/${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="61">######################################################</fileline>
            <fileline lineNumber="62">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="63" />
            <fileline lineNumber="64" />
            <fileline lineNumber="65">local YumPackageToUnInstall="${1}"</fileline>
            <fileline lineNumber="66">Test_yum_package_presence ${YumPackageToUnInstall}</fileline>
            <fileline lineNumber="67">if [ "${YumPackageStatus}" = "INSTALLED" ] </fileline>
            <fileline lineNumber="68">then </fileline>
            <fileline lineNumber="69">    yum erase  ${YumPackageToUnInstall} -y -q&gt; /dev/null 2&gt;&amp;1</fileline>
            <fileline lineNumber="70">    CTRL_Result_func "${?}" "status for package : [ ${YumPackageToUnInstall}] " "Can t uninstall" "4" "" "" "nomsg"</fileline>
            <fileline lineNumber="71">else</fileline>
            <fileline lineNumber="72">    MSG_DISPLAY "debug" "Package ${YumPackageStatus} : [ NOT INSTALLED ] "</fileline>
            <fileline lineNumber="73">fi</fileline>
            <fileline lineNumber="74">yum update -y&gt; /dev/null 2&gt;&amp;1 1&gt; /dev/null </fileline>
            <fileline lineNumber="75">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="76">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="77">#################################################### </fileline>
            <fileline lineNumber="78">} </fileline>
            <fileline lineNumber="79" />
            <fileline lineNumber="80">function Test_yum_package_presence</fileline>
            <fileline lineNumber="81">{</fileline>
            <fileline lineNumber="82">#|# Var to set  : YumPackageToCheck             </fileline>
            <fileline lineNumber="83">#|#</fileline>
            <fileline lineNumber="84">#|# Base usage  : CTest_yum_package_presence PackageName</fileline>
            <fileline lineNumber="85">#|#</fileline>
            <fileline lineNumber="86">#|# Description : This function Check package instalation status.</fileline>
            <fileline lineNumber="87">#|#</fileline>
            <fileline lineNumber="88">#|# Send Back   : Info and action ( execution of other fcntion to set many information about the system) </fileline>
            <fileline lineNumber="89">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="90">Function_PATH="${Function_PATH}/${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="91">######################################################</fileline>
            <fileline lineNumber="92">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="93" />
            <fileline lineNumber="94" />
            <fileline lineNumber="95">local YumPackageToCheck="${1}"</fileline>
            <fileline lineNumber="96" />
            <fileline lineNumber="97" />
            <fileline lineNumber="98">Empty_Var_Control "${YumPackageToCheck}" "YumPackageToCheck"  "4" "package name is a mandatory parameter "</fileline>
            <fileline lineNumber="99">yum list installed ${YumPackageToCheck} -q&gt; /dev/null 2&gt;&amp;1</fileline>
            <fileline lineNumber="100">CTRL_Result_func "${?}" "status for package : [ ${YumPackageToCheck}] " "Not Installed" "0" "Test_yum_package_presence_sub_u" "Test_yum_package_presence_sub_i" "nomsg"</fileline>
            <fileline lineNumber="101" />
            <fileline lineNumber="102" />
            <fileline lineNumber="103">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="104">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="105">#################################################### </fileline>
            <fileline lineNumber="106">} </fileline>
            <fileline lineNumber="107" />
            <fileline lineNumber="108">function Test_yum_package_presence_sub_i</fileline>
            <fileline lineNumber="109">{</fileline>
            <fileline lineNumber="110">#|# Description : This function is used with CTRL_Result_func as success or error result</fileline>
            <fileline lineNumber="111">#|#</fileline>
            <fileline lineNumber="112">#|# Var to set  : None             </fileline>
            <fileline lineNumber="113">#|#</fileline>
            <fileline lineNumber="114">#|# Base usage  : Test_yum_package_presence_sub_i </fileline>
            <fileline lineNumber="115">#|#</fileline>
            <fileline lineNumber="116">#|# Send Back   : YumPackageStatus seted at INSTALLED</fileline>
            <fileline lineNumber="117">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="118">Function_PATH="${Function_PATH}/${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="119">######################################################</fileline>
            <fileline lineNumber="120">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="121" />
            <fileline lineNumber="122" />
            <fileline lineNumber="123">YumPackageStatus="INSTALLED"</fileline>
            <fileline lineNumber="124" />
            <fileline lineNumber="125">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="126">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="127">####################################################</fileline>
            <fileline lineNumber="128">}</fileline>
            <fileline lineNumber="129" />
            <fileline lineNumber="130">function Test_yum_package_presence_sub_u</fileline>
            <fileline lineNumber="131">{</fileline>
            <fileline lineNumber="132">#|# Description : This function is used with CTRL_Result_func as success or error result</fileline>
            <fileline lineNumber="133">#|#</fileline>
            <fileline lineNumber="134">#|# Var to set  : None             </fileline>
            <fileline lineNumber="135">#|#</fileline>
            <fileline lineNumber="136">#|# Base usage  : Test_yum_package_presence_sub_u </fileline>
            <fileline lineNumber="137">#|#</fileline>
            <fileline lineNumber="138">#|# Send Back   : YumPackageStatus seted at NOT INSTALLED</fileline>
            <fileline lineNumber="139">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="140">Function_PATH="${Function_PATH}/${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="141">######################################################</fileline>
            <fileline lineNumber="142">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="143" />
            <fileline lineNumber="144" />
            <fileline lineNumber="145">YumPackageStatus="NOT INSTALLED"</fileline>
            <fileline lineNumber="146" />
            <fileline lineNumber="147">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="148">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="149">####################################################</fileline>
            <fileline lineNumber="150">}</fileline>
            <fileline lineNumber="151" />
            <fileline lineNumber="152"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/system_base/file/file_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                          #</fileline>
            <fileline lineNumber="5"># Subject : This library provide base file controls runtimes for file         #</fileline>
            <fileline lineNumber="6">#           management                                                        #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO</fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11">######################### Files functions</fileline>
            <fileline lineNumber="12" />
            <fileline lineNumber="13" />
            <fileline lineNumber="14" />
            <fileline lineNumber="15">function Test_file_extend</fileline>
            <fileline lineNumber="16">{</fileline>
            <fileline lineNumber="17">#|# Var to set  :</fileline>
            <fileline lineNumber="18">#|# INTERNAL_File_To_TEST      : Use this var to set the fileto test                   ( Mandatory )</fileline>
            <fileline lineNumber="19">#|# INTERNAL_Ext_To_TEST       : Use this var to set the ext to test                   ( Mandatory )</fileline>
            <fileline lineNumber="20">#|# INTERNAL_CRITICITY_OF_FAIL : Use this var to set the level of the error            ( Mandatory )</fileline>
            <fileline lineNumber="21">#|# INTERNAL_ACTION_ON_FAIL    : Use this var to set the action to do if the test FAIL ( Optional )</fileline>
            <fileline lineNumber="22">#|# INTERNAL_ACTION_ON_SUCCESS : Use this var to set the action to do if the test FAIL ( Optional )</fileline>
            <fileline lineNumber="23">#|# ${1}                       : use this var to set [ INTERNAL_File_To_TEST ]</fileline>
            <fileline lineNumber="24">#|# ${2}                       : use this var to set [ INTERNAL_Ext_To_TEST ]</fileline>
            <fileline lineNumber="25">#|# ${3}                       : use this var to set [ INTERNAL_CRITICITY_OF_FAIL ]</fileline>
            <fileline lineNumber="26">#|# ${4}                       : use this var to set [ INTERNAL_ACTION_ON_FAIL ]</fileline>
            <fileline lineNumber="27">#|# ${5}                       : use this var to set [ INTERNAL_ACTION_ON_SUCCESS ]</fileline>
            <fileline lineNumber="28">#|#</fileline>
            <fileline lineNumber="29">#|# Base usage  : Test_file_extend "My_File" "My_ext" "INTERNAL_CRITICITY_OF_FAIL" "INTERNAL_ACTION_ON_FAIL" "INTERNAL_ACTION_ON_SUCCESS"</fileline>
            <fileline lineNumber="30">#|#</fileline>
            <fileline lineNumber="31">#|# Description : This function is used to chek if a file exist or not and do specifics actions in both case</fileline>
            <fileline lineNumber="32">#|#</fileline>
            <fileline lineNumber="33">#|# Send Back   : None</fileline>
            <fileline lineNumber="34">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="35">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="36">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="37">######################################################</fileline>
            <fileline lineNumber="38">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="39" />
            <fileline lineNumber="40" />
            <fileline lineNumber="41">local INTERNAL_File_To_TEST="${1}"</fileline>
            <fileline lineNumber="42">local INTERNAL_Ext_To_TEST="${2}"</fileline>
            <fileline lineNumber="43">local INTERNAL_CRITICITY_OF_FAIL="${3}"</fileline>
            <fileline lineNumber="44">local INTERNAL_ACTION_ON_FAIL="${4}"</fileline>
            <fileline lineNumber="45">local INTERNAL_ACTION_ON_SUCCESS="${5}"</fileline>
            <fileline lineNumber="46" />
            <fileline lineNumber="47">  Empty_Var_Control "${INTERNAL_File_To_TEST}"       "INTERNAL_File_To_TEST"         "4"</fileline>
            <fileline lineNumber="48">  Empty_Var_Control "${INTERNAL_Ext_To_TEST}"        "INTERNAL_Ext_To_TEST"          "4"</fileline>
            <fileline lineNumber="49">  Empty_Var_Control "${INTERNAL_CRITICITY_OF_FAIL}"  "INTERNAL_CRITICITY_OF_FAIL"    "4"</fileline>
            <fileline lineNumber="50" />
            <fileline lineNumber="51">INTERNAL_EXT_SIZE="$( echo ${INTERNAL_Ext_To_TEST} | awk -F\. '{ print NF }' )"</fileline>
            <fileline lineNumber="52">INTERNAL_FILE_EXT_SIZE="$( echo ${INTERNAL_File_To_TEST} | awk -F\. '{ print NF }'  )"</fileline>
            <fileline lineNumber="53">INTERNAL_FILE_EXT_SIZE="$( expr ${INTERNAL_FILE_EXT_SIZE} - 1 )"</fileline>
            <fileline lineNumber="54" />
            <fileline lineNumber="55">RUN_IN="1"</fileline>
            <fileline lineNumber="56">FIELD_TO_GET="2"</fileline>
            <fileline lineNumber="57">FILE_FINAL_EXT=$(echo "${INTERNAL_File_To_TEST}" | awk -F\. -v VAR1=${FIELD_TO_GET} '{ print $VAR1 }' )</fileline>
            <fileline lineNumber="58">until [ "${RUN_IN}" = "${INTERNAL_FILE_EXT_SIZE}" ]</fileline>
            <fileline lineNumber="59">     do</fileline>
            <fileline lineNumber="60">       RUN_IN="$( expr ${RUN_IN} + 1 )"</fileline>
            <fileline lineNumber="61">       FIELD_TO_GET="$( expr ${FIELD_TO_GET} + 1 )"</fileline>
            <fileline lineNumber="62">       FILE_FINAL_EXT="${FILE_FINAL_EXT}.$(echo ${INTERNAL_File_To_TEST} | awk -F\. -v VAR1=${FIELD_TO_GET} '{ print $VAR1 }' )"</fileline>
            <fileline lineNumber="63">done</fileline>
            <fileline lineNumber="64" />
            <fileline lineNumber="65">if ! [ "${FILE_FINAL_EXT}" = "${INTERNAL_Ext_To_TEST}" ]</fileline>
            <fileline lineNumber="66">   then</fileline>
            <fileline lineNumber="67">      MSG_DISPLAY "EdEMessage" "1" "Bad extention on file ${INTERNAL_File_To_TEST} : [ ${FILE_FINAL_EXT} ]" "${INTERNAL_CRITICITY_OF_FAIL}"</fileline>
            <fileline lineNumber="68">       if ! [ -z "${INTERNAL_ACTION_ON_FAIL}" ]</fileline>
            <fileline lineNumber="69">              then</fileline>
            <fileline lineNumber="70">                   ${INTERNAL_ACTION_ON_FAIL}</fileline>
            <fileline lineNumber="71">           fi</fileline>
            <fileline lineNumber="72">   else</fileline>
            <fileline lineNumber="73">       MSG_DISPLAY "debug" "0" " File extention for ${INTERNAL_File_To_TEST} : [ OK ]"</fileline>
            <fileline lineNumber="74">       if ! [ -z "${INTERNAL_ACTION_ON_SUCCESS}" ]</fileline>
            <fileline lineNumber="75">              then</fileline>
            <fileline lineNumber="76">                   ${INTERNAL_ACTION_ON_SUCCESS}</fileline>
            <fileline lineNumber="77">           fi</fileline>
            <fileline lineNumber="78">fi</fileline>
            <fileline lineNumber="79">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="80">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="81">####################################################</fileline>
            <fileline lineNumber="82">}</fileline>
            <fileline lineNumber="83" />
            <fileline lineNumber="84" />
            <fileline lineNumber="85">function Test_file_type</fileline>
            <fileline lineNumber="86">{</fileline>
            <fileline lineNumber="87">#|# Var to set  :</fileline>
            <fileline lineNumber="88">#|# INTERNAL_FILE_TO_TEST  : Use this var to set the file name of the file to test     ( Mandatory )</fileline>
            <fileline lineNumber="89">#|# INTERNAL_FILE_TYPE     : Use this var to set the type of file to obtain            ( Mandatory )</fileline>
            <fileline lineNumber="90">#|# INTERNAL_ERR_TYPE      : Use this var to set the type of error on fail             ( Mandatory )</fileline>
            <fileline lineNumber="91">#|# INTERNAL_ERR_LEVEL     : Use this var to set the level of the error                ( Mandatory )</fileline>
            <fileline lineNumber="92">#|# ACTION_ON_FAIL         : Use this var to set the action to take on failled test    ( Optional )</fileline>
            <fileline lineNumber="93">#|# ACTION_ON_SUCCESS      : Use this var to set the action to take on successful test ( Optional )</fileline>
            <fileline lineNumber="94">#|# ${1}                   : Use this var to set [ INTERNAL_FILE_TO_TEST ]</fileline>
            <fileline lineNumber="95">#|# ${2}                   : Use this var to set [ INTERNAL_FILE_TYPE ]</fileline>
            <fileline lineNumber="96">#|# ${3}                   : Use this var to set [ INTERNAL_ERR_TYPE ]</fileline>
            <fileline lineNumber="97">#|# ${4}                   : Use this var to set [ ACTION_ON_FAIL ]</fileline>
            <fileline lineNumber="98">#|# ${5}                   : Use this var to set [ ACTION_ON_FAIL ]</fileline>
            <fileline lineNumber="99">#|# ${6}                   : Use this var to set [ ACTION_ON_SUCCESS ]</fileline>
            <fileline lineNumber="100">#|# Base usage</fileline>
            <fileline lineNumber="101">#|#    Test_file_type  "INTERNAL_FILE_TO_TEST" "INTERNAL_FILE_TYPE" "INTERNAL_ERR_TYPE" "INTERNAL_ERR_LEVEL"  [ "ACTION_ON_FAIL" "ACTION_ON_SUCCESS" ]</fileline>
            <fileline lineNumber="102">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="103">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="104">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="105">######################################################</fileline>
            <fileline lineNumber="106">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="107" />
            <fileline lineNumber="108" />
            <fileline lineNumber="109">local INTERNAL_FILE_TO_TEST="${1}"</fileline>
            <fileline lineNumber="110">local INTERNAL_FILE_TYPE="${2}"</fileline>
            <fileline lineNumber="111">local INTERNAL_ERR_TYPE="${3}"</fileline>
            <fileline lineNumber="112">local INTERNAL_ERR_LEVEL="${4}"</fileline>
            <fileline lineNumber="113">local ACTION_ON_FAIL="${5}"</fileline>
            <fileline lineNumber="114">local ACTION_ON_SUCCESS="${6}"</fileline>
            <fileline lineNumber="115" />
            <fileline lineNumber="116">Empty_Var_Control "${INTERNAL_FILE_TO_TEST}" "INTERNAL_FILE_TO_TEST"  "4"</fileline>
            <fileline lineNumber="117">Empty_Var_Control "${INTERNAL_FILE_TYPE}"    "INTERNAL_FILE_TYPE"     "4"</fileline>
            <fileline lineNumber="118">Empty_Var_Control "${INTERNAL_ERR_LEVEL}"    "INTERNAL_ERR_LEVEL"     "4"</fileline>
            <fileline lineNumber="119" />
            <fileline lineNumber="120" />
            <fileline lineNumber="121" />
            <fileline lineNumber="122">echo "${ACTION_ON_FAIL}"</fileline>
            <fileline lineNumber="123">INTERNAL_FileType=$( file ${INTERNAL_FILE_TO_TEST} | awk '{ print $2 }' )</fileline>
            <fileline lineNumber="124">if [ "${INTERNAL_FileType}" = "${INTERNAL_FILE_TYPE}" ]</fileline>
            <fileline lineNumber="125">   then</fileline>
            <fileline lineNumber="126">       MSG_DISPLAY "debug" "0" " File  ${Base_Param_File_To_TEST} type control : [ PASSED ] "</fileline>
            <fileline lineNumber="127">       if ! [ -z "${ACTION_ON_SUCCESS}" ]</fileline>
            <fileline lineNumber="128">              then</fileline>
            <fileline lineNumber="129">                   ${ACTION_ON_SUCCESS}</fileline>
            <fileline lineNumber="130">           fi</fileline>
            <fileline lineNumber="131">   else</fileline>
            <fileline lineNumber="132">       MSG_DISPLAY "debug" "0" " File ${Base_Param_File_To_TEST} : [ ERROR ] "</fileline>
            <fileline lineNumber="133">       MSG_DISPLAY "${INTERNAL_ERR_TYPE}" "${INTERNAL_ERR_LEVEL}" " File type ${Base_Param_File_To_TEST} : [ ${INTERNAL_FileType} ] " </fileline>
            <fileline lineNumber="134">       if ! [ -z "${ACTION_ON_FAIL}" ]</fileline>
            <fileline lineNumber="135">              then</fileline>
            <fileline lineNumber="136">                   ${ACTION_ON_FAIL}</fileline>
            <fileline lineNumber="137">           fi</fileline>
            <fileline lineNumber="138">fi</fileline>
            <fileline lineNumber="139" />
            <fileline lineNumber="140">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="141">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="142">####################################################</fileline>
            <fileline lineNumber="143">}</fileline>
            <fileline lineNumber="144" />
            <fileline lineNumber="145">function Get_file_type</fileline>
            <fileline lineNumber="146">{</fileline>
            <fileline lineNumber="147">#|# Var to set  :</fileline>
            <fileline lineNumber="148">#|# Base_Param_File_To_get_type : use this var to set which file to controle                       ( Mandatory )</fileline>
            <fileline lineNumber="149">#|# Get_file_type_on_fail       : use this vas to set which action to do on failled check</fileline>
            <fileline lineNumber="150">#|# Get_file_type_on_success    : use this var to set which action to do on success check</fileline>
            <fileline lineNumber="151">#|# File_type_to_Return         : This vas is used to send back file type to the calling function</fileline>
            <fileline lineNumber="152">#|# ${1}                        : Use this var to set [ Base_Param_File_To_TEST ]</fileline>
            <fileline lineNumber="153">#|# ${2}                        : Use this var to set [ Get_file_type_on_fail ]</fileline>
            <fileline lineNumber="154">#|# ${3}                        : use this var to set [ Get_file_type_on_success ]</fileline>
            <fileline lineNumber="155">#|# Basic Usage : Get_file_type "My file to get type"</fileline>
            <fileline lineNumber="156">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="157">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="158">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="159">######################################################</fileline>
            <fileline lineNumber="160" />
            <fileline lineNumber="161">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="162" />
            <fileline lineNumber="163" />
            <fileline lineNumber="164">local Base_Param_File_To_get_type="${1}"</fileline>
            <fileline lineNumber="165">local Get_file_type_on_fail="${2}"</fileline>
            <fileline lineNumber="166">local Get_file_type_on_success="${3}"</fileline>
            <fileline lineNumber="167">local Criticity_base="2"</fileline>
            <fileline lineNumber="168" />
            <fileline lineNumber="169">Empty_Var_Control "${Base_Param_File_To_get_type}" "Base_Param_File_To_get_type"  "4"</fileline>
            <fileline lineNumber="170" />
            <fileline lineNumber="171" />
            <fileline lineNumber="172" />
            <fileline lineNumber="173">if ! [ -z "${Get_file_type_on_fail}" ]</fileline>
            <fileline lineNumber="174">   then</fileline>
            <fileline lineNumber="175">        Internal_ACT_FAIL="${Get_file_type_on_fail}"</fileline>
            <fileline lineNumber="176">        Criticity_base="0"</fileline>
            <fileline lineNumber="177">   else</fileline>
            <fileline lineNumber="178">        Internal_ACT_FAIL=""</fileline>
            <fileline lineNumber="179">fi</fileline>
            <fileline lineNumber="180">if ! [ -z "${Get_file_type_on_fail}" ]</fileline>
            <fileline lineNumber="181">   then</fileline>
            <fileline lineNumber="182">        Internal_ACT_SUCCESS="${Get_file_type_on_success}"</fileline>
            <fileline lineNumber="183">        Criticity_base="0"</fileline>
            <fileline lineNumber="184">   else</fileline>
            <fileline lineNumber="185">        Internal_ACT_SUCCESS=""</fileline>
            <fileline lineNumber="186">fi</fileline>
            <fileline lineNumber="187" />
            <fileline lineNumber="188" />
            <fileline lineNumber="189">Test_file_presence "${Base_Param_File_To_get_type}" "Dont_Create_File" "${Criticity_base}" "${Internal_ACT_FAIL}"  "${Internal_ACT_SUCCESS}"</fileline>
            <fileline lineNumber="190">File_type_to_Return="$(file ${Base_Param_File_To_get_type} | awk '{ print $2 }' )"</fileline>
            <fileline lineNumber="191">MSG_DISPLAY "debug" "0" " File : [ ${Base_Param_File_To_get_type} ] Type : [ ${File_type_to_Return} ]"</fileline>
            <fileline lineNumber="192" />
            <fileline lineNumber="193" />
            <fileline lineNumber="194">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="195">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="196">####################################################</fileline>
            <fileline lineNumber="197">}</fileline>
            <fileline lineNumber="198" />
            <fileline lineNumber="199">function Test_file_presence</fileline>
            <fileline lineNumber="200">{</fileline>
            <fileline lineNumber="201">#|# Var to set  :</fileline>
            <fileline lineNumber="202">#|# Base_Param_File_To_TEST               : use this var to set which file to controle</fileline>
            <fileline lineNumber="203">#|# lib_Test_file_presence_create           : Use this var to set if you want to create the file if he wn't exist</fileline>
            <fileline lineNumber="204">#|# lib_Test_file_presence_critic_level     : Use this var to set the serverity exit level</fileline>
            <fileline lineNumber="205">#|# lib_Test_file_presence_onfail_action    : Use this var to set the action to do on failed condition</fileline>
            <fileline lineNumber="206">#|# lib_Test_file_presence_onsuccess_action : Use this var to set the action to do on passed condition</fileline>
            <fileline lineNumber="207">#|# ${1}                                  : Use this var to set [ Base_Param_File_To_TEST ]</fileline>
            <fileline lineNumber="208">#|# ${2}                                  : Use this var to set [ lib_Test_file_presence_create ]</fileline>
            <fileline lineNumber="209">#|# ${3}                                  : Use this var to set [ lib_Test_file_presence_critic_level ]</fileline>
            <fileline lineNumber="210">#|# ${4}                                  : Use this var to set [ lib_Test_file_presence_onfail_action ]</fileline>
            <fileline lineNumber="211">#|# ${5}                                  : Use this var to set [ lib_Test_file_presence_onsuccess_action ]</fileline>
            <fileline lineNumber="212">#|#</fileline>
            <fileline lineNumber="213">#|# Base usage  : Test_file_presence "file to control" "Dont_Create_File" "criticity_of_fail"  "Action on fail"  "Action on success"</fileline>
            <fileline lineNumber="214">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="215">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="216">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="217">######################################################</fileline>
            <fileline lineNumber="218" />
            <fileline lineNumber="219">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="220" />
            <fileline lineNumber="221" />
            <fileline lineNumber="222">local Base_Param_File_To_TEST="${1}"</fileline>
            <fileline lineNumber="223">local lib_Test_file_presence_create="${2}"</fileline>
            <fileline lineNumber="224">local lib_Test_file_presence_critic_level="${3}"</fileline>
            <fileline lineNumber="225">local lib_Test_file_presence_onfail_action="${4}"</fileline>
            <fileline lineNumber="226">local lib_Test_file_presence_onsuccess_action="${5}"</fileline>
            <fileline lineNumber="227" />
            <fileline lineNumber="228">Empty_Var_Control "${Base_Param_File_To_TEST}"             "Base_Param_File_To_TEST"              "4"</fileline>
            <fileline lineNumber="229">Empty_Var_Control "${lib_Test_file_presence_create}"       "lib_Test_file_presence_create"        "4"</fileline>
            <fileline lineNumber="230">Empty_Var_Control "${lib_Test_file_presence_critic_level}" "lib_Test_file_presence_critic_level"  "4"</fileline>
            <fileline lineNumber="231" />
            <fileline lineNumber="232">MSG_DISPLAY "debug" "0" " File  Base_Param_File_To_TEST                  : [ ${Base_Param_File_To_TEST} ] "</fileline>
            <fileline lineNumber="233">MSG_DISPLAY "debug" "0" " File  lib_Test_file_presence_create            : [ ${lib_Test_file_presence_create} ] "</fileline>
            <fileline lineNumber="234">MSG_DISPLAY "debug" "0" " File  lib_Test_file_presence_critic_level      : [ ${lib_Test_file_presence_critic_level} ] "</fileline>
            <fileline lineNumber="235">MSG_DISPLAY "debug" "0" " File lib_Test_file_presence_onfail_action      : [ ${lib_Test_file_presence_onfail_action} ] "</fileline>
            <fileline lineNumber="236">MSG_DISPLAY "debug" "0" " File  lib_Test_file_presence_onsuccess_action  : [ ${lib_Test_file_presence_onsuccess_action} ] "</fileline>
            <fileline lineNumber="237">MSG_DISPLAY "check" "0" "checking file ${Base_Param_File_To_TEST} :"</fileline>
            <fileline lineNumber="238">if [ "${Iterate_Function_Test_file_presence}" = "1" ]</fileline>
            <fileline lineNumber="239">   then</fileline>
            <fileline lineNumber="240">        if [ -e "${Base_Param_File_To_TEST}" ]</fileline>
            <fileline lineNumber="241">           then</fileline>
            <fileline lineNumber="242">        	    MSG_DISPLAY "EdSMessage" "CREATED"</fileline>
            <fileline lineNumber="243">                #MSG_DISPLAY "debug" "0" " File ${Base_Param_File_To_TEST} : [ CREATED ] "</fileline>
            <fileline lineNumber="244">                if ! [ -z "${lib_Test_file_presence_onsuccess_action}" ]</fileline>
            <fileline lineNumber="245">                       then</fileline>
            <fileline lineNumber="246">                           ${lib_Test_file_presence_onsuccess_action}</fileline>
            <fileline lineNumber="247">                fi</fileline>
            <fileline lineNumber="248">           else</fileline>
            <fileline lineNumber="249">        	    MSG_DISPLAY "EdSMessage" "CAN T CREATE"</fileline>
            <fileline lineNumber="250">                MSG_DISPLAY "EdEMessage" "1" " File ${Base_Param_File_To_TEST} : [ CAN T CREATE ]" "${lib_Test_file_presence_critic_level}"</fileline>
            <fileline lineNumber="251">                if ! [  -z "${lib_Test_file_presence_onfail_action}" ]</fileline>
            <fileline lineNumber="252">                       then</fileline>
            <fileline lineNumber="253">                            ${lib_Test_file_presence_onfail_action}</fileline>
            <fileline lineNumber="254">                fi</fileline>
            <fileline lineNumber="255">        fi</fileline>
            <fileline lineNumber="256">   else</fileline>
            <fileline lineNumber="257">        if [ -e "${Base_Param_File_To_TEST}" ]</fileline>
            <fileline lineNumber="258">           then</fileline>
            <fileline lineNumber="259">        	    MSG_DISPLAY "EdSMessage" "FOUND"</fileline>
            <fileline lineNumber="260">                #MSG_DISPLAY "debug" "0" " File ${Base_Param_File_To_TEST} : [ PRESENT ] "</fileline>
            <fileline lineNumber="261">                if ! [ -z "${lib_Test_file_presence_onsuccess_action}" ]</fileline>
            <fileline lineNumber="262">                        then</fileline>
            <fileline lineNumber="263">                             ${lib_Test_file_presence_onsuccess_action}</fileline>
            <fileline lineNumber="264">                fi</fileline>
            <fileline lineNumber="265">           else</fileline>
            <fileline lineNumber="266">               case ${lib_Test_file_presence_create} in</fileline>
            <fileline lineNumber="267">                    Create_file) touch ${Base_Param_File_To_TEST}</fileline>
            <fileline lineNumber="268">                                 Iterate_Function_Test_file_presence="1"</fileline>
            <fileline lineNumber="269">                                 Test_file_presence</fileline>
            <fileline lineNumber="270">                                 ;;</fileline>
            <fileline lineNumber="271">                Dont_Create_File)# MSG_DISPLAY "EdEMessage" "2" "Not FOUND"</fileline>
            <fileline lineNumber="272">                                  if [ ${lib_Test_file_presence_critic_level} -eq "0" ]</fileline>
            <fileline lineNumber="273">                                     then </fileline>
            <fileline lineNumber="274">                                          echo "OOOOOOOOOOOOOOOOOOOOOOOKKKK"</fileline>
            <fileline lineNumber="275">                                   else </fileline>
            <fileline lineNumber="276">                		                   MSG_DISPLAY "EdEMessage" "2" "File ${Base_Param_File_To_TEST} : [ NOT FOUND ]" "${lib_Test_file_presence_critic_level}"</fileline>
            <fileline lineNumber="277">                                  fi</fileline>
            <fileline lineNumber="278">                                 ;;</fileline>
            <fileline lineNumber="279">                              *) MSG_DISPLAY "EdEMessage" "2" "Not supported case"</fileline>
            <fileline lineNumber="280">                                 ;;</fileline>
            <fileline lineNumber="281">               esac</fileline>
            <fileline lineNumber="282">               #MSG_DISPLAY "EdEMessage" "2" "NOT FOUND"</fileline>
            <fileline lineNumber="283">    		      #MSG_DISPLAY "EdEMessage" "2" "File ${Base_Param_File_To_TEST} : [ Not PRESENT ]" "${lib_Test_file_presence_critic_level}" </fileline>
            <fileline lineNumber="284">                    if ! [ -z "${lib_Test_file_presence_onfail_action}" ]</fileline>
            <fileline lineNumber="285">                       then</fileline>
            <fileline lineNumber="286">                            ${lib_Test_file_presence_onfail_action}</fileline>
            <fileline lineNumber="287">                    fi</fileline>
            <fileline lineNumber="288">         fi</fileline>
            <fileline lineNumber="289">fi</fileline>
            <fileline lineNumber="290">Iterate_Function_Test_file_presence="0"</fileline>
            <fileline lineNumber="291">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="292">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="293">####################################################</fileline>
            <fileline lineNumber="294">}</fileline>
            <fileline lineNumber="295" />
            <fileline lineNumber="296" />
            <fileline lineNumber="297">function Do_file_remove</fileline>
            <fileline lineNumber="298">{</fileline>
            <fileline lineNumber="299">#|# Var to set  :</fileline>
            <fileline lineNumber="300">#|# Base_Param_File_To_REMOVE  : Use this var to set the ful pathed filename to remove</fileline>
            <fileline lineNumber="301">#|# FR_Action_ONFAIL           : Use this var to set wich action to do on function fail</fileline>
            <fileline lineNumber="302">#|# FR_Action_ONOK             : Use this var to set wich action to do on function success</fileline>
            <fileline lineNumber="303">#|# FR_Result_ERR_Level        : Use this var to set wich action to set the level of error</fileline>
            <fileline lineNumber="304">#|# $1                         : Use this var to set [ Base_Param_File_To_REMOVE ]</fileline>
            <fileline lineNumber="305">#|# $2                         : Use this var to set [ FR_Action_ONFAIL ]</fileline>
            <fileline lineNumber="306">#|# $3                         : Use this var to set [ FR_Action_ONOK ]</fileline>
            <fileline lineNumber="307">#|# $4                         : Use this var to set [ FR_Result_ERR_Level ]</fileline>
            <fileline lineNumber="308">#|#</fileline>
            <fileline lineNumber="309">#|# Base usage  : Do_file_remove "/My/file/to/remose.file" "Action ON FAIL" "Action ON OK" "err level"</fileline>
            <fileline lineNumber="310">#|#</fileline>
            <fileline lineNumber="311">#|# Description : This function is used to delete one file and check if all is ok</fileline>
            <fileline lineNumber="312">#|#</fileline>
            <fileline lineNumber="313">#|# Send Back   : May send back some actions</fileline>
            <fileline lineNumber="314">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="315">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="316">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="317">######################################################</fileline>
            <fileline lineNumber="318">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="319" />
            <fileline lineNumber="320" />
            <fileline lineNumber="321">Base_Param_File_To_REMOVE="${1}"</fileline>
            <fileline lineNumber="322">Empty_Var_Control "${Base_Param_File_To_REMOVE}" "Base_Param_File_To_REMOVE" "4"</fileline>
            <fileline lineNumber="323" />
            <fileline lineNumber="324" />
            <fileline lineNumber="325">MSG_DISPLAY "debug" "0" "File to remove : [ ${Base_Param_File_To_REMOVE} ]"</fileline>
            <fileline lineNumber="326">FR_Action_ONFAIL="${2}"</fileline>
            <fileline lineNumber="327">if [ -z ${FR_Action_ONFAIL} ]</fileline>
            <fileline lineNumber="328">   then</fileline>
            <fileline lineNumber="329">   	  MSG_DISPLAY "debug" "0" "Action to do on error : [ ${FR_Action_ONFAIL} ]"</fileline>
            <fileline lineNumber="330">   	  Action_ONFAIL="${FR_Action_ONFAIL}"</fileline>
            <fileline lineNumber="331">   else</fileline>
            <fileline lineNumber="332">      MSG_DISPLAY "debug" "0" "Action to do on error : [ NONE ]"</fileline>
            <fileline lineNumber="333">fi</fileline>
            <fileline lineNumber="334" />
            <fileline lineNumber="335">FR_Action_ONOK="${3}"</fileline>
            <fileline lineNumber="336">if [ -z ${Action_ONOK} ]</fileline>
            <fileline lineNumber="337">   then</fileline>
            <fileline lineNumber="338">   	  MSG_DISPLAY "debug" "0" "Action to do on error : [ ${Action_ONOK} ]"</fileline>
            <fileline lineNumber="339">   	  Action_ONOK="${FR_Action_ONOK}"</fileline>
            <fileline lineNumber="340">   else</fileline>
            <fileline lineNumber="341">      MSG_DISPLAY "debug" "0" "Action to do on error : [ NONE ]"</fileline>
            <fileline lineNumber="342">fi</fileline>
            <fileline lineNumber="343" />
            <fileline lineNumber="344" />
            <fileline lineNumber="345">FR_Result_ERR_Level="${4}"</fileline>
            <fileline lineNumber="346">MSG_DISPLAY "debug" "0" "Error Level on fail  : [ ${FR_Result_ERR_Level} ]"</fileline>
            <fileline lineNumber="347">Result_ERR_Level="${FR_Result_ERR_Level}"</fileline>
            <fileline lineNumber="348" />
            <fileline lineNumber="349">Generic_Base_Param_MSG="Removing File ${Base_Param_File_To_REMOVE} :"</fileline>
            <fileline lineNumber="350">Generic_Base_Param_MSG_ERR=" as failled "</fileline>
            <fileline lineNumber="351" />
            <fileline lineNumber="352">###### Remove only one file</fileline>
            <fileline lineNumber="353" />
            <fileline lineNumber="354">if [ -f ${Base_Param_File_To_REMOVE} ]</fileline>
            <fileline lineNumber="355">   then </fileline>
            <fileline lineNumber="356">      rm ${Base_Param_File_To_REMOVE}</fileline>
            <fileline lineNumber="357">      CTRL_Result_func "${?}" "Check for file removing for [ ${Base_Param_File_To_REMOVE} ] " "" "${FR_Result_ERR_Level}" "${FR_Action_ONFAIL}" "${FR_Action_ONOK}"</fileline>
            <fileline lineNumber="358">      Base_Param_File_To_REMOVE=""</fileline>
            <fileline lineNumber="359">   else </fileline>
            <fileline lineNumber="360">      MSG_DISPLAY "debug" "0" "File not present nothing to do  : [ ${Base_Param_File_To_REMOVE} ]"</fileline>
            <fileline lineNumber="361">fi</fileline>
            <fileline lineNumber="362" />
            <fileline lineNumber="363">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="364">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="365">####################################################</fileline>
            <fileline lineNumber="366">}</fileline>
            <fileline lineNumber="367" />
            <fileline lineNumber="368">function Do_file_sourcing_control</fileline>
            <fileline lineNumber="369">{</fileline>
            <fileline lineNumber="370">#|# Var to set  :</fileline>
            <fileline lineNumber="371">#|# Base_File_To_Source         : this var is used to set the filename of the file</fileline>
            <fileline lineNumber="372">#|# Base_Path_For_File          : This var is used to set the full path of the file</fileline>
            <fileline lineNumber="373">#|# Action_To_Do_After_Sourcing : This var is used to set action to do after a successfully sourcing Operation</fileline>
            <fileline lineNumber="374">#|# $1                          : This var feed Base_File_To_Source</fileline>
            <fileline lineNumber="375">#|# $2                          : This var feed Path to file to source</fileline>
            <fileline lineNumber="376">#|# $3                          : This var feed Action to do after succefully sourcing operation</fileline>
            <fileline lineNumber="377">#|# Sourced_OK                  : This var is set when sourcing file to ensure the correct sourcing of the file</fileline>
            <fileline lineNumber="378">#|#</fileline>
            <fileline lineNumber="379">#|# Base usage  :  Do_file_sourcing_control "my_file" "my_path_to_file"</fileline>
            <fileline lineNumber="380">#|#</fileline>
            <fileline lineNumber="381">#|# Description : This function is used to control if sourcing procedure is OK</fileline>
            <fileline lineNumber="382">#|#</fileline>
            <fileline lineNumber="383">#|# Send Back   : None</fileline>
            <fileline lineNumber="384">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="385">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="386">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="387">######################################################</fileline>
            <fileline lineNumber="388">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="389" />
            <fileline lineNumber="390" />
            <fileline lineNumber="391">Base_File_To_Source="$1"</fileline>
            <fileline lineNumber="392">Base_Path_For_File="$2"</fileline>
            <fileline lineNumber="393">Action_To_Do_After_Sourcing="${3}"</fileline>
            <fileline lineNumber="394" />
            <fileline lineNumber="395">Empty_Var_Control "${Base_File_To_Source}"         "Base_File_To_Source"         "4"</fileline>
            <fileline lineNumber="396">Empty_Var_Control "${Base_Path_For_File}"          "Base_Path_For_File"          "4"</fileline>
            <fileline lineNumber="397">Empty_Var_Control "${Action_To_Do_After_Sourcing}" "Action_To_Do_After_Sourcing" "4"</fileline>
            <fileline lineNumber="398" />
            <fileline lineNumber="399">MSG_DISPLAY "debug" "0" "Base_File_To_Source defined to : [ ${Base_File_To_Source} ] "</fileline>
            <fileline lineNumber="400">MSG_DISPLAY "debug" "0" "Base_Path_For_File defined to : [ ${Base_Path_For_File} ] "</fileline>
            <fileline lineNumber="401">MSG_DISPLAY "debug" "0" "Action_To_Do_After_Sourcing defined to : [ ${Action_To_Do_After_Sourcing} ] "</fileline>
            <fileline lineNumber="402" />
            <fileline lineNumber="403">Sourced_OK="0"</fileline>
            <fileline lineNumber="404">###### Sourcing One file</fileline>
            <fileline lineNumber="405" />
            <fileline lineNumber="406" />
            <fileline lineNumber="407">Dir_null_or_slash ${Base_Path_For_File}</fileline>
            <fileline lineNumber="408" />
            <fileline lineNumber="409" />
            <fileline lineNumber="410">Test_directory "${Base_Path_For_File}"</fileline>
            <fileline lineNumber="411" />
            <fileline lineNumber="412" />
            <fileline lineNumber="413">Test_file_presence "${Base_Path_For_File}/${Base_File_To_Source}" "1"</fileline>
            <fileline lineNumber="414" />
            <fileline lineNumber="415">. ${Base_Path_For_File}/${Base_File_To_Source}</fileline>
            <fileline lineNumber="416" />
            <fileline lineNumber="417">if [ "${Sourced_OK}" = "1" ]</fileline>
            <fileline lineNumber="418">   then</fileline>
            <fileline lineNumber="419">        MSG_DISPLAY "debug" "0" "Sourcing File ${Base_File_To_Source} : [ OK ] "</fileline>
            <fileline lineNumber="420">        if [ -z "${Action_To_Do_After_Sourcing}" ]</fileline>
            <fileline lineNumber="421">           then</fileline>
            <fileline lineNumber="422">                   MSG_DISPLAY "debug" "0" "Post Sourcing File Action for ${Base_File_To_Source} : [ NONE ] "</fileline>
            <fileline lineNumber="423">           else</fileline>
            <fileline lineNumber="424">                   MSG_DISPLAY "debug" "0" "Post Sourcing File Action for ${Base_File_To_Source} : [ ${Action_To_Do_After_Sourcing} ] "</fileline>
            <fileline lineNumber="425">               ${Action_To_Do_After_Sourcing}</fileline>
            <fileline lineNumber="426">        fi</fileline>
            <fileline lineNumber="427">   else</fileline>
            <fileline lineNumber="428">        MSG_DISPLAY "EdEMessage" "1" "Sourcing File ${Base_File_To_Source} : [ KO ] " "1"</fileline>
            <fileline lineNumber="429">fi</fileline>
            <fileline lineNumber="430" />
            <fileline lineNumber="431">Base_File_To_Source=""</fileline>
            <fileline lineNumber="432">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="433">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="434">####################################################</fileline>
            <fileline lineNumber="435">}</fileline>
            <fileline lineNumber="436" />
            <fileline lineNumber="437">function Get_filename</fileline>
            <fileline lineNumber="438">{</fileline>
            <fileline lineNumber="439">#|# This function provide capacity to find filename at the end of the path</fileline>
            <fileline lineNumber="440">#|# $1                  : use this var to set Path and file to refine</fileline>
            <fileline lineNumber="441">#|# Base usage</fileline>
            <fileline lineNumber="442">#|#                     Get_filename "My_PATH/my_file vars"</fileline>
            <fileline lineNumber="443">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="444">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="445">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="446">######################################################</fileline>
            <fileline lineNumber="447">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="448" />
            <fileline lineNumber="449" />
            <fileline lineNumber="450">STRING_PATH_FILEMANE="${1}"</fileline>
            <fileline lineNumber="451">Empty_Var_Control "${STRING_PATH_FILEMANE}" "STRING_PATH_FILEMANE" "4"</fileline>
            <fileline lineNumber="452" />
            <fileline lineNumber="453">if [ -z "${STRING_PATH_FILEMANE}" ]</fileline>
            <fileline lineNumber="454">   then</fileline>
            <fileline lineNumber="455">       MSG_DISPLAY "EdEMessage" "1" "EMPTT var for \$\1 in Get_filename CALL  : [ KO ] " </fileline>
            <fileline lineNumber="456">   else</fileline>
            <fileline lineNumber="457">       FILE_NAME_var="$( echo ${STRING_PATH_FILEMANE} | awk -F\/ '{ print $NF }')"</fileline>
            <fileline lineNumber="458">       if [ "${FILE_NAME_var}" = "/" ]</fileline>
            <fileline lineNumber="459">          then</fileline>
            <fileline lineNumber="460">              MSG_DISPLAY "EdEMessage" "1" "Error no Filename i \$\1 Get_filename Call  : [ KO ] "</fileline>
            <fileline lineNumber="461">          else</fileline>
            <fileline lineNumber="462">              MSG_DISPLAY "debug" "0" "Return of Get_filename is  : [ ${FILE_NAME_var} ] "</fileline>
            <fileline lineNumber="463">              Return_var_Get_filename="${FILE_NAME_var}"</fileline>
            <fileline lineNumber="464">       fi</fileline>
            <fileline lineNumber="465">fi</fileline>
            <fileline lineNumber="466" />
            <fileline lineNumber="467">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="468">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="469">####################################################</fileline>
            <fileline lineNumber="470">}</fileline>
            <fileline lineNumber="471" />
            <fileline lineNumber="472">function File_Backup</fileline>
            <fileline lineNumber="473">{</fileline>
            <fileline lineNumber="474">#|# Base_File_To_bck                        : use this var to set which file to backup</fileline>
            <fileline lineNumber="475">#|# ${1}                                    : use this var to set Base_File_To_bck</fileline>
            <fileline lineNumber="476">#|# Basic use     : File_Backup file to backup</fileline>
            <fileline lineNumber="477">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="478">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="479">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="480">######################################################</fileline>
            <fileline lineNumber="481">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="482" />
            <fileline lineNumber="483" />
            <fileline lineNumber="484">Base_File_To_bck="${1}"</fileline>
            <fileline lineNumber="485">Empty_Var_Control "${Base_File_To_bck}" "Base_File_To_bck" "4"</fileline>
            <fileline lineNumber="486" />
            <fileline lineNumber="487" />
            <fileline lineNumber="488">Get_filename "${Base_File_To_bck}"</fileline>
            <fileline lineNumber="489">File_BkcSubDir=$( dirname ${Base_File_To_bck} )</fileline>
            <fileline lineNumber="490">Set_new_directory "${Base_Dir_Scripts_BCK}${File_BkcSubDir}"</fileline>
            <fileline lineNumber="491">Internal_BCK_file="${Base_Dir_Scripts_BCK}${File_BkcSubDir}/${Return_var_Get_filename}_${USE_DATE}"</fileline>
            <fileline lineNumber="492" />
            <fileline lineNumber="493">File_move_or_copy "${Base_File_To_bck}" "${Internal_BCK_file}" "copy" "0"</fileline>
            <fileline lineNumber="494" />
            <fileline lineNumber="495" />
            <fileline lineNumber="496">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="497">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="498">####################################################</fileline>
            <fileline lineNumber="499">}</fileline>
            <fileline lineNumber="500" />
            <fileline lineNumber="501">function File_move_or_copy</fileline>
            <fileline lineNumber="502">{</fileline>
            <fileline lineNumber="503">#|# Base_File_To_move_or_copy                       : use this var to set which file to copy or move</fileline>
            <fileline lineNumber="504">#|# Base_Destination                                : Use this var to set the destination of the files / dirs</fileline>
            <fileline lineNumber="505">#|# Action_type_cpmv                                : use this var to set if you copy or move the file / dirs</fileline>
            <fileline lineNumber="506">#|# Is_To_Dir                                       : Use this var if the destination is a directory</fileline>
            <fileline lineNumber="507">#|#</fileline>
            <fileline lineNumber="508">#|# ${1}                                    : use this var to set Base_File_To_move_or_copy</fileline>
            <fileline lineNumber="509">#|# ${2}                                    : Use this var to set Base_File_Dest</fileline>
            <fileline lineNumber="510">#|# ${3}                                    : use this var to set Action_type_cpmv ( copy = cp | move  = mv )</fileline>
            <fileline lineNumber="511">#|# ${4}                                    : Use this var to set Is_To_Dir</fileline>
            <fileline lineNumber="512">#|# Basic use     : File_move_or_copy "file to MVCP" "destination full path " "action type" "destination is a dir 0/1"</fileline>
            <fileline lineNumber="513">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="514">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="515">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="516">######################################################</fileline>
            <fileline lineNumber="517">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="518" />
            <fileline lineNumber="519" />
            <fileline lineNumber="520">Base_File_To_move_or_copy="${1}"</fileline>
            <fileline lineNumber="521">Base_Destination="${2}"</fileline>
            <fileline lineNumber="522">Action_type_cpmv="${3}"</fileline>
            <fileline lineNumber="523">Is_To_Dir="${4}"</fileline>
            <fileline lineNumber="524" />
            <fileline lineNumber="525">Empty_Var_Control "${Base_File_To_move_or_copy}" "Base_File_To_move_or_copy" "4"</fileline>
            <fileline lineNumber="526">Empty_Var_Control "${Base_Destination}"          "Base_Destination"          "4"</fileline>
            <fileline lineNumber="527">Empty_Var_Control "${Action_type_cpmv}"          "Action_type_cpmv"          "4"</fileline>
            <fileline lineNumber="528" />
            <fileline lineNumber="529" />
            <fileline lineNumber="530">MSG_DISPLAY "debug" "0" "Value for Base_File_To_move_or_copy : [ ${Base_File_To_move_or_copy} ]"</fileline>
            <fileline lineNumber="531">MSG_DISPLAY "debug" "0" "Value for Base_Destination          : [ ${Base_Destination} ]"</fileline>
            <fileline lineNumber="532">MSG_DISPLAY "debug" "0" "Value for Action_type_cpmv          : [ ${Action_type_cpmv} ]"</fileline>
            <fileline lineNumber="533">MSG_DISPLAY "debug" "0" "Value for Is_To_Dir                 : [ ${Is_To_Dir} ]"</fileline>
            <fileline lineNumber="534" />
            <fileline lineNumber="535">if [ "${Is_To_Dir}" = "1" ]</fileline>
            <fileline lineNumber="536">   then</fileline>
            <fileline lineNumber="537">       Set_new_directory="${Base_File_Dest}"</fileline>
            <fileline lineNumber="538">       Internal_CPMV_dest="${Base_Destination}/"</fileline>
            <fileline lineNumber="539">   else</fileline>
            <fileline lineNumber="540">	   Internal_CPMV_dest="${Base_Destination}"</fileline>
            <fileline lineNumber="541">	   #Test_file_presence "${Internal_CPMV_dest}" "Dont_Create_File" "0"</fileline>
            <fileline lineNumber="542">fi</fileline>
            <fileline lineNumber="543" />
            <fileline lineNumber="544">Get_filename "${Base_File_To_move_or_copy}"</fileline>
            <fileline lineNumber="545" />
            <fileline lineNumber="546">MSG_DISPLAY "debug" "0"  "Internal_CPMV_dest is set to : [ ${Internal_CPMV_dest} ]"</fileline>
            <fileline lineNumber="547">case ${Action_type_cpmv} in</fileline>
            <fileline lineNumber="548">     copy|COPY) ACTION_CPVM="cp"</fileline>
            <fileline lineNumber="549">                MSG_DISPLAY "debug" "0" " Choosen action : [ ${Action_type_cpmv} ]"</fileline>
            <fileline lineNumber="550">                if [ -d ${Base_File_To_move_or_copy} ]</fileline>
            <fileline lineNumber="551">                   then</fileline>
            <fileline lineNumber="552">                      Base_Action_Params=" -Rp"</fileline>
            <fileline lineNumber="553">                   else</fileline>
            <fileline lineNumber="554">                      Base_Action_Params=""</fileline>
            <fileline lineNumber="555">                fi</fileline>
            <fileline lineNumber="556">                ;;</fileline>
            <fileline lineNumber="557" />
            <fileline lineNumber="558">     move|MOVE) ACTION_CPVM="mv"</fileline>
            <fileline lineNumber="559">                MSG_DISPLAY "debug" "0" " Choosen action : [ ${Action_type_cpmv} ]"</fileline>
            <fileline lineNumber="560">                Base_Action_Params=""</fileline>
            <fileline lineNumber="561">                ;;</fileline>
            <fileline lineNumber="562" />
            <fileline lineNumber="563">            * ) MSG_DISPLAY "EdEMessage" "2" " Not supported OPTION : [ ${Action_type_cpmv} ]"</fileline>
            <fileline lineNumber="564">                ;;</fileline>
            <fileline lineNumber="565">esac</fileline>
            <fileline lineNumber="566" />
            <fileline lineNumber="567" />
            <fileline lineNumber="568">Test_file_presence "${Base_File_To_move_or_copy}" "Dont_Create_File" "2"</fileline>
            <fileline lineNumber="569">MSG_DISPLAY "debug" "8" "CMD : [ ${ACTION_CPVM} ${Base_Action_Params} ${Base_File_To_move_or_copy}  ${Internal_CPMV_dest} ]"</fileline>
            <fileline lineNumber="570">${ACTION_CPVM} ${Base_Action_Params} ${Base_File_To_move_or_copy}  ${Internal_CPMV_dest}</fileline>
            <fileline lineNumber="571">Test_file_presence "${Internal_CPMV_dest}" "Dont_Create_File" "2"</fileline>
            <fileline lineNumber="572" />
            <fileline lineNumber="573" />
            <fileline lineNumber="574">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="575">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="576">####################################################</fileline>
            <fileline lineNumber="577">}</fileline>
            <fileline lineNumber="578" />
            <fileline lineNumber="579">function File_Read</fileline>
            <fileline lineNumber="580">{</fileline>
            <fileline lineNumber="581">#|# Data_miner                             : Use this var to set which function or cmd to make data mining in line</fileline>
            <fileline lineNumber="582">#|# ${1}                                   : Use this var to set Data_miner</fileline>
            <fileline lineNumber="583">#|# use "&lt;&lt;" to send file to function</fileline>
            <fileline lineNumber="584">#|# Basic usage : File_Read ["data miner"] &lt;&lt; file</fileline>
            <fileline lineNumber="585">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="586">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="587">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="588">######################################################</fileline>
            <fileline lineNumber="589">#MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="590" />
            <fileline lineNumber="591">Data_miner="${1}"</fileline>
            <fileline lineNumber="592" />
            <fileline lineNumber="593">Empty_Var_Control "${Data_miner}" "Data_miner" "4"</fileline>
            <fileline lineNumber="594" />
            <fileline lineNumber="595">while read Internal_myline</fileline>
            <fileline lineNumber="596">  do</fileline>
            <fileline lineNumber="597">    if [ -z "${Data_miner}" ]</fileline>
            <fileline lineNumber="598">       then</fileline>
            <fileline lineNumber="599">       	    echo  " Line DATA : [ ${Internal_myline} ] "</fileline>
            <fileline lineNumber="600">       else</fileline>
            <fileline lineNumber="601">            ${Data_miner} "${Internal_myline}"</fileline>
            <fileline lineNumber="602">    fi</fileline>
            <fileline lineNumber="603">    Internal_myline=""</fileline>
            <fileline lineNumber="604">done</fileline>
            <fileline lineNumber="605" />
            <fileline lineNumber="606">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="607">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="608">####################################################</fileline>
            <fileline lineNumber="609">}</fileline>
            <fileline lineNumber="610" />
            <fileline lineNumber="611">function File_MD5_Create</fileline>
            <fileline lineNumber="612">{</fileline>
            <fileline lineNumber="613">#|# Var to set  : None</fileline>
            <fileline lineNumber="614">#|#             : Use this var to set</fileline>
            <fileline lineNumber="615">#|#             : Use this var to set</fileline>
            <fileline lineNumber="616">#|# ${1}</fileline>
            <fileline lineNumber="617">#|# ${2}</fileline>
            <fileline lineNumber="618">#|#</fileline>
            <fileline lineNumber="619">#|# Base usage  : None</fileline>
            <fileline lineNumber="620">#|#</fileline>
            <fileline lineNumber="621">#|# Description : None</fileline>
            <fileline lineNumber="622">#|#</fileline>
            <fileline lineNumber="623">#|# Send Back   : None</fileline>
            <fileline lineNumber="624">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="625">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="626">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="627">######################################################</fileline>
            <fileline lineNumber="628">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="629" />
            <fileline lineNumber="630" />
            <fileline lineNumber="631" />
            <fileline lineNumber="632">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="633">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="634">####################################################</fileline>
            <fileline lineNumber="635">}</fileline>
            <fileline lineNumber="636" />
            <fileline lineNumber="637">function File_MD5_check_create</fileline>
            <fileline lineNumber="638">{</fileline>
            <fileline lineNumber="639">#|# Var to set           :</fileline>
            <fileline lineNumber="640">#|# File_to_control_MD5  : Use this var to set</fileline>
            <fileline lineNumber="641">#|#                      : Use this var to set</fileline>
            <fileline lineNumber="642">#|# ${1}</fileline>
            <fileline lineNumber="643">#|# ${2}</fileline>
            <fileline lineNumber="644">#|#</fileline>
            <fileline lineNumber="645">#|# Base usage  : None</fileline>
            <fileline lineNumber="646">#|#</fileline>
            <fileline lineNumber="647">#|# Description : None</fileline>
            <fileline lineNumber="648">#|#</fileline>
            <fileline lineNumber="649">#|# Send Back   : None</fileline>
            <fileline lineNumber="650">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="651">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="652">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="653">######################################################</fileline>
            <fileline lineNumber="654">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="655" />
            <fileline lineNumber="656" />
            <fileline lineNumber="657">md5sum -b ${File_to_control_MD5} &gt; ${File_to_control_MD5}.md5</fileline>
            <fileline lineNumber="658" />
            <fileline lineNumber="659">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="660">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="661">####################################################</fileline>
            <fileline lineNumber="662">}</fileline>
            <fileline lineNumber="663" />
            <fileline lineNumber="664">function Fil_Get_Items</fileline>
            <fileline lineNumber="665">{</fileline>
            <fileline lineNumber="666">#|# Var to set  :</fileline>
            <fileline lineNumber="667">#|# FGI_get_Tag            : use this var to set the tag to find to builde var aray          ( Mandatory )</fileline>
            <fileline lineNumber="668">#|# FGI_Level_Item_Info    : Use this var to set which geted item part to keep               ( Mandatory )</fileline>
            <fileline lineNumber="669">#|# FGI_file_to_parse      : use this var to set which file to parse to get items            ( Mandatory )</fileline>
            <fileline lineNumber="670">#|# FGI_Field_Serpparator  : use this var to set which field separator tu use to parse file  ( Optional )</fileline>
            <fileline lineNumber="671">#|# ${1}                    : use this var to set [ FGI_get_Tag ]</fileline>
            <fileline lineNumber="672">#|# ${2}                    : use this var to set [ FGI_Level_Item_Info ]</fileline>
            <fileline lineNumber="673">#|# ${3}                    : use this var to set [ FGI_file_to_parse ]</fileline>
            <fileline lineNumber="674">#|# ${4}                    : use this var to set [ FGI_Field_Serpparator ]</fileline>
            <fileline lineNumber="675">#|#</fileline>
            <fileline lineNumber="676">#|# Base usage  : Fil_Get_Items "FGI_get_Tag" "FGI_Level_Item_Info" "FGI_file_to_parse" [ "FGI_Field_Serpparator" ]</fileline>
            <fileline lineNumber="677">#|# Description : This function scan a file to creat a array of item in a var</fileline>
            <fileline lineNumber="678">#|#</fileline>
            <fileline lineNumber="679">#|# Send Back   : One array var</fileline>
            <fileline lineNumber="680">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="681">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="682">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="683">######################################################</fileline>
            <fileline lineNumber="684">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="685" />
            <fileline lineNumber="686">FGI_get_Tag="${1}"</fileline>
            <fileline lineNumber="687">FGI_Level_Item_Info="${2}"</fileline>
            <fileline lineNumber="688">FGI_file_to_parse="${3}"</fileline>
            <fileline lineNumber="689" />
            <fileline lineNumber="690">Empty_Var_Control "${FGI_get_Tag}"         "FGI_get_Tag"         "4"</fileline>
            <fileline lineNumber="691">Empty_Var_Control "${FGI_Level_Item_Info}" "FGI_Level_Item_Info" "4"</fileline>
            <fileline lineNumber="692">Empty_Var_Control "${FGI_file_to_parse}"   "FGI_file_to_parse"   "4"</fileline>
            <fileline lineNumber="693" />
            <fileline lineNumber="694" />
            <fileline lineNumber="695">for FGI_items_find in $( cat ${FGI_file_to_parse} | grep "${FGI_get_Tag}" | awk -v toprt=${FGI_Level_Item_Info} '{ print $toprt }')</fileline>
            <fileline lineNumber="696">    do</fileline>
            <fileline lineNumber="697">       case "${FGI_items_find}" in</fileline>
            <fileline lineNumber="698">                          *\#) MSG_DISPLAY "debug" "0" "Loop call find [ filtered call ]"</fileline>
            <fileline lineNumber="699">                              ;;</fileline>
            <fileline lineNumber="700">              ${FGI_get_Tag}) MSG_DISPLAY "debug" "0" "Loop call find [ filtered call ]"</fileline>
            <fileline lineNumber="701">                               ;;</fileline>
            <fileline lineNumber="702">                            *) MSG_DISPLAY "debug" "0"  " Item  get from file  [ ${FGI_items_find}  ]  "</fileline>
            <fileline lineNumber="703">                              FGI_Selected_items="${FGI_items_find} ${FGI_Selected_items}"</fileline>
            <fileline lineNumber="704">                              ;;</fileline>
            <fileline lineNumber="705">       esac</fileline>
            <fileline lineNumber="706">done</fileline>
            <fileline lineNumber="707" />
            <fileline lineNumber="708">set GLOBAL_FGI_Selected_items $( echo ${FGI_Selected_items} )</fileline>
            <fileline lineNumber="709" />
            <fileline lineNumber="710">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="711">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="712">####################################################</fileline>
            <fileline lineNumber="713">}</fileline>
            <fileline lineNumber="714" />
            <fileline lineNumber="715"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/system_base/file/fifo_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                                             #</fileline>
            <fileline lineNumber="5"># Subject : This library provide base runtime to manage FIFO input and output #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO </fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11" />
            <fileline lineNumber="12">function Set_new_fifo</fileline>
            <fileline lineNumber="13">{</fileline>
            <fileline lineNumber="14">#|# /**</fileline>
            <fileline lineNumber="15">#|#  * Set_new_fifo</fileline>
            <fileline lineNumber="16">#|#  * @author Arnaud Crampet      </fileline>
            <fileline lineNumber="17">#|#  * @see fifo_lib::UnSet_fifo()</fileline>
            <fileline lineNumber="18">#|#  * @see fifo_lib::Do_fifo_init()</fileline>
            <fileline lineNumber="19">#|#  * @param name		objectname 'fifo'</fileline>
            <fileline lineNumber="20">#|#  * @param attribut	first attribut</fileline>
            <fileline lineNumber="21">#|#  * @param ...		optional attribut</fileline>
            <fileline lineNumber="22">#|#  *</fileline>
            <fileline lineNumber="23">#|#  * List of attributs:</fileline>
            <fileline lineNumber="24">#|#  * - filename=...		the filename of fifo</fileline>
            <fileline lineNumber="25">#|#  * - eof="..."          end of line (used to close the fifo)</fileline>
            <fileline lineNumber="26">#|#  * </fileline>
            <fileline lineNumber="27">#|#  * Usage:</fileline>
            <fileline lineNumber="28">#|#  * - Create a FIFO</fileline>
            <fileline lineNumber="29">#|#  *</fileline>
            <fileline lineNumber="30">#|#  * Examples:</fileline>
            <fileline lineNumber="31">#|#  * - Set_new_fifo my_fifo filename=/tmp/my_fifo</fileline>
            <fileline lineNumber="32">#|#  * - Set_new_fifo my_fifo filename=/tmp/my_fifo eof="END_OF_FILE"</fileline>
            <fileline lineNumber="33">#|#  **/</fileline>
            <fileline lineNumber="34">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="35">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="36">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="37">######################################################</fileline>
            <fileline lineNumber="38">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="39" />
            <fileline lineNumber="40" />
            <fileline lineNumber="41">  nameref self="${1}"</fileline>
            <fileline lineNumber="42">  Empty_Var_Control "${self}"    "self"    "4"</fileline>
            <fileline lineNumber="43">  Do_fifo_init $@</fileline>
            <fileline lineNumber="44" />
            <fileline lineNumber="45">  if [ "${self.filename}" = "" ]; then</fileline>
            <fileline lineNumber="46">     MSG_DISPLAY "EdEMessage" "1" " Fifo ${1} not defined"</fileline>
            <fileline lineNumber="47">  fi  </fileline>
            <fileline lineNumber="48">  if [ -p "${self.filename}" ]; then</fileline>
            <fileline lineNumber="49">     MSG_DISPLAY "EdEMessage" "1" " ${self.filename} is not a fifo"</fileline>
            <fileline lineNumber="50">  fi</fileline>
            <fileline lineNumber="51" />
            <fileline lineNumber="52">  if mkfifo ${self.filename} 2&gt;/dev/null; then</fileline>
            <fileline lineNumber="53">  	 :</fileline>
            <fileline lineNumber="54">  else</fileline>
            <fileline lineNumber="55">     MSG_DISPLAY "EdEMessage" "1" " mkfifo ${self.filename} return code $?"</fileline>
            <fileline lineNumber="56">  fi</fileline>
            <fileline lineNumber="57" />
            <fileline lineNumber="58">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="59">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="60">#################################################### </fileline>
            <fileline lineNumber="61">}</fileline>
            <fileline lineNumber="62" />
            <fileline lineNumber="63">function UnSet_fifo</fileline>
            <fileline lineNumber="64">{</fileline>
            <fileline lineNumber="65">#|# /**</fileline>
            <fileline lineNumber="66">#|#  * UnSet_fifo</fileline>
            <fileline lineNumber="67">#|#  * @author Arnaud Crampet      </fileline>
            <fileline lineNumber="68">#|#  * @see fifo_lib::Set_new_fifo()</fileline>
            <fileline lineNumber="69">#|#  * @param name		objectname 'fifo'</fileline>
            <fileline lineNumber="70">#|#  *</fileline>
            <fileline lineNumber="71">#|#  * Usage:</fileline>
            <fileline lineNumber="72">#|#  * - Delete a FIFO</fileline>
            <fileline lineNumber="73">#|#  *</fileline>
            <fileline lineNumber="74">#|#  * Examples:</fileline>
            <fileline lineNumber="75">#|#  * - UnSet_fifo my_fifo</fileline>
            <fileline lineNumber="76">#|#  **/</fileline>
            <fileline lineNumber="77">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="78">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="79">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="80">######################################################</fileline>
            <fileline lineNumber="81">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="82" />
            <fileline lineNumber="83" />
            <fileline lineNumber="84">  nameref self="${1}"</fileline>
            <fileline lineNumber="85">  Empty_Var_Control "${self}"    "self"    "4"</fileline>
            <fileline lineNumber="86" />
            <fileline lineNumber="87">  if [ "${self.filename}" = "" ]; then</fileline>
            <fileline lineNumber="88">     MSG_DISPLAY "EdEMessage" "1" " Fifo ${1} not defined"</fileline>
            <fileline lineNumber="89">  fi  </fileline>
            <fileline lineNumber="90">  if [ ! -p "${self.filename}" ]; then</fileline>
            <fileline lineNumber="91">     MSG_DISPLAY "EdEMessage" "1" " ${self.filename} is not a fifo"</fileline>
            <fileline lineNumber="92">  fi</fileline>
            <fileline lineNumber="93" />
            <fileline lineNumber="94">  rm ${self.filename}</fileline>
            <fileline lineNumber="95">  unset self.filename</fileline>
            <fileline lineNumber="96">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="97">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="98">#################################################### </fileline>
            <fileline lineNumber="99">}</fileline>
            <fileline lineNumber="100" />
            <fileline lineNumber="101">function Do_fifo_init</fileline>
            <fileline lineNumber="102">{</fileline>
            <fileline lineNumber="103">#|# /**</fileline>
            <fileline lineNumber="104">#|#  * Do_fifo_init</fileline>
            <fileline lineNumber="105">#|#  * @author Arnaud Crampet      </fileline>
            <fileline lineNumber="106">#|#  * @see fifo_lib::Set_new_fifo()</fileline>
            <fileline lineNumber="107">#|#  * @param name		objectname 'fifo'</fileline>
            <fileline lineNumber="108">#|#  * @param attribut	first attribut</fileline>
            <fileline lineNumber="109">#|#  * @param ...		optional attribut</fileline>
            <fileline lineNumber="110">#|#  *</fileline>
            <fileline lineNumber="111">#|#  * List of attributs:</fileline>
            <fileline lineNumber="112">#|#  * - filename=...		the filename of fifo</fileline>
            <fileline lineNumber="113">#|#  * - eof="..."          end of line (used to close the fifo)</fileline>
            <fileline lineNumber="114">#|#  * </fileline>
            <fileline lineNumber="115">#|#  * Usage:</fileline>
            <fileline lineNumber="116">#|#  * - Initialise a FIFO (Doesn't create the fifo file)</fileline>
            <fileline lineNumber="117">#|#  *</fileline>
            <fileline lineNumber="118">#|#  * Examples:</fileline>
            <fileline lineNumber="119">#|#  * - Do_fifo_init my_fifo filename=/tmp/my_fifo</fileline>
            <fileline lineNumber="120">#|#  * - Do_fifo_init my_fifo filename=/tmp/my_fifo eof="END_OF_FILE"</fileline>
            <fileline lineNumber="121">#|#  **/</fileline>
            <fileline lineNumber="122">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="123">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="124">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="125">######################################################</fileline>
            <fileline lineNumber="126">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="127" />
            <fileline lineNumber="128" />
            <fileline lineNumber="129">  local self="${1}"; shift </fileline>
            <fileline lineNumber="130">  nameref self=${self}</fileline>
            <fileline lineNumber="131">  eval "self=( $@ )"</fileline>
            <fileline lineNumber="132" />
            <fileline lineNumber="133">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="134">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="135">#################################################### </fileline>
            <fileline lineNumber="136">}</fileline>
            <fileline lineNumber="137" />
            <fileline lineNumber="138">function Get_fifo_line</fileline>
            <fileline lineNumber="139">{</fileline>
            <fileline lineNumber="140">#|# /**</fileline>
            <fileline lineNumber="141">#|#  * Get_fifo_line</fileline>
            <fileline lineNumber="142">#|#  * @author Arnaud Crampet      </fileline>
            <fileline lineNumber="143">#|#  * @see fifo_lib::Set_fifo_line()</fileline>
            <fileline lineNumber="144">#|#  * @param name		objectname 'fifo'</fileline>
            <fileline lineNumber="145">#|#  *</fileline>
            <fileline lineNumber="146">#|#  * Usage:</fileline>
            <fileline lineNumber="147">#|#  * - Read a set of lines in the FIFO</fileline>
            <fileline lineNumber="148">#|#  *</fileline>
            <fileline lineNumber="149">#|#  * Examples:</fileline>
            <fileline lineNumber="150">#|#  * - Get_fifo_line my_fifo | wc -l</fileline>
            <fileline lineNumber="151">#|#  **/</fileline>
            <fileline lineNumber="152">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="153">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="154">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="155">######################################################</fileline>
            <fileline lineNumber="156">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="157" />
            <fileline lineNumber="158">  nameref self="${1}"</fileline>
            <fileline lineNumber="159">  Empty_Var_Control "${self}"    "self"    "4"</fileline>
            <fileline lineNumber="160" />
            <fileline lineNumber="161">  if [ "${self.filename}" = "" ]; then</fileline>
            <fileline lineNumber="162">    MSG_DISPLAY "EdEMessage" "1" " Fifo ${1} not defined" "1"</fileline>
            <fileline lineNumber="163">  fi  </fileline>
            <fileline lineNumber="164">  if [ ! -p "${self.filename}" ]; then</fileline>
            <fileline lineNumber="165">    MSG_DISPLAY "EdEMessage" "1" " ${self.filename} is not a fifo" "1"</fileline>
            <fileline lineNumber="166">  fi  </fileline>
            <fileline lineNumber="167" />
            <fileline lineNumber="168">  while true</fileline>
            <fileline lineNumber="169">        do</fileline>
            <fileline lineNumber="170">  	       [ ! -p "${self.filename}" ] &amp;&amp; break</fileline>
            <fileline lineNumber="171">           while read -u3 -- line; do</fileline>
            <fileline lineNumber="172">           echo  ${line}</fileline>
            <fileline lineNumber="173">           done &lt; ${self.filename}</fileline>
            <fileline lineNumber="174">   	    sleep 2</fileline>
            <fileline lineNumber="175">  done</fileline>
            <fileline lineNumber="176" />
            <fileline lineNumber="177">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="178">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="179">#################################################### </fileline>
            <fileline lineNumber="180">}</fileline>
            <fileline lineNumber="181" />
            <fileline lineNumber="182">function Set_fifo_line</fileline>
            <fileline lineNumber="183">{</fileline>
            <fileline lineNumber="184">#|# /**</fileline>
            <fileline lineNumber="185">#|#  * Set_fifo_line</fileline>
            <fileline lineNumber="186">#|#  * @author Arnaud Crampet      </fileline>
            <fileline lineNumber="187">#|#  * @see fifo_lib::Get_fifo_line()</fileline>
            <fileline lineNumber="188">#|#  * @param name		objectname 'fifo'</fileline>
            <fileline lineNumber="189">#|#  *</fileline>
            <fileline lineNumber="190">#|#  * Usage:</fileline>
            <fileline lineNumber="191">#|#  * - Write a set of lines in the FIFO</fileline>
            <fileline lineNumber="192">#|#  *</fileline>
            <fileline lineNumber="193">#|#  * Examples:</fileline>
            <fileline lineNumber="194">#|#  * -  cat - | Get_fifo_line my_fifo </fileline>
            <fileline lineNumber="195">#|#  **/</fileline>
            <fileline lineNumber="196">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="197">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="198">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="199">######################################################</fileline>
            <fileline lineNumber="200">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="201" />
            <fileline lineNumber="202" />
            <fileline lineNumber="203">  nameref self="${1}"</fileline>
            <fileline lineNumber="204">  Empty_Var_Control "${self}"    "self"    "4"</fileline>
            <fileline lineNumber="205" />
            <fileline lineNumber="206" />
            <fileline lineNumber="207">  if [ "${self.filename}" = "" ]; then</fileline>
            <fileline lineNumber="208">     MSG_DISPLAY "EdEMessage" "1" " Fifo ${1} not defined"</fileline>
            <fileline lineNumber="209">  fi  </fileline>
            <fileline lineNumber="210">  if [ ! -p "${self.filename}" ]; then</fileline>
            <fileline lineNumber="211">     MSG_DISPLAY "EdEMessage" "1" " ${self.filename} is not a fifo"</fileline>
            <fileline lineNumber="212">  fi  </fileline>
            <fileline lineNumber="213" />
            <fileline lineNumber="214">  cat - &gt; ${self.filename}</fileline>
            <fileline lineNumber="215">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="216">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="217">#################################################### </fileline>
            <fileline lineNumber="218">}</fileline>
            <fileline lineNumber="219" />
            <fileline lineNumber="220"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/system_base/tool_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.</fileline>
            <fileline lineNumber="5"># Subject : This library provide base tool and binaries detection             #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO</fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11">function Get_tool_logger_status                  # EXEC_Global_SET</fileline>
            <fileline lineNumber="12">{</fileline>
            <fileline lineNumber="13">#|# Var to set  : None</fileline>
            <fileline lineNumber="14">#|#</fileline>
            <fileline lineNumber="15">#|# Base usage  : Get_tool_logger_status</fileline>
            <fileline lineNumber="16">#|#</fileline>
            <fileline lineNumber="17">#|# Description : This function is used to check if logger bin is present</fileline>
            <fileline lineNumber="18">#|#</fileline>
            <fileline lineNumber="19">#|# Send Back   : vars</fileline>
            <fileline lineNumber="20">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="21">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="22">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="23">######################################################</fileline>
            <fileline lineNumber="24">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="25" />
            <fileline lineNumber="26" />
            <fileline lineNumber="27">MSG_DISPLAY "check" "0" "System logger status :"</fileline>
            <fileline lineNumber="28" />
            <fileline lineNumber="29">Global_Tool_Logger_bin="$(wich logger 2&gt;&gt; ${Base_Dir_Scripts_LOG}/Tool.log )"</fileline>
            <fileline lineNumber="30">if [ -z ${Global_Tool_Logger_bin} ]</fileline>
            <fileline lineNumber="31">   then</fileline>
            <fileline lineNumber="32">   	   Global_Tool_Logger_Status="DISABLED"      # EXEC_Global_SET_control_sanity</fileline>
            <fileline lineNumber="33">	   MSG_DISPLAY "EdWMessage" "2" "${Global_Tool_Logger_Status}"</fileline>
            <fileline lineNumber="34" />
            <fileline lineNumber="35">   else</fileline>
            <fileline lineNumber="36">       Global_Tool_Logger_Status="ENABLED"</fileline>
            <fileline lineNumber="37">       MSG_DISPLAY "EdSMessage" "${Global_Tool_Logger_Status}"</fileline>
            <fileline lineNumber="38" />
            <fileline lineNumber="39" />
            <fileline lineNumber="40">fi</fileline>
            <fileline lineNumber="41" />
            <fileline lineNumber="42">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="43">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="44">####################################################</fileline>
            <fileline lineNumber="45">}</fileline>
            <fileline lineNumber="46" />
            <fileline lineNumber="47">function Get_tool_cvs_status                   # EXEC_Global_SET</fileline>
            <fileline lineNumber="48">{</fileline>
            <fileline lineNumber="49">#|# Var to set  : None</fileline>
            <fileline lineNumber="50">#|#</fileline>
            <fileline lineNumber="51">#|# Base usage  : Get_tool_cvs_status</fileline>
            <fileline lineNumber="52">#|#</fileline>
            <fileline lineNumber="53">#|# Description : This function is used to check if md5sum bin is present</fileline>
            <fileline lineNumber="54">#|#</fileline>
            <fileline lineNumber="55">#|# Send Back   : vars</fileline>
            <fileline lineNumber="56">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="57">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="58">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="59">######################################################</fileline>
            <fileline lineNumber="60">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="61" />
            <fileline lineNumber="62">MSG_DISPLAY "check" "0" "System CVS status :"</fileline>
            <fileline lineNumber="63">Global_Tool_cvs_bin="$(which cvs 2&gt;&gt; ${Base_Dir_Scripts_LOG}/Tool.log )"</fileline>
            <fileline lineNumber="64">if [ -z ${Global_Tool_cvs_bin} ]</fileline>
            <fileline lineNumber="65">   then</fileline>
            <fileline lineNumber="66">       Global_Tool_cvs_Status="DISABLED"         # EXEC_Global_SET_control_sanity</fileline>
            <fileline lineNumber="67">	   MSG_DISPLAY "EdWMessage" "2" "${Global_Tool_cvs_Status}"</fileline>
            <fileline lineNumber="68">   else</fileline>
            <fileline lineNumber="69" />
            <fileline lineNumber="70">       Global_Tool_cvs_Status="ENABLED"</fileline>
            <fileline lineNumber="71">       MSG_DISPLAY "EdSMessage" "${Global_Tool_cvs_Status}"</fileline>
            <fileline lineNumber="72">fi</fileline>
            <fileline lineNumber="73" />
            <fileline lineNumber="74">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="75">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="76">####################################################</fileline>
            <fileline lineNumber="77">}</fileline>
            <fileline lineNumber="78" />
            <fileline lineNumber="79">function Get_tool_md5um_status                   # EXEC_Global_SET</fileline>
            <fileline lineNumber="80">{</fileline>
            <fileline lineNumber="81">#|# Var to set  : None</fileline>
            <fileline lineNumber="82">#|#</fileline>
            <fileline lineNumber="83">#|# Base usage  : Tool_md5sum_Get</fileline>
            <fileline lineNumber="84">#|#</fileline>
            <fileline lineNumber="85">#|# Description : This function is used to check if md5sum bin is present</fileline>
            <fileline lineNumber="86">#|#</fileline>
            <fileline lineNumber="87">#|# Send Back   : vars</fileline>
            <fileline lineNumber="88">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="89">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="90">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="91">######################################################</fileline>
            <fileline lineNumber="92">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="93" />
            <fileline lineNumber="94">MSG_DISPLAY "check" "0" "System md5sum status :"</fileline>
            <fileline lineNumber="95">Global_Tool_md5sum_bin="$(which md5sum 2&gt;&gt; ${Base_Dir_Scripts_LOG}/Tool.log )"</fileline>
            <fileline lineNumber="96">if [ -z ${Global_Tool_md5sum_bin} ]</fileline>
            <fileline lineNumber="97">   then</fileline>
            <fileline lineNumber="98">       Global_Tool_md5sum_Status="DISABLED"      # EXEC_Global_SET_control_sanity</fileline>
            <fileline lineNumber="99">	   MSG_DISPLAY "EdWMessage" "2" "${Global_Tool_md5sum_Status}"</fileline>
            <fileline lineNumber="100">   else</fileline>
            <fileline lineNumber="101">       Global_Tool_md5sum_Status="ENABLED"</fileline>
            <fileline lineNumber="102">       MSG_DISPLAY "EdSMessage" "${Global_Tool_md5sum_Status}"</fileline>
            <fileline lineNumber="103">fi</fileline>
            <fileline lineNumber="104" />
            <fileline lineNumber="105">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="106">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="107">####################################################</fileline>
            <fileline lineNumber="108">}</fileline>
            <fileline lineNumber="109" />
            <fileline lineNumber="110">function Get_tool_perl_status                   # EXEC_Global_SET</fileline>
            <fileline lineNumber="111">{</fileline>
            <fileline lineNumber="112">#|# Var to set  : None</fileline>
            <fileline lineNumber="113">#|#</fileline>
            <fileline lineNumber="114">#|# Base usage  : Get_tool_perl_status</fileline>
            <fileline lineNumber="115">#|#</fileline>
            <fileline lineNumber="116">#|# Description : This function is used to check if perl bin is present</fileline>
            <fileline lineNumber="117">#|#</fileline>
            <fileline lineNumber="118">#|# Send Back   : vars</fileline>
            <fileline lineNumber="119">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="120">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="121">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="122">######################################################</fileline>
            <fileline lineNumber="123">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="124" />
            <fileline lineNumber="125">MSG_DISPLAY "check" "0" "System perl status :"</fileline>
            <fileline lineNumber="126">Global_Tool_perl_bin="$(which perl  2&gt;&gt; ${Base_Dir_Scripts_LOG}/Tool.log )"</fileline>
            <fileline lineNumber="127">if [ -z ${Global_Tool_perl_bin} ]</fileline>
            <fileline lineNumber="128">   then</fileline>
            <fileline lineNumber="129">       Global_Tool_perl_Status="DISABLED"        # EXEC_Global_SET_control_sanity</fileline>
            <fileline lineNumber="130">	   MSG_DISPLAY "EdWMessage" "2" "${Global_Tool_perl_Status}"</fileline>
            <fileline lineNumber="131">   else</fileline>
            <fileline lineNumber="132">       Global_Tool_perl_Status="ENABLED"</fileline>
            <fileline lineNumber="133">       MSG_DISPLAY "EdSMessage" "${Global_Tool_perl_Status}"</fileline>
            <fileline lineNumber="134">fi</fileline>
            <fileline lineNumber="135" />
            <fileline lineNumber="136">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="137">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="138">####################################################</fileline>
            <fileline lineNumber="139">}</fileline>
            <fileline lineNumber="140" />
            <fileline lineNumber="141">function Get_tool_wget_status                   # EXEC_Global_SET</fileline>
            <fileline lineNumber="142">{</fileline>
            <fileline lineNumber="143">#|# Var to set  : None</fileline>
            <fileline lineNumber="144">#|#</fileline>
            <fileline lineNumber="145">#|# Base usage  : Get_tool_wget_status</fileline>
            <fileline lineNumber="146">#|#</fileline>
            <fileline lineNumber="147">#|# Description : This function is used to check if wget bin is present</fileline>
            <fileline lineNumber="148">#|#</fileline>
            <fileline lineNumber="149">#|# Send Back   : vars</fileline>
            <fileline lineNumber="150">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="151">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="152">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="153">######################################################</fileline>
            <fileline lineNumber="154">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="155" />
            <fileline lineNumber="156">MSG_DISPLAY "check" "0" "System wget status :"</fileline>
            <fileline lineNumber="157">Global_Tool_wget_bin="$(which wget  2&gt;&gt; ${Base_Dir_Scripts_LOG}/Tool.log )"</fileline>
            <fileline lineNumber="158">if [ -z ${Global_Tool_wget_bin} ]</fileline>
            <fileline lineNumber="159">   then</fileline>
            <fileline lineNumber="160">       Global_Tool_wget_Status="DISABLED"        # EXEC_Global_SET_control_sanity</fileline>
            <fileline lineNumber="161">	   MSG_DISPLAY "EdWMessage" "2" "${Global_Tool_wget_Status}"</fileline>
            <fileline lineNumber="162">   else</fileline>
            <fileline lineNumber="163">       Global_Tool_wget_Status="ENABLED"</fileline>
            <fileline lineNumber="164">       MSG_DISPLAY "EdSMessage" "${Global_Tool_wget_Status}"</fileline>
            <fileline lineNumber="165">fi</fileline>
            <fileline lineNumber="166" />
            <fileline lineNumber="167">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="168">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="169">####################################################</fileline>
            <fileline lineNumber="170">}</fileline>
            <fileline lineNumber="171" />
            <fileline lineNumber="172">function Get_tool_awk_status                   # EXEC_Global_SET</fileline>
            <fileline lineNumber="173">{</fileline>
            <fileline lineNumber="174">#|# Var to set  : None</fileline>
            <fileline lineNumber="175">#|#</fileline>
            <fileline lineNumber="176">#|# Base usage  : Get_tool_awk_status</fileline>
            <fileline lineNumber="177">#|#</fileline>
            <fileline lineNumber="178">#|# Description : This function is used to check if awk bin is present</fileline>
            <fileline lineNumber="179">#|#</fileline>
            <fileline lineNumber="180">#|# Send Back   : vars</fileline>
            <fileline lineNumber="181">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="182">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="183">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="184">######################################################</fileline>
            <fileline lineNumber="185">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="186" />
            <fileline lineNumber="187">MSG_DISPLAY "check" "0" "System awk status :"</fileline>
            <fileline lineNumber="188">Global_Tool_awk_bin="$(which awk  2&gt;&gt; ${Base_Dir_Scripts_LOG}/Tool.log )"</fileline>
            <fileline lineNumber="189">if [ -z ${Global_Tool_awk_bin} ]</fileline>
            <fileline lineNumber="190">   then</fileline>
            <fileline lineNumber="191">       Global_Tool_awk_Status="DISABLED"        # EXEC_Global_MANDATORY_control_sanity</fileline>
            <fileline lineNumber="192">	   MSG_DISPLAY "EdWMessage" "2" "${Global_Tool_awk_Status}"</fileline>
            <fileline lineNumber="193">   else</fileline>
            <fileline lineNumber="194">       Global_Tool_awk_Status="ENABLED"</fileline>
            <fileline lineNumber="195">       MSG_DISPLAY "EdSMessage" "${Global_Tool_awk_Status}"</fileline>
            <fileline lineNumber="196">fi</fileline>
            <fileline lineNumber="197" />
            <fileline lineNumber="198">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="199">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="200">####################################################</fileline>
            <fileline lineNumber="201">}</fileline>
            <fileline lineNumber="202" />
            <fileline lineNumber="203">function Get_tool_wc_status                   # EXEC_Global_SET</fileline>
            <fileline lineNumber="204">{</fileline>
            <fileline lineNumber="205">#|# Var to set  : None</fileline>
            <fileline lineNumber="206">#|#</fileline>
            <fileline lineNumber="207">#|# Base usage  : Get_tool_wc_status</fileline>
            <fileline lineNumber="208">#|#</fileline>
            <fileline lineNumber="209">#|# Description : This function is used to check if wc bin is present</fileline>
            <fileline lineNumber="210">#|#</fileline>
            <fileline lineNumber="211">#|# Send Back   : vars</fileline>
            <fileline lineNumber="212">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="213">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="214">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="215">######################################################</fileline>
            <fileline lineNumber="216">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="217" />
            <fileline lineNumber="218">MSG_DISPLAY "check" "0" "System wc status :"</fileline>
            <fileline lineNumber="219">Global_Tool_wc_bin="$(which wc  2&gt;&gt; ${Base_Dir_Scripts_LOG}/Tool.log )"</fileline>
            <fileline lineNumber="220">if [ -z ${Global_Tool_wc_bin} ]</fileline>
            <fileline lineNumber="221">   then</fileline>
            <fileline lineNumber="222">    Global_Tool_wc_Status="DISABLED"                          # EXEC_Global_SET_control_sanity</fileline>
            <fileline lineNumber="223">	   MSG_DISPLAY "EdWMessage" "2" "${Global_Tool_wc_Status}"</fileline>
            <fileline lineNumber="224">   else</fileline>
            <fileline lineNumber="225">       Global_Tool_wc_Status="ENABLED"</fileline>
            <fileline lineNumber="226">       MSG_DISPLAY "EdSMessage" "${Global_Tool_wc_Status}"</fileline>
            <fileline lineNumber="227">fi</fileline>
            <fileline lineNumber="228" />
            <fileline lineNumber="229">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="230">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="231">####################################################</fileline>
            <fileline lineNumber="232">}</fileline>
            <fileline lineNumber="233" />
            <fileline lineNumber="234" />
            <fileline lineNumber="235">function Get_tool_tail_status                   # EXEC_Global_SET</fileline>
            <fileline lineNumber="236">{</fileline>
            <fileline lineNumber="237">#|# Var to set  : None</fileline>
            <fileline lineNumber="238">#|#</fileline>
            <fileline lineNumber="239">#|# Base usage  : Get_tool_tail_status</fileline>
            <fileline lineNumber="240">#|#</fileline>
            <fileline lineNumber="241">#|# Description : This function is used to check if tail bin is present</fileline>
            <fileline lineNumber="242">#|#</fileline>
            <fileline lineNumber="243">#|# Send Back   : vars</fileline>
            <fileline lineNumber="244">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="245">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="246">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="247">######################################################</fileline>
            <fileline lineNumber="248">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="249" />
            <fileline lineNumber="250">MSG_DISPLAY "check" "0" "System tail status :"</fileline>
            <fileline lineNumber="251">Global_Tool_tail_bin="$(which tail  2&gt;&gt; ${Base_Dir_Scripts_LOG}/Tool.log )"</fileline>
            <fileline lineNumber="252">if [ -z ${Global_Tool_tail_bin} ]</fileline>
            <fileline lineNumber="253">   then</fileline>
            <fileline lineNumber="254">    Global_Tool_tail_Status="DISABLED"        # EXEC_Global_SET_control_sanity</fileline>
            <fileline lineNumber="255">	   MSG_DISPLAY "EdWMessage" "2" "${Global_Tool_tail_Status}"</fileline>
            <fileline lineNumber="256">   else</fileline>
            <fileline lineNumber="257">       Global_Tool_tail_Status="ENABLED"</fileline>
            <fileline lineNumber="258">       MSG_DISPLAY "EdSMessage" "${Global_Tool_tail_Status}"</fileline>
            <fileline lineNumber="259">fi</fileline>
            <fileline lineNumber="260" />
            <fileline lineNumber="261">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="262">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="263">####################################################</fileline>
            <fileline lineNumber="264">}</fileline>
            <fileline lineNumber="265" />
            <fileline lineNumber="266" />
            <fileline lineNumber="267">function Get_tool_head_status                   # EXEC_Global_SET</fileline>
            <fileline lineNumber="268">{</fileline>
            <fileline lineNumber="269">#|# Var to set  : None</fileline>
            <fileline lineNumber="270">#|#</fileline>
            <fileline lineNumber="271">#|# Base usage  : Get_tool_head_status</fileline>
            <fileline lineNumber="272">#|#</fileline>
            <fileline lineNumber="273">#|# Description : This function is used to check if head bin is present</fileline>
            <fileline lineNumber="274">#|#</fileline>
            <fileline lineNumber="275">#|# Send Back   : vars</fileline>
            <fileline lineNumber="276">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="277">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="278">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="279">######################################################</fileline>
            <fileline lineNumber="280">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="281" />
            <fileline lineNumber="282" />
            <fileline lineNumber="283">MSG_DISPLAY "check" "0" "System head status :"</fileline>
            <fileline lineNumber="284">Global_Tool_head_bin="$(which head  2&gt;&gt; ${Base_Dir_Scripts_LOG}/Tool.log )"</fileline>
            <fileline lineNumber="285">if [ -z ${Global_Tool_head_bin} ]</fileline>
            <fileline lineNumber="286">   then</fileline>
            <fileline lineNumber="287">    Global_Tool_head_Status="DISABLED"        # EXEC_Global_SET_control_sanity</fileline>
            <fileline lineNumber="288">	   MSG_DISPLAY "EdWMessage" "2" "${Global_Tool_head_Status}"</fileline>
            <fileline lineNumber="289">   else</fileline>
            <fileline lineNumber="290">       Global_Tool_head_Status="ENABLED"</fileline>
            <fileline lineNumber="291">       MSG_DISPLAY "EdSMessage" "${Global_Tool_head_Status}"</fileline>
            <fileline lineNumber="292">fi</fileline>
            <fileline lineNumber="293" />
            <fileline lineNumber="294">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="295">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="296">####################################################</fileline>
            <fileline lineNumber="297">}</fileline>
            <fileline lineNumber="298" />
            <fileline lineNumber="299" />
            <fileline lineNumber="300" />
            <fileline lineNumber="301">function Get_tool_grep_status                   # EXEC_Global_SET</fileline>
            <fileline lineNumber="302">{</fileline>
            <fileline lineNumber="303">#|# Var to set  : None</fileline>
            <fileline lineNumber="304">#|#</fileline>
            <fileline lineNumber="305">#|# Base usage  : Get_tool_grep_status</fileline>
            <fileline lineNumber="306">#|#</fileline>
            <fileline lineNumber="307">#|# Description : This function is used to check if grep bin is present</fileline>
            <fileline lineNumber="308">#|#</fileline>
            <fileline lineNumber="309">#|# Send Back   : vars</fileline>
            <fileline lineNumber="310">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="311">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="312">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="313">######################################################</fileline>
            <fileline lineNumber="314">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="315" />
            <fileline lineNumber="316" />
            <fileline lineNumber="317">MSG_DISPLAY "check" "0" "System grep status :"</fileline>
            <fileline lineNumber="318">Global_Tool_grep_bin="$(which grep  2&gt;&gt; ${Base_Dir_Scripts_LOG}/Tool.log )"</fileline>
            <fileline lineNumber="319">if [ -z ${Global_Tool_grep_bin} ]</fileline>
            <fileline lineNumber="320">   then</fileline>
            <fileline lineNumber="321">       Global_Tool_grep_Status="DISABLED"        # EXEC_Global_MANDATORY_control_sanity</fileline>
            <fileline lineNumber="322">	   MSG_DISPLAY "EdWMessage" "2" "${Global_Tool_grep_Status}"</fileline>
            <fileline lineNumber="323">   else</fileline>
            <fileline lineNumber="324">       Global_Tool_grep_Status="ENABLED"</fileline>
            <fileline lineNumber="325">       MSG_DISPLAY "EdSMessage" "${Global_Tool_grep_Status}"</fileline>
            <fileline lineNumber="326">fi</fileline>
            <fileline lineNumber="327" />
            <fileline lineNumber="328">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="329">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="330">####################################################</fileline>
            <fileline lineNumber="331">}</fileline>
            <fileline lineNumber="332" />
            <fileline lineNumber="333" />
            <fileline lineNumber="334">function Get_tool_uuencode_status                                     # EXEC_Global_SET</fileline>
            <fileline lineNumber="335">{</fileline>
            <fileline lineNumber="336">#|# Var to set  : None</fileline>
            <fileline lineNumber="337">#|#</fileline>
            <fileline lineNumber="338">#|# Base usage  : Get_tool_uuencode_status</fileline>
            <fileline lineNumber="339">#|#</fileline>
            <fileline lineNumber="340">#|# Description : This function is used to check if uuencode bin is present</fileline>
            <fileline lineNumber="341">#|#</fileline>
            <fileline lineNumber="342">#|# Send Back   : Vars</fileline>
            <fileline lineNumber="343">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="344">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="345">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="346">######################################################</fileline>
            <fileline lineNumber="347">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="348" />
            <fileline lineNumber="349" />
            <fileline lineNumber="350">MSG_DISPLAY "check" "0" "System uuencode status :"</fileline>
            <fileline lineNumber="351">Global_Tool_uuencode_bin="$( which uuencode  2&gt;&gt; ${Base_Dir_Scripts_LOG}/Tool.log )"</fileline>
            <fileline lineNumber="352" />
            <fileline lineNumber="353" />
            <fileline lineNumber="354">if [ -z ${Global_Tool_uuencode_bin} ]</fileline>
            <fileline lineNumber="355">   then</fileline>
            <fileline lineNumber="356">   	    Global_Tool_uuencode_Status="DISABLED"</fileline>
            <fileline lineNumber="357">        MSG_DISPLAY "EdWMessage" "2" "${Global_Tool_grep_Status}"</fileline>
            <fileline lineNumber="358" />
            <fileline lineNumber="359">   else</fileline>
            <fileline lineNumber="360">        Global_Tool_uuencode_Status="ENABLED"    # EXEC_Global_SET_control_sanity</fileline>
            <fileline lineNumber="361">        MSG_DISPLAY "EdSMessage" "2" "${Global_Tool_grep_Status}"</fileline>
            <fileline lineNumber="362" />
            <fileline lineNumber="363">fi</fileline>
            <fileline lineNumber="364" />
            <fileline lineNumber="365" />
            <fileline lineNumber="366" />
            <fileline lineNumber="367" />
            <fileline lineNumber="368">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="369">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="370">####################################################</fileline>
            <fileline lineNumber="371">}</fileline>
            <fileline lineNumber="372" />
            <fileline lineNumber="373">function Get_tool_mail_status                                         # EXEC_Global_SET</fileline>
            <fileline lineNumber="374">{</fileline>
            <fileline lineNumber="375">#|# Var to set  : None</fileline>
            <fileline lineNumber="376">#|#</fileline>
            <fileline lineNumber="377">#|# Base usage  : Get_tool_mail_status</fileline>
            <fileline lineNumber="378">#|#</fileline>
            <fileline lineNumber="379">#|# Description : This function is used to check if mail bin is present</fileline>
            <fileline lineNumber="380">#|#</fileline>
            <fileline lineNumber="381">#|# Send Back   : Vars</fileline>
            <fileline lineNumber="382">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="383">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="384">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="385">######################################################</fileline>
            <fileline lineNumber="386">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="387" />
            <fileline lineNumber="388">MSG_DISPLAY "check" "0" "System mail status :"</fileline>
            <fileline lineNumber="389">Global_Tool_mail_bin="$( which mail  2&gt;&gt; ${Base_Dir_Scripts_LOG}/Tool.log )"</fileline>
            <fileline lineNumber="390">if [ -z ${Global_Tool_mail_bin} ]</fileline>
            <fileline lineNumber="391">   then</fileline>
            <fileline lineNumber="392">   	    Global_Tool_mail_Status="DISABLED"</fileline>
            <fileline lineNumber="393">   	    MSG_DISPLAY "EdWMessage" "2" "${Global_Tool_mail_Status}"</fileline>
            <fileline lineNumber="394">   else</fileline>
            <fileline lineNumber="395">        Global_Tool_mail_Status="ENABLED"    # EXEC_Global_SET_control_sanity</fileline>
            <fileline lineNumber="396">        MSG_DISPLAY "EdSMessage" "${Global_Tool_mail_Status}"</fileline>
            <fileline lineNumber="397">fi</fileline>
            <fileline lineNumber="398" />
            <fileline lineNumber="399" />
            <fileline lineNumber="400">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="401">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="402">####################################################</fileline>
            <fileline lineNumber="403">}</fileline>
            <fileline lineNumber="404" />
            <fileline lineNumber="405">function Get_tool_mailx_status                                        # EXEC_Global_SET</fileline>
            <fileline lineNumber="406">{</fileline>
            <fileline lineNumber="407">#|# Var to set  : None</fileline>
            <fileline lineNumber="408">#|#</fileline>
            <fileline lineNumber="409">#|# Base usage  : Get_tool_mailx_status</fileline>
            <fileline lineNumber="410">#|#</fileline>
            <fileline lineNumber="411">#|# Description : This function is used to check if mailx bin is present</fileline>
            <fileline lineNumber="412">#|#</fileline>
            <fileline lineNumber="413">#|# Send Back   : Vars</fileline>
            <fileline lineNumber="414">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="415">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="416">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="417">######################################################</fileline>
            <fileline lineNumber="418">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="419" />
            <fileline lineNumber="420">MSG_DISPLAY "check" "0" "System mailx status :"</fileline>
            <fileline lineNumber="421">Global_Tool_mailx_bin="$( which mailx  2&gt;&gt; ${Base_Dir_Scripts_LOG}/Tool.log )"</fileline>
            <fileline lineNumber="422">if [ -z ${Global_Tool_mailx_bin} ]</fileline>
            <fileline lineNumber="423">   then</fileline>
            <fileline lineNumber="424">   	   Global_Tool_mailx_Status="DISABLED"</fileline>
            <fileline lineNumber="425">   	   MSG_DISPLAY "EdWMessage" "2" "${Global_Tool_mailx_Status}"</fileline>
            <fileline lineNumber="426">   else</fileline>
            <fileline lineNumber="427">       Global_Tool_mailx_Status="ENABLED"    # EXEC_Global_SET_control_sanity</fileline>
            <fileline lineNumber="428">       MSG_DISPLAY "EdSMessage" "${Global_Tool_mailx_Status}"</fileline>
            <fileline lineNumber="429">fi</fileline>
            <fileline lineNumber="430" />
            <fileline lineNumber="431" />
            <fileline lineNumber="432">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="433">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="434">####################################################</fileline>
            <fileline lineNumber="435">}</fileline>
            <fileline lineNumber="436" />
            <fileline lineNumber="437">function Get_tool_mutt_status                                         # EXEC_Global_SET</fileline>
            <fileline lineNumber="438">{</fileline>
            <fileline lineNumber="439">#|# Var to set  : None</fileline>
            <fileline lineNumber="440">#|#</fileline>
            <fileline lineNumber="441">#|# Base usage  : Get_tool_mutt_status</fileline>
            <fileline lineNumber="442">#|#</fileline>
            <fileline lineNumber="443">#|# Description : This function is used to check if mutt bin is present</fileline>
            <fileline lineNumber="444">#|#</fileline>
            <fileline lineNumber="445">#|# Send Back   : Vars</fileline>
            <fileline lineNumber="446">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="447">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="448">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="449">######################################################</fileline>
            <fileline lineNumber="450">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="451" />
            <fileline lineNumber="452">MSG_DISPLAY "check" "0" "System mutt status :"</fileline>
            <fileline lineNumber="453">Global_Tool_mutt_bin="$( which mutt  2&gt;&gt; ${Base_Dir_Scripts_LOG}/Tool.log )"</fileline>
            <fileline lineNumber="454">if [ -z ${Global_Tool_mutt_bin} ]</fileline>
            <fileline lineNumber="455">   then</fileline>
            <fileline lineNumber="456">   	   Global_Tool_mutt_Status="DISABLED"</fileline>
            <fileline lineNumber="457">	   MSG_DISPLAY "EdWMessage" "2" "${Global_Tool_mutt_Status}"</fileline>
            <fileline lineNumber="458">   else</fileline>
            <fileline lineNumber="459">       Global_Tool_mutt_Status="ENABLED"    # EXEC_Global_SET_control_sanity</fileline>
            <fileline lineNumber="460">       MSG_DISPLAY "EdEMessage" "2" "${Global_Tool_mutt_Status}"</fileline>
            <fileline lineNumber="461">fi</fileline>
            <fileline lineNumber="462" />
            <fileline lineNumber="463" />
            <fileline lineNumber="464">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="465">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="466">####################################################</fileline>
            <fileline lineNumber="467">}</fileline>
            <fileline lineNumber="468" />
            <fileline lineNumber="469">function Set_tool_global_status</fileline>
            <fileline lineNumber="470">{</fileline>
            <fileline lineNumber="471">#|# Var to set  : None</fileline>
            <fileline lineNumber="472">#|#</fileline>
            <fileline lineNumber="473">#|# Base usage  : Get_tool_perl_status</fileline>
            <fileline lineNumber="474">#|#</fileline>
            <fileline lineNumber="475">#|# Description : This function is used to check if perl bin is present</fileline>
            <fileline lineNumber="476">#|#</fileline>
            <fileline lineNumber="477">#|# Send Back   : vars</fileline>
            <fileline lineNumber="478">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="479">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="480">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="481">######################################################</fileline>
            <fileline lineNumber="482">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="483" />
            <fileline lineNumber="484" />
            <fileline lineNumber="485">Get_tool_items_exe "EXEC_Global_SET" "2" "${Base_Dir_Scripts_Lib}/system_base/tool_lib.sh"</fileline>
            <fileline lineNumber="486" />
            <fileline lineNumber="487" />
            <fileline lineNumber="488">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="489">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="490">####################################################</fileline>
            <fileline lineNumber="491">}</fileline>
            <fileline lineNumber="492" />
            <fileline lineNumber="493">function Get_tool_items_exe</fileline>
            <fileline lineNumber="494">{</fileline>
            <fileline lineNumber="495">#|# Var to set  :</fileline>
            <fileline lineNumber="496">#|# TGITE_get_Tag            : use this var to set the tag to find to builde var aray          ( Mandatory )</fileline>
            <fileline lineNumber="497">#|# TGITE_Level_Item_Info    : Use this var to set which geted item part to keep               ( Mandatory )</fileline>
            <fileline lineNumber="498">#|# TGITE_file_to_parse      : use this var to set which file to parse to get items            ( Mandatory )</fileline>
            <fileline lineNumber="499">#|# ${1}                    : use this var to set [ TGITE_get_Tag ]</fileline>
            <fileline lineNumber="500">#|# ${2}                    : use this var to set [ TGITE_Level_Item_Info ]</fileline>
            <fileline lineNumber="501">#|# ${3}                    : use this var to set [ TGITE_file_to_parse ]</fileline>
            <fileline lineNumber="502">#|#</fileline>
            <fileline lineNumber="503">#|# Base usage  : Get_tool_items_exe "TGITE_get_Tag" "TGITE_Level_Item_Info" "TGITE_file_to_parse" [ "TGITE_Field_Serpparator" ]</fileline>
            <fileline lineNumber="504">#|# Description : This function scan a file to creat a array of function to execute</fileline>
            <fileline lineNumber="505">#|#</fileline>
            <fileline lineNumber="506">#|# Send Back   : function execution</fileline>
            <fileline lineNumber="507">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="508">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="509">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="510">######################################################</fileline>
            <fileline lineNumber="511">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="512" />
            <fileline lineNumber="513">local TGITE_get_Tag="${1}"</fileline>
            <fileline lineNumber="514">local TGITE_Level_Item_Info="${2}"</fileline>
            <fileline lineNumber="515">local TGITE_file_to_parse="${3}"</fileline>
            <fileline lineNumber="516" />
            <fileline lineNumber="517" />
            <fileline lineNumber="518" />
            <fileline lineNumber="519">for TGITE_items_find in $( cat ${TGITE_file_to_parse} | grep "${TGITE_get_Tag}" | egrep -v "Get_tool_items_exe" | awk -v toprt=${TGITE_Level_Item_Info} '{ print $toprt }')</fileline>
            <fileline lineNumber="520">    do</fileline>
            <fileline lineNumber="521">       case "${TGITE_items_find}" in</fileline>
            <fileline lineNumber="522">                          *\#) MSG_DISPLAY "debug" "0" "Loop call find [ filtered call ]"</fileline>
            <fileline lineNumber="523">                              ;;</fileline>
            <fileline lineNumber="524">             ${TGITE_get_Tag}) MSG_DISPLAY "debug" "0" "Loop call find [ filtered call ]"</fileline>
            <fileline lineNumber="525">                               ;;</fileline>
            <fileline lineNumber="526">                            *)MSG_DISPLAY "debug" "0"  " Item  get from file  [ ${TGITE_items_find}  ]  "</fileline>
            <fileline lineNumber="527">                              TGITE_Selected_items="${TGITE_items_find} ${TGITE_Selected_items}"</fileline>
            <fileline lineNumber="528">                              ;;</fileline>
            <fileline lineNumber="529">       esac</fileline>
            <fileline lineNumber="530">done</fileline>
            <fileline lineNumber="531" />
            <fileline lineNumber="532">for TGITE_to_execute in ${TGITE_Selected_items}</fileline>
            <fileline lineNumber="533">    do</fileline>
            <fileline lineNumber="534">       ${TGITE_to_execute}</fileline>
            <fileline lineNumber="535">done</fileline>
            <fileline lineNumber="536" />
            <fileline lineNumber="537">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="538">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="539">####################################################</fileline>
            <fileline lineNumber="540">}</fileline>
            <fileline lineNumber="541" />
            <fileline lineNumber="542" />
            <fileline lineNumber="543" />
            <fileline lineNumber="544" />
            <fileline lineNumber="545" />
            <fileline lineNumber="546"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/system_base/directory_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 28/06/2024</fileline>
            <fileline lineNumber="4"># generic auto documentation from CAST </fileline>
            <fileline lineNumber="5"># Subject : This library provide base runtime to check directory properties   #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO </fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11" />
            <fileline lineNumber="12">################################## Directory function </fileline>
            <fileline lineNumber="13" />
            <fileline lineNumber="14">function Dir_null_or_slash</fileline>
            <fileline lineNumber="15">{</fileline>
            <fileline lineNumber="16">#|# Path_To_test : Use this var to set the path to test </fileline>
            <fileline lineNumber="17">#|# ${1}         : use this var to set Path_To_test</fileline>
            <fileline lineNumber="18">#|# base usage   :</fileline>
            <fileline lineNumber="19">#|#                Dir_null_or_slash "My_directory_path"</fileline>
            <fileline lineNumber="20">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="21">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="22">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="23">######################################################</fileline>
            <fileline lineNumber="24">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="25" />
            <fileline lineNumber="26">local Path_To_test="${1}"</fileline>
            <fileline lineNumber="27" />
            <fileline lineNumber="28" />
            <fileline lineNumber="29">if [ -z "${Path_To_test}" ] </fileline>
            <fileline lineNumber="30">   then </fileline>
            <fileline lineNumber="31">         MSG_DISPLAY "check" "0" "Checking  directory : [ ${Path_To_test} ] "</fileline>
            <fileline lineNumber="32">   	   MSG_DISPLAY "EdEMessage" "1" " Error ON PATH  : [ Value is NULL ]"</fileline>
            <fileline lineNumber="33">   else </fileline>
            <fileline lineNumber="34">       if [ "${Path_To_test}" = "/" ]</fileline>
            <fileline lineNumber="35">          then </fileline>
            <fileline lineNumber="36">               MSG_DISPLAY "check" "0" "Checking  directory : [ ${Path_To_test} ] "</fileline>
            <fileline lineNumber="37">           	   MSG_DISPLAY "EdEMessage" "1" " Error ON PATH  : [ Value is / ]"</fileline>
            <fileline lineNumber="38">      fi</fileline>
            <fileline lineNumber="39">fi</fileline>
            <fileline lineNumber="40">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="41">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="42">####################################################</fileline>
            <fileline lineNumber="43">}</fileline>
            <fileline lineNumber="44" />
            <fileline lineNumber="45" />
            <fileline lineNumber="46" />
            <fileline lineNumber="47">function Set_new_directory</fileline>
            <fileline lineNumber="48">{</fileline>
            <fileline lineNumber="49">#|# Base_param_Dir_To_Create    : use this var to set which irectory to control and create</fileline>
            <fileline lineNumber="50">#|# ${1}                        : use this var to set Base_param_Dir_To_Create</fileline>
            <fileline lineNumber="51">#|# Basic usage : </fileline>
            <fileline lineNumber="52">#|#               Set_new_directory "My_Directory"</fileline>
            <fileline lineNumber="53">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="54">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="55">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="56">######################################################</fileline>
            <fileline lineNumber="57">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="58" />
            <fileline lineNumber="59">local Base_param_Dir_To_Create="${1}"</fileline>
            <fileline lineNumber="60" />
            <fileline lineNumber="61">Dir_null_or_slash "${Base_param_Dir_To_Create}"</fileline>
            <fileline lineNumber="62">MSG_DISPLAY "check" "0" "Checking  directory : [ ${Base_param_Dir_To_Create} ] "</fileline>
            <fileline lineNumber="63">if [[ ${runned} -gt 1 ]] </fileline>
            <fileline lineNumber="64">   then </fileline>
            <fileline lineNumber="65">       MSG_DISPLAY "EdEMessage" "2" "NOT CREATED"</fileline>
            <fileline lineNumber="66">   else </fileline>
            <fileline lineNumber="67">      if [ -d "${Base_param_Dir_To_Create}" ]</fileline>
            <fileline lineNumber="68">         then </fileline>
            <fileline lineNumber="69">            MSG_DISPLAY "EdSMessage" "1" "Present"</fileline>
            <fileline lineNumber="70">            runned="0"</fileline>
            <fileline lineNumber="71">         else </fileline>
            <fileline lineNumber="72">            MSG_DISPLAY "EdWMessage" "2" "NOT FOUND"</fileline>
            <fileline lineNumber="73">            mkdir -p ${Base_param_Dir_To_Create} &gt;/dev/null 2&gt;&amp;1</fileline>
            <fileline lineNumber="74">            runned=$(expr ${runned} + 1 )</fileline>
            <fileline lineNumber="75">            Set_new_directory "${Base_param_Dir_To_Create}"</fileline>
            <fileline lineNumber="76">      fi</fileline>
            <fileline lineNumber="77">fi </fileline>
            <fileline lineNumber="78">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="79">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="80">####################################################</fileline>
            <fileline lineNumber="81">}</fileline>
            <fileline lineNumber="82" />
            <fileline lineNumber="83">function Get_directory_list</fileline>
            <fileline lineNumber="84">{</fileline>
            <fileline lineNumber="85">#|# Base_param_Dir      : use this var to set wher to list subdirectory</fileline>
            <fileline lineNumber="86">#|# Sendback_Dir_Listed : this var is used to keep result of listing  </fileline>
            <fileline lineNumber="87" />
            <fileline lineNumber="88">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="89">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="90">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="91">######################################################</fileline>
            <fileline lineNumber="92">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="93" />
            <fileline lineNumber="94" />
            <fileline lineNumber="95">local Base_Param_Dir_To_TEST="${Base_param_Dir}"</fileline>
            <fileline lineNumber="96">local Result_Var_Name="${2}"</fileline>
            <fileline lineNumber="97">local Sendback_Dir_Listed=""</fileline>
            <fileline lineNumber="98" />
            <fileline lineNumber="99">Test_directory "${Base_Param_Dir_To_TEST}"</fileline>
            <fileline lineNumber="100">for Dirs_Listed in $(ls -1 ${Base_param_Dir}/)</fileline>
            <fileline lineNumber="101">   do if [ -d "${Base_param_Dir}/${Dirs_Listed}" ]</fileline>
            <fileline lineNumber="102">         then 	   </fileline>
            <fileline lineNumber="103">             MSG_DISPLAY "debug" "0" "Directory found : [ ${Dirs_Listed} ] "</fileline>
            <fileline lineNumber="104">             Sendback_Dir_Listed="${Sendback_Dir_Listed} ${Dirs_Listed}"</fileline>
            <fileline lineNumber="105">	     else </fileline>
            <fileline lineNumber="106">             MSG_DISPLAY "debug" "0" "Found : [ ${Dirs_Listed} ] but it s not a directory "</fileline>
            <fileline lineNumber="107">      fi </fileline>
            <fileline lineNumber="108">done </fileline>
            <fileline lineNumber="109" />
            <fileline lineNumber="110">eval "${Result_Var_Name}='${Sendback_Dir_Listed}'"</fileline>
            <fileline lineNumber="111" />
            <fileline lineNumber="112">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="113">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="114">####################################################</fileline>
            <fileline lineNumber="115">}</fileline>
            <fileline lineNumber="116" />
            <fileline lineNumber="117" />
            <fileline lineNumber="118">function Test_directory</fileline>
            <fileline lineNumber="119">{</fileline>
            <fileline lineNumber="120">#|# Base_Param_Dir_To_TEST : Use this var to set which directory to test </fileline>
            <fileline lineNumber="121">#|# ${1}                   : User this var to set Base_Param_Dir_To_TEST</fileline>
            <fileline lineNumber="122">#|# Basic use :</fileline>
            <fileline lineNumber="123">#|#             </fileline>
            <fileline lineNumber="124">#|#              Test_directory "My_directory_full_path"</fileline>
            <fileline lineNumber="125" />
            <fileline lineNumber="126">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="127">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="128">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="129">######################################################</fileline>
            <fileline lineNumber="130">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="131" />
            <fileline lineNumber="132">local Base_Param_Dir_To_TEST="${1}"</fileline>
            <fileline lineNumber="133">MSG_DISPLAY "check" "0" "Checking  directory : [ ${Base_param_Dir_To_Create} ] "</fileline>
            <fileline lineNumber="134">if [ -d "${Base_Param_Dir_To_TEST}" ]</fileline>
            <fileline lineNumber="135">   then </fileline>
            <fileline lineNumber="136">	   MSG_DISPLAY "EdSMessage" "1" "FOUND" </fileline>
            <fileline lineNumber="137">   else </fileline>
            <fileline lineNumber="138">	   MSG_DISPLAY "EdEMessage" "1" "Not FOUND" </fileline>
            <fileline lineNumber="139">fi </fileline>
            <fileline lineNumber="140" />
            <fileline lineNumber="141">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="142">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="143">####################################################</fileline>
            <fileline lineNumber="144">}</fileline>
            <fileline lineNumber="145" />
            <fileline lineNumber="146">LibState="OK"</fileline>
        </content>
    </file>
    <file>
        <filename>./lib/system_base/archive/archives_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.                                                                 #</fileline>
            <fileline lineNumber="5"># Subject : This library provide base compress  and unpacking for archives    #</fileline>
            <fileline lineNumber="6">#                                                                             #</fileline>
            <fileline lineNumber="7">###############################################################################</fileline>
            <fileline lineNumber="8">####</fileline>
            <fileline lineNumber="9"># INFO </fileline>
            <fileline lineNumber="10" />
            <fileline lineNumber="11">function Do_archive_file_extract_tgz</fileline>
            <fileline lineNumber="12">{</fileline>
            <fileline lineNumber="13">#|# Var to set  :</fileline>
            <fileline lineNumber="14">#|# AFET_Base_Param_File_Path           : Use this var to set Base pathe of the file </fileline>
            <fileline lineNumber="15">#|# AFET_Base_Param_File_To_EXTRACT     : Use this var to set the name of the file to extract</fileline>
            <fileline lineNumber="16">#|# AFET_Base_Param_File_To_Extract_ext : Use this var to set the extention of the file to extracte</fileline>
            <fileline lineNumber="17">#|# ${1}        : Use this var to set [ AFET_Base_Param_File_Path ]                        </fileline>
            <fileline lineNumber="18">#|# ${2}        : Use this var to set [ AFET_Base_Param_File_To_EXTRACT ]                       </fileline>
            <fileline lineNumber="19">#|# ${3}        : Use this var to set [ AFET_Base_Param_File_To_Extract_ext ] </fileline>
            <fileline lineNumber="20">#|#</fileline>
            <fileline lineNumber="21">#|# Base usage  : Do_archive_file_extract_tgz  "FULL_PATH_OF_THE_FILE" "ARCHIVE_FILENAME_WITHOUT_EXT" "ARCHIVE_EXT"</fileline>
            <fileline lineNumber="22">#|#</fileline>
            <fileline lineNumber="23">#|# Description : This function uncompress Tar.gz /tar.bz /tar  files</fileline>
            <fileline lineNumber="24">#|#</fileline>
            <fileline lineNumber="25">#|# Send Back   : uncompressed file </fileline>
            <fileline lineNumber="26">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="27">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="28">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="29">######################################################</fileline>
            <fileline lineNumber="30">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="31" />
            <fileline lineNumber="32" />
            <fileline lineNumber="33">AFET_Base_Param_File_Path="${1}"</fileline>
            <fileline lineNumber="34">AFET_Base_Param_File_To_EXTRACT="${2}"</fileline>
            <fileline lineNumber="35">AFET_Base_Param_File_To_Extract_ext="${3}"</fileline>
            <fileline lineNumber="36" />
            <fileline lineNumber="37">Empty_Var_Control "${AFET_Base_Param_File_Path}"             "AFET_Base_Param_File_Path"             "4"</fileline>
            <fileline lineNumber="38">Empty_Var_Control "${AFET_Base_Param_File_To_EXTRACT}"       "AFET_Base_Param_File_To_EXTRACT"       "4"</fileline>
            <fileline lineNumber="39">Empty_Var_Control "${AFET_Base_Param_File_To_Extract_ext}"   "AFET_Base_Param_File_To_Extract_ext"   "4"</fileline>
            <fileline lineNumber="40" />
            <fileline lineNumber="41">Test_file_presence "${AFET_Base_Param_File_Path}/${AFET_Base_Param_File_To_EXTRACT}.${AFET_Base_Param_File_To_Extract_ext}" "Dont_Create_File" "2" </fileline>
            <fileline lineNumber="42" />
            <fileline lineNumber="43">Generic_Base_Param_MSG="Uncompressing of ${AFET_Base_Param_File_To_TEST} : "</fileline>
            <fileline lineNumber="44">case ${AFET_Base_Param_File_To_Extract_ext} in </fileline>
            <fileline lineNumber="45">     tar.gz|tgz) if [ -d "${AFET_Base_Param_File_Path}/${AFET_Base_Param_File_To_EXTRACT}" ]</fileline>
            <fileline lineNumber="46">                    then </fileline>
            <fileline lineNumber="47">                         MSG_DISPLAY "info" "1" "The package is alredy uncompressed : [ PASS ] "</fileline>
            <fileline lineNumber="48">                    else</fileline>
            <fileline lineNumber="49">                        Return_Path="$(pwd)" </fileline>
            <fileline lineNumber="50">                        cd  ${AFET_Base_Param_File_Path}/</fileline>
            <fileline lineNumber="51">                        tar -xzf ${AFET_Base_Param_File_Path}/${AFET_Base_Param_File_To_EXTRACT}.${AFET_Base_Param_File_To_Extract_ext} </fileline>
            <fileline lineNumber="52">                        CTRL_Result_func "${?}" "Check for Archive extraction of [ ${AFET_Base_Param_File_To_EXTRACT}.${AFET_Base_Param_File_To_Extract_ext}  ] " "" "1"</fileline>
            <fileline lineNumber="53">                        cd ${Return_Path}</fileline>
            <fileline lineNumber="54">                 fi ;;</fileline>
            <fileline lineNumber="55">            tar) if [ -d "${AFET_Base_Param_File_Path}/${AFET_Base_Param_File_To_EXTRACT}" ]</fileline>
            <fileline lineNumber="56">                    then </fileline>
            <fileline lineNumber="57">                         MSG_DISPLAY "info" "1" "The package is alredy uncompressed : [ PASS ] "</fileline>
            <fileline lineNumber="58">                    else</fileline>
            <fileline lineNumber="59">                        Return_Path="$(pwd)" </fileline>
            <fileline lineNumber="60">                        cd  ${AFET_Base_Param_File_Path}/</fileline>
            <fileline lineNumber="61">                        tar -xf ${AFET_Base_Param_File_Path}/${AFET_Base_Param_File_To_EXTRACT}.${AFET_Base_Param_File_To_Extract_ext} </fileline>
            <fileline lineNumber="62">                        CTRL_Result_func "${?}" "Check for Archive extraction of [ ${AFET_Base_Param_File_To_EXTRACT}.${AFET_Base_Param_File_To_Extract_ext} ] " "" "1"</fileline>
            <fileline lineNumber="63">                        cd ${Return_Path}</fileline>
            <fileline lineNumber="64">                 fi ;;</fileline>
            <fileline lineNumber="65">       tar.bz2 ) if [ -d "${AFET_Base_Param_File_Path}/${AFET_Base_Param_File_To_EXTRACT}" ]</fileline>
            <fileline lineNumber="66">                    then </fileline>
            <fileline lineNumber="67">                         MSG_DISPLAY "info" "1" "The package is alredy uncompressed : [ PASS ] "</fileline>
            <fileline lineNumber="68">                    else</fileline>
            <fileline lineNumber="69">                        Return_Path="$(pwd)" </fileline>
            <fileline lineNumber="70">                        cd  ${AFET_Base_Param_File_Path}/</fileline>
            <fileline lineNumber="71">                        tar -xjf ${AFET_Base_Param_File_Path}/${AFET_Base_Param_File_To_EXTRACT}.${AFET_Base_Param_File_To_Extract_ext} </fileline>
            <fileline lineNumber="72">                        CTRL_Result_func "${?}" "Check for Archive extraction of [ ${AFET_Base_Param_File_To_EXTRACT}.${AFET_Base_Param_File_To_Extract_ext} ] " "" "1"</fileline>
            <fileline lineNumber="73">                        cd ${Return_Path}</fileline>
            <fileline lineNumber="74">                 fi ;;</fileline>
            <fileline lineNumber="75">              *) MSG_DISPLAY "EdEMessage" "1" "Not supporterd file format : [ ERROR ] "</fileline>
            <fileline lineNumber="76">                  ;;</fileline>
            <fileline lineNumber="77">esac </fileline>
            <fileline lineNumber="78" />
            <fileline lineNumber="79" />
            <fileline lineNumber="80">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="81">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="82">#################################################### </fileline>
            <fileline lineNumber="83">}</fileline>
            <fileline lineNumber="84" />
            <fileline lineNumber="85">function Do_file_compress_tgz</fileline>
            <fileline lineNumber="86">{</fileline>
            <fileline lineNumber="87">#|# Var to set  :</fileline>
            <fileline lineNumber="88">#|# AFCT_Base_Param_File_Path_to_Compress   : Use this var to set Base pathe of the file </fileline>
            <fileline lineNumber="89">#|# AFCT_Base_Param_Compressed_FileName     : Use this var to set the name of the archive file to create</fileline>
            <fileline lineNumber="90">#|# AFCT_Base_Param_Compressed_FileName_ext : Use this var to set the extention of the archive file to extracte</fileline>
            <fileline lineNumber="91">#|# ${1}        : Use this var to set [ AFCT_Base_Param_File_Path_to_Compress ]                        </fileline>
            <fileline lineNumber="92">#|# ${2}        : Use this var to set [ AFCT_Base_Param_Compressed_FileName ]                       </fileline>
            <fileline lineNumber="93">#|# ${3}        : Use this var to set [ AFCT_Base_Param_Compressed_FileName_ext ] </fileline>
            <fileline lineNumber="94">#|#</fileline>
            <fileline lineNumber="95">#|# Base usage  : Do_file_compress_tgz  "AFCT_Base_Param_File_Path_to_Compress" "AFCT_Base_Param_Compressed_FileName" "AFCT_Base_Param_Compressed_FileName_ext"</fileline>
            <fileline lineNumber="96">#|#</fileline>
            <fileline lineNumber="97">#|# Description : This function compress tar.gz / tar.bz / tar files</fileline>
            <fileline lineNumber="98">#|#</fileline>
            <fileline lineNumber="99">#|# Send Back   : Compressed file </fileline>
            <fileline lineNumber="100">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="101">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="102">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="103">######################################################</fileline>
            <fileline lineNumber="104">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="105" />
            <fileline lineNumber="106" />
            <fileline lineNumber="107">local AFCT_Base_Param_File_Path_to_Compress="${1}"</fileline>
            <fileline lineNumber="108">local AFCT_Base_Param_Compressed_FileName="${2}"</fileline>
            <fileline lineNumber="109">local AFCT_Base_Param_Compressed_FileName_ext="${3}"</fileline>
            <fileline lineNumber="110" />
            <fileline lineNumber="111">Empty_Var_Control "${AFCT_Base_Param_File_Path_to_Compress}"   "AFCT_Base_Param_File_Path_to_Compress"   "4"</fileline>
            <fileline lineNumber="112">Empty_Var_Control "${AFCT_Base_Param_Compressed_FileName}"     "AFCT_Base_Param_Compressed_FileName"     "4"</fileline>
            <fileline lineNumber="113">Empty_Var_Control "${AFCT_Base_Param_Compressed_FileName_ext}" "AFCT_Base_Param_Compressed_FileName_ext" "4"</fileline>
            <fileline lineNumber="114" />
            <fileline lineNumber="115">Test_file_presence "${AFCT_Base_Param_File_Path_to_Compress}" "Dont_Create_File" "2" </fileline>
            <fileline lineNumber="116" />
            <fileline lineNumber="117">Generic_Base_Param_MSG="Archiving of ${AFCT_Base_Param_File_Path} : "</fileline>
            <fileline lineNumber="118">case ${AFCT_Base_Param_File_To_COMPRESS_ext} in </fileline>
            <fileline lineNumber="119">     tar.gz|tgz) MSG_DISPLAY "info" "1" "${Generic_Base_Param_MSG} : [ Starting ]"</fileline>
            <fileline lineNumber="120">                 tar -cvzf  ${AFCT_Base_Param_File_Path_to_Compress} ${AFCT_Base_Param_Compressed_FileName}.${AFCT_Base_Param_Compressed_FileName_ext}</fileline>
            <fileline lineNumber="121">                 MSG_DISPLAY "info" "1" "${Generic_Base_Param_MSG} : [ End ]"</fileline>
            <fileline lineNumber="122">                 ;;</fileline>
            <fileline lineNumber="123">            tar) MSG_DISPLAY "info" "1" "${Generic_Base_Param_MSG} in format $${AFCT_Base_Param_File_To_COMPRESS_ext}  : [ Starting ]"</fileline>
            <fileline lineNumber="124">                 tar -cvf ${AFCT_Base_Param_File_Path_to_Compress} ${AFCT_Base_Param_Compressed_FileName}.${AFCT_Base_Param_Compressed_FileName_ext} </fileline>
            <fileline lineNumber="125">                 MSG_DISPLAY "info" "1" "${Generic_Base_Param_MSG} : [ End ]"</fileline>
            <fileline lineNumber="126">                 ;;</fileline>
            <fileline lineNumber="127">       tar.bz2 ) MSG_DISPLAY "info" "1" "${Generic_Base_Param_MSG} in format $${AFCT_Base_Param_File_To_COMPRESS_ext}  : [ Starting ]"</fileline>
            <fileline lineNumber="128">                 tar -cjf ${AFCT_Base_Param_File_Path_to_Compress} ${AFCT_Base_Param_Compressed_FileName}.${AFCT_Base_Param_Compressed_FileName_ext} </fileline>
            <fileline lineNumber="129">                 MSG_DISPLAY "info" "1" "${Generic_Base_Param_MSG} : [ End ]"</fileline>
            <fileline lineNumber="130">                 ;;</fileline>
            <fileline lineNumber="131">              *) MSG_DISPLAY "EdEMessage" "1" "Not supporterd file format : [ ERROR ] "</fileline>
            <fileline lineNumber="132">                 ;;</fileline>
            <fileline lineNumber="133">esac </fileline>
            <fileline lineNumber="134" />
            <fileline lineNumber="135" />
            <fileline lineNumber="136">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="137">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="138">#################################################### </fileline>
            <fileline lineNumber="139">}</fileline>
            <fileline lineNumber="140" />
            <fileline lineNumber="141"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/workspace_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4" />
            <fileline lineNumber="5"># INFO                                                                                  #</fileline>
            <fileline lineNumber="6"># Subject : This library provide base Main menu for all generic ation using   </fileline>
            <fileline lineNumber="7">#           C.A.S.T.                                                          </fileline>
            <fileline lineNumber="8" />
            <fileline lineNumber="9" />
            <fileline lineNumber="10">############################</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12" />
            <fileline lineNumber="13">function Ctrl_Depth</fileline>
            <fileline lineNumber="14">{</fileline>
            <fileline lineNumber="15">#|#  Ctrl_Depth : use this var to </fileline>
            <fileline lineNumber="16">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="17">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="18">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="19">######################################################</fileline>
            <fileline lineNumber="20">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ] "</fileline>
            <fileline lineNumber="21" />
            <fileline lineNumber="22" />
            <fileline lineNumber="23" />
            <fileline lineNumber="24">CheckApp=$( echo ${Keyword}|awk -F \/ '{ print $2 }') </fileline>
            <fileline lineNumber="25">if [ "${CheckApp}" != "keywordValues.txt" ]</fileline>
            <fileline lineNumber="26">  then</fileline>
            <fileline lineNumber="27">     MSG_DISPLAY "info" "1" "${CheckApp} est une appli"</fileline>
            <fileline lineNumber="28">     cd ${CheckApp}</fileline>
            <fileline lineNumber="29">     Ctrl_Depth</fileline>
            <fileline lineNumber="30">  else</fileline>
            <fileline lineNumber="31">  MSG_DISPLAY "info" "1" "$CheckDepth est une le racine" </fileline>
            <fileline lineNumber="32">fi</fileline>
            <fileline lineNumber="33" />
            <fileline lineNumber="34">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="35">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="36">####################################################  </fileline>
            <fileline lineNumber="37">} </fileline>
            <fileline lineNumber="38" />
            <fileline lineNumber="39"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./lib/sed_lib.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 13/10/2006  </fileline>
            <fileline lineNumber="4"># From C.A.S.T.</fileline>
            <fileline lineNumber="5" />
            <fileline lineNumber="6"># INFO                                                                      #</fileline>
            <fileline lineNumber="7"># Subject : This library provide base functions to manage sed  </fileline>
            <fileline lineNumber="8" />
            <fileline lineNumber="9" />
            <fileline lineNumber="10">################################################################################</fileline>
            <fileline lineNumber="11">function Dummy_function</fileline>
            <fileline lineNumber="12">{</fileline>
            <fileline lineNumber="13">#|# Var to set  : None</fileline>
            <fileline lineNumber="14">#|#             : Use this var to set</fileline>
            <fileline lineNumber="15">#|#             : Use this var to set</fileline>
            <fileline lineNumber="16">#|# ${1}        : Use this var to set [  ]</fileline>
            <fileline lineNumber="17">#|# ${2}        : Use this var to set [  ]</fileline>
            <fileline lineNumber="18">#|#</fileline>
            <fileline lineNumber="19">#|# Base usage  : None</fileline>
            <fileline lineNumber="20">#|#</fileline>
            <fileline lineNumber="21">#|# Description : None</fileline>
            <fileline lineNumber="22">#|#</fileline>
            <fileline lineNumber="23">#|# Send Back   : None</fileline>
            <fileline lineNumber="24">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="25">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="26">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="27">######################################################</fileline>
            <fileline lineNumber="28" />
            <fileline lineNumber="29" />
            <fileline lineNumber="30">MSG_DISPLAY "info" "1" "this is a model function"</fileline>
            <fileline lineNumber="31" />
            <fileline lineNumber="32">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="33">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="34">####################################################</fileline>
            <fileline lineNumber="35">}</fileline>
            <fileline lineNumber="36" />
            <fileline lineNumber="37">function Do_sed_replace_string</fileline>
            <fileline lineNumber="38">{</fileline>
            <fileline lineNumber="39">#|# Var to set  : </fileline>
            <fileline lineNumber="40">#|# ${1}        : Use this var to set [ Original string to replace ]</fileline>
            <fileline lineNumber="41">#|# ${2}        : Use this var to set [ New string ] </fileline>
            <fileline lineNumber="42">#|# ${3}        : Use this var to set [ File to edit ]</fileline>
            <fileline lineNumber="43">#|# ${4}        : Use this var to set [ Extended status message ]</fileline>
            <fileline lineNumber="44">#|#</fileline>
            <fileline lineNumber="45">#|# Base usage  : None</fileline>
            <fileline lineNumber="46">#|#</fileline>
            <fileline lineNumber="47">#|# Description : None</fileline>
            <fileline lineNumber="48">#|#</fileline>
            <fileline lineNumber="49">#|# Send Back   : None</fileline>
            <fileline lineNumber="50">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="51">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="52">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="53">######################################################</fileline>
            <fileline lineNumber="54" />
            <fileline lineNumber="55" />
            <fileline lineNumber="56">local _Orig_String="${1}" </fileline>
            <fileline lineNumber="57">local _New_String="${2}" </fileline>
            <fileline lineNumber="58">local _File_Edited="${3}"</fileline>
            <fileline lineNumber="59">local _Ext_Message="${4}"</fileline>
            <fileline lineNumber="60" />
            <fileline lineNumber="61">Empty_Var_Control "${_Orig_String}" "_Orig_String" "4"</fileline>
            <fileline lineNumber="62">Empty_Var_Control "${_New_String}"  "_New_String"  "4"</fileline>
            <fileline lineNumber="63">Empty_Var_Control "${_File_Edited}" "_File_Edited" "4"</fileline>
            <fileline lineNumber="64">Empty_Var_Control "${_Ext_Message}" "_Ext_Message" "4"</fileline>
            <fileline lineNumber="65" />
            <fileline lineNumber="66" />
            <fileline lineNumber="67">MSG_DISPLAY "check" "0" "Editing file ${Base_Param_File_To_TEST} to replace ${_Orig_String}"</fileline>
            <fileline lineNumber="68" />
            <fileline lineNumber="69">sed -i 's/${_Orig_String}/${_New_String}/g' ${_File_Edited} &gt;&gt; /dev/null </fileline>
            <fileline lineNumber="70" />
            <fileline lineNumber="71" />
            <fileline lineNumber="72" />
            <fileline lineNumber="73" />
            <fileline lineNumber="74" />
            <fileline lineNumber="75">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="76">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="77">####################################################</fileline>
            <fileline lineNumber="78">}</fileline>
            <fileline lineNumber="79" />
            <fileline lineNumber="80"># Sourcing control variable </fileline>
        </content>
    </file>
    <file>
        <filename>./create-learn-point.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 28/06/2024</fileline>
            <fileline lineNumber="4"># generic azure ressource group managment from CAST</fileline>
            <fileline lineNumber="5">#|# force defaul sourcing as null vars</fileline>
            <fileline lineNumber="6">resultat=Learning.xml</fileline>
            <fileline lineNumber="7">File_list=$( find ./ -type f | egrep -v \.git | egrep -v ${resultat} | egrep -v \.md | egrep -v \LICENSE )</fileline>
            <fileline lineNumber="8" />
            <fileline lineNumber="9" />
            <fileline lineNumber="10" />
            <fileline lineNumber="11">#|# Read file content and protect all needed caracters </fileline>
            <fileline lineNumber="12">function do_char_protect () </fileline>
            <fileline lineNumber="13">{</fileline>
            <fileline lineNumber="14">    #|# file to read</fileline>
            <fileline lineNumber="15">    local file="$1"</fileline>
            <fileline lineNumber="16" />
            <fileline lineNumber="17">    #|# read and protecte</fileline>
            <fileline lineNumber="18">    cat "${file}" | sed -e 's/\&amp;/\&amp;amp;/g' \</fileline>
            <fileline lineNumber="19">                           -e 's/&lt;/\&amp;lt;/g' \</fileline>
            <fileline lineNumber="20">                           -e 's/&gt;/\&amp;gt;/g' \</fileline>
            <fileline lineNumber="21">                           -e 's/"/\&amp;quot;/g' \</fileline>
            <fileline lineNumber="22">                           -e "s/'/\&amp;apos;/g" \</fileline>
            <fileline lineNumber="23">                           -e 's/e/e/g' \</fileline>
            <fileline lineNumber="24">                           -e 's/e/e/g' \</fileline>
            <fileline lineNumber="25">                           -e 's/e/e/g' \</fileline>
            <fileline lineNumber="26">                           -e 's/e/e/g' \</fileline>
            <fileline lineNumber="27">                           -e 's/a/a/g' \</fileline>
            <fileline lineNumber="28">                           -e 's/a/a/g' \</fileline>
            <fileline lineNumber="29">                           -e 's/a/a/g' \</fileline>
            <fileline lineNumber="30">                           -e 's/c/c/g' \</fileline>
            <fileline lineNumber="31">                           -e 's/i/i/g' \</fileline>
            <fileline lineNumber="32">                           -e 's/i/i/g' \</fileline>
            <fileline lineNumber="33">                           -e 's/o/o/g' \</fileline>
            <fileline lineNumber="34">                           -e 's/o/o/g' \</fileline>
            <fileline lineNumber="35">                           -e 's/u/u/g' \</fileline>
            <fileline lineNumber="36">                           -e 's/u/u/g' \</fileline>
            <fileline lineNumber="37">                           -e 's/u/u/g' \</fileline>
            <fileline lineNumber="38">                           -e 's/E/E/g' \</fileline>
            <fileline lineNumber="39">                           -e 's/E/E/g' \</fileline>
            <fileline lineNumber="40">                           -e 's/E/E/g' \</fileline>
            <fileline lineNumber="41">                           -e 's/E/E/g' \</fileline>
            <fileline lineNumber="42">                           -e 's/A/A/g' \</fileline>
            <fileline lineNumber="43">                           -e 's/A/A/g' \</fileline>
            <fileline lineNumber="44">                           -e 's/A/A/g' \</fileline>
            <fileline lineNumber="45">                           -e 's/C/C/g' \</fileline>
            <fileline lineNumber="46">                           -e 's/I/I/g' \</fileline>
            <fileline lineNumber="47">                           -e 's/I/I/g' \</fileline>
            <fileline lineNumber="48">                           -e 's/O/O/g' \</fileline>
            <fileline lineNumber="49">                           -e 's/O/O/g' \</fileline>
            <fileline lineNumber="50">                           -e 's/U/U/g' \</fileline>
            <fileline lineNumber="51">                           -e 's/U/U/g' \</fileline>
            <fileline lineNumber="52">                           -e 's/U/U/g' \</fileline>
            <fileline lineNumber="53">                           -e 's/oe/oe/g' \</fileline>
            <fileline lineNumber="54">                           -e 's/OE/OE/g' \</fileline>
            <fileline lineNumber="55">                           -e 's/ae/ae/g' \</fileline>
            <fileline lineNumber="56">                           -e 's/AE/AE/g' \</fileline>
            <fileline lineNumber="57">                           -e 's/n/n/g' \</fileline>
            <fileline lineNumber="58">                           -e 's/N/N/g'</fileline>
            <fileline lineNumber="59">}</fileline>
            <fileline lineNumber="60" />
            <fileline lineNumber="61" />
            <fileline lineNumber="62">function do_line_managment () </fileline>
            <fileline lineNumber="63">{</fileline>
            <fileline lineNumber="64">    #|# read cat output line by line</fileline>
            <fileline lineNumber="65">    ligne_numero=1</fileline>
            <fileline lineNumber="66">    while IFS= read -r ligne </fileline>
            <fileline lineNumber="67">    do </fileline>
            <fileline lineNumber="68">        echo "&lt;fileline lineNumber=\"${ligne_numero}\"&gt;${ligne}&lt;/fileline&gt;"</fileline>
            <fileline lineNumber="69">        ((ligne_numero++))</fileline>
            <fileline lineNumber="70">    done</fileline>
            <fileline lineNumber="71">}</fileline>
            <fileline lineNumber="72" />
            <fileline lineNumber="73">function main()</fileline>
            <fileline lineNumber="74">{</fileline>
            <fileline lineNumber="75">echo "&lt;root&gt;" </fileline>
            <fileline lineNumber="76">for file in ${File_list} </fileline>
            <fileline lineNumber="77">  do </fileline>
            <fileline lineNumber="78">     echo "     &lt;file&gt;"</fileline>
            <fileline lineNumber="79">     echo "         &lt;filename&gt;${file}&lt;/filename&gt;" </fileline>
            <fileline lineNumber="80">     echo "              &lt;content&gt;"</fileline>
            <fileline lineNumber="81">     do_char_protect "${file}" | do_line_managment</fileline>
            <fileline lineNumber="82">     echo "              &lt;/content&gt;"</fileline>
            <fileline lineNumber="83">     echo "     &lt;/file&gt;"</fileline>
            <fileline lineNumber="84">done </fileline>
            <fileline lineNumber="85">echo "&lt;/root&gt;"</fileline>
            <fileline lineNumber="86">}</fileline>
            <fileline lineNumber="87" />
        </content>
    </file>
    <file>
        <filename>./bin/install_base.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 28/06/2024</fileline>
            <fileline lineNumber="4"># generic azure ressource group managment from CAST</fileline>
            <fileline lineNumber="5">#|# force default sourcing as null vars</fileline>
            <fileline lineNumber="6">ConfigState=""</fileline>
            <fileline lineNumber="7" />
            <fileline lineNumber="8">printf "\n" </fileline>
            <fileline lineNumber="9">printf  "Sourcing base configuration file :" </fileline>
            <fileline lineNumber="10">if [[ -f ../conf/config.cnf  ]]</fileline>
            <fileline lineNumber="11">   then </fileline>
            <fileline lineNumber="12">       . ../conf/config.cnf 2&gt; /dev/null  </fileline>
            <fileline lineNumber="13">       if [[  ${?} -ge 1 ]] &amp;&amp; [[ ! ${ConfigState} = "OK" ]]</fileline>
            <fileline lineNumber="14">          then </fileline>
            <fileline lineNumber="15">              printf " ERROR \n" </fileline>
            <fileline lineNumber="16">              exit 1</fileline>
            <fileline lineNumber="17">          else</fileline>
            <fileline lineNumber="18">              printf " SUCCESS \n" </fileline>
            <fileline lineNumber="19">      fi </fileline>
            <fileline lineNumber="20">    else </fileline>
            <fileline lineNumber="21">      printf " ERROR FILE NOT FOUND \n"</fileline>
            <fileline lineNumber="22">fi </fileline>
            <fileline lineNumber="23" />
            <fileline lineNumber="24">function main () </fileline>
            <fileline lineNumber="25">{</fileline>
            <fileline lineNumber="26">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="27">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="28">Function_PATH="${Function_Name}"</fileline>
            <fileline lineNumber="29">######################################################</fileline>
            <fileline lineNumber="30">#|# mandatory ini call </fileline>
            <fileline lineNumber="31">set_paths    </fileline>
            <fileline lineNumber="32">#init_all</fileline>
            <fileline lineNumber="33" />
            <fileline lineNumber="34">#|# main execution</fileline>
            <fileline lineNumber="35" />
            <fileline lineNumber="36" />
            <fileline lineNumber="37">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="38">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="39">####################################################</fileline>
            <fileline lineNumber="40">}</fileline>
            <fileline lineNumber="41" />
            <fileline lineNumber="42" />
        </content>
    </file>
    <file>
        <filename>./bin/script_template.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 28/06/2024</fileline>
            <fileline lineNumber="4"># generic azure ressource group managment from CAST</fileline>
            <fileline lineNumber="5">#|# force defaul sourcing as null vars</fileline>
            <fileline lineNumber="6">ConfigState=""</fileline>
            <fileline lineNumber="7" />
            <fileline lineNumber="8">printf "\n" </fileline>
            <fileline lineNumber="9">printf  "Sourcing base configuration file :" </fileline>
            <fileline lineNumber="10">if [[ -f ../conf/config.cnf  ]]</fileline>
            <fileline lineNumber="11">   then </fileline>
            <fileline lineNumber="12">       . ../conf/config.cnf 2&gt; /dev/null  </fileline>
            <fileline lineNumber="13">       if [[  ${?} -ge 1 ]] &amp;&amp; [[ ! ${ConfigState} = "OK" ]]</fileline>
            <fileline lineNumber="14">          then </fileline>
            <fileline lineNumber="15">              printf " ERROR \n" </fileline>
            <fileline lineNumber="16">              exit 1</fileline>
            <fileline lineNumber="17">          else</fileline>
            <fileline lineNumber="18">              printf " SUCCESS \n" </fileline>
            <fileline lineNumber="19">      fi </fileline>
            <fileline lineNumber="20">    else </fileline>
            <fileline lineNumber="21">      printf " ERROR FILE NOT FOUND \n"</fileline>
            <fileline lineNumber="22">fi </fileline>
            <fileline lineNumber="23" />
            <fileline lineNumber="24">#|# mandatory ini call </fileline>
            <fileline lineNumber="25">set_paths  </fileline>
            <fileline lineNumber="26" />
            <fileline lineNumber="27">function main () </fileline>
            <fileline lineNumber="28">{</fileline>
            <fileline lineNumber="29">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="30">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="31">Function_PATH="${Function_Name}"</fileline>
            <fileline lineNumber="32">######################################################</fileline>
            <fileline lineNumber="33">CAST_SUPPORT_LOGO  </fileline>
            <fileline lineNumber="34">#init_all</fileline>
            <fileline lineNumber="35" />
            <fileline lineNumber="36">echo "" </fileline>
            <fileline lineNumber="37">echo "" </fileline>
            <fileline lineNumber="38">echo "" </fileline>
            <fileline lineNumber="39">echo "" </fileline>
            <fileline lineNumber="40">echo "" </fileline>
            <fileline lineNumber="41">echo "" </fileline>
            <fileline lineNumber="42" />
            <fileline lineNumber="43">#|# main execution</fileline>
            <fileline lineNumber="44" />
            <fileline lineNumber="45">#Install_Menu</fileline>
            <fileline lineNumber="46">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="47">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="48">####################################################</fileline>
            <fileline lineNumber="49">}</fileline>
        </content>
    </file>
    <file>
        <filename>./bin/create_objname.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2">#############</fileline>
            <fileline lineNumber="3"># Author  :  Arnaud Crampet </fileline>
            <fileline lineNumber="4"># Date    :  25/06/2024</fileline>
            <fileline lineNumber="5"># Subject :  generate  git structuregit@${GIT_SSH_URL}:v3/${GIT_GLB_ORGANISATION}/${GIT_GLB_PROJECT}/lib</fileline>
            <fileline lineNumber="6">runned="0"</fileline>
            <fileline lineNumber="7">runned="0"</fileline>
            <fileline lineNumber="8">Runned_config="0"</fileline>
            <fileline lineNumber="9">Runned_git="0"</fileline>
            <fileline lineNumber="10">actualpath="$(pwd)"</fileline>
            <fileline lineNumber="11" />
            <fileline lineNumber="12" />
            <fileline lineNumber="13">function update_ressources () </fileline>
            <fileline lineNumber="14">{</fileline>
            <fileline lineNumber="15">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="16">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="17">Function_PATH="${Function_PATH}/${Function_Name}"</fileline>
            <fileline lineNumber="18">######################################################</fileline>
            <fileline lineNumber="19">MSG_DISPLAY "debug" "0" "current function path : [ ${Function_PATH} ]  | function Name [ ${Function_Name} ]  "</fileline>
            <fileline lineNumber="20">  if [[ -d ./lib  ]]</fileline>
            <fileline lineNumber="21">    then </fileline>
            <fileline lineNumber="22">       if [[ -d ./lib/.git ]]</fileline>
            <fileline lineNumber="23">          then </fileline>
            <fileline lineNumber="24">              MSG_DISPLAY "info" "0"  "updating generics lib files " </fileline>
            <fileline lineNumber="25">              cd ./lib</fileline>
            <fileline lineNumber="26">              git pull </fileline>
            <fileline lineNumber="27">              cd .. </fileline>
            <fileline lineNumber="28">          else </fileline>
            <fileline lineNumber="29">             MSG_DISPLAY "info" "0"  "warning lib not implemented from git removing" </fileline>
            <fileline lineNumber="30">             rm -rf ./lib </fileline>
            <fileline lineNumber="31">             git clone git@${GIT_SSH_URL}:v3/${GIT_GLB_ORGANISATION}/${GIT_GLB_PROJECT}/lib</fileline>
            <fileline lineNumber="32">      fi </fileline>
            <fileline lineNumber="33">    else </fileline>
            <fileline lineNumber="34">       echo "cloning generic CAST libs" </fileline>
            <fileline lineNumber="35">       git clone git@${GIT_SSH_URL}:v3/${GIT_GLB_ORGANISATION}/${GIT_GLB_PROJECT}/lib</fileline>
            <fileline lineNumber="36">fi</fileline>
            <fileline lineNumber="37">MSG_DISPLAY "info" "0"  "Nom genere : ${nom_objet}"</fileline>
            <fileline lineNumber="38">if [[ -d ./RGRoot/${nom_objet} ]]</fileline>
            <fileline lineNumber="39">   then </fileline>
            <fileline lineNumber="40">       MSG_DISPLAY "info" "0"  "existing object"</fileline>
            <fileline lineNumber="41">   else </fileline>
            <fileline lineNumber="42">       MSG_DISPLAY "info" "0"  "Creating object"</fileline>
            <fileline lineNumber="43">       mkdir  ./RGRoot/${nom_objet} </fileline>
            <fileline lineNumber="44">fi</fileline>
            <fileline lineNumber="45">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="46">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="47">####################################################</fileline>
            <fileline lineNumber="48">}</fileline>
            <fileline lineNumber="49" />
            <fileline lineNumber="50" />
            <fileline lineNumber="51" />
            <fileline lineNumber="52">printf "\n" </fileline>
            <fileline lineNumber="53">printf  "Sourcing base configuration file :" </fileline>
            <fileline lineNumber="54">if [[ -f ../conf/config.cnf  ]]</fileline>
            <fileline lineNumber="55">   then </fileline>
            <fileline lineNumber="56">       . ../conf/config.cnf 2&gt; /dev/null  </fileline>
            <fileline lineNumber="57">       if [[  ${?} -ge 1 ]] &amp;&amp; [[ ! ${ConfigState} = "OK" ]]</fileline>
            <fileline lineNumber="58">          then </fileline>
            <fileline lineNumber="59">              printf " ERROR \n" </fileline>
            <fileline lineNumber="60">              exit 1</fileline>
            <fileline lineNumber="61">          else</fileline>
            <fileline lineNumber="62">              printf " SUCCESS \n" </fileline>
            <fileline lineNumber="63">      fi </fileline>
            <fileline lineNumber="64">    else </fileline>
            <fileline lineNumber="65">      printf " ERROR FILE NOT FOUND \n"</fileline>
            <fileline lineNumber="66">fi </fileline>
            <fileline lineNumber="67" />
            <fileline lineNumber="68" />
            <fileline lineNumber="69" />
            <fileline lineNumber="70">function main () </fileline>
            <fileline lineNumber="71">{</fileline>
            <fileline lineNumber="72">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="73">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="74">Function_PATH="${Function_Name}"</fileline>
            <fileline lineNumber="75">######################################################</fileline>
            <fileline lineNumber="76">#|# mandatory ini call </fileline>
            <fileline lineNumber="77">set_paths </fileline>
            <fileline lineNumber="78" />
            <fileline lineNumber="79">#init_all</fileline>
            <fileline lineNumber="80" />
            <fileline lineNumber="81">echo " test main : ${!ENVIRONMENTS_AZ[@]} " </fileline>
            <fileline lineNumber="82" />
            <fileline lineNumber="83"># Poser des questions pour obtenir les informations necessaires</fileline>
            <fileline lineNumber="84">ask_questions</fileline>
            <fileline lineNumber="85" />
            <fileline lineNumber="86"># Generer le nom de l'objet</fileline>
            <fileline lineNumber="87">nom_objet="${BIGRAMME}-${CODE_APPLI}-${ENV}-${CATEGORIE}-${LOCALISATION}-${INDEX}"</fileline>
            <fileline lineNumber="88">echo "object name : ${nom_objet}"</fileline>
            <fileline lineNumber="89" />
            <fileline lineNumber="90" />
            <fileline lineNumber="91">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="92">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="93">####################################################</fileline>
            <fileline lineNumber="94">}</fileline>
            <fileline lineNumber="95" />
            <fileline lineNumber="96" />
        </content>
    </file>
    <file>
        <filename>./bin/autodoc.sh</filename>
        <content>
            <fileline lineNumber="1">#!/bin/bash </fileline>
            <fileline lineNumber="2"># author : Arnaud Crampet </fileline>
            <fileline lineNumber="3"># Date : 28/06/2024</fileline>
            <fileline lineNumber="4"># generic azure ressource group managment from CAST</fileline>
            <fileline lineNumber="5">#|# force defaul sourcing as null vars</fileline>
            <fileline lineNumber="6">ConfigState=""</fileline>
            <fileline lineNumber="7" />
            <fileline lineNumber="8">printf "\n" </fileline>
            <fileline lineNumber="9">printf  "Sourcing base configuration file :" </fileline>
            <fileline lineNumber="10">if [[ -f ../conf/config.cnf  ]]</fileline>
            <fileline lineNumber="11">   then </fileline>
            <fileline lineNumber="12">       . ../conf/config.cnf 2&gt; /dev/null  </fileline>
            <fileline lineNumber="13">       if [[  ${?} -ge 1 ]] &amp;&amp; [[ ! ${ConfigState} = "OK" ]]</fileline>
            <fileline lineNumber="14">          then </fileline>
            <fileline lineNumber="15">              printf " ERROR \n" </fileline>
            <fileline lineNumber="16">              exit 1</fileline>
            <fileline lineNumber="17">          else</fileline>
            <fileline lineNumber="18">              printf " SUCCESS \n" </fileline>
            <fileline lineNumber="19">      fi </fileline>
            <fileline lineNumber="20">    else </fileline>
            <fileline lineNumber="21">      printf " ERROR FILE NOT FOUND \n"</fileline>
            <fileline lineNumber="22">fi </fileline>
            <fileline lineNumber="23" />
            <fileline lineNumber="24">#|# mandatory ini call </fileline>
            <fileline lineNumber="25">set_paths  </fileline>
            <fileline lineNumber="26" />
            <fileline lineNumber="27">function main () </fileline>
            <fileline lineNumber="28">{</fileline>
            <fileline lineNumber="29">############ STACK_TRACE_BUILDER #####################</fileline>
            <fileline lineNumber="30">Function_Name="${FUNCNAME[0]}"</fileline>
            <fileline lineNumber="31">Function_PATH="${Function_Name}"</fileline>
            <fileline lineNumber="32">######################################################</fileline>
            <fileline lineNumber="33">Get_all_function_names_to_document </fileline>
            <fileline lineNumber="34">#init_all</fileline>
            <fileline lineNumber="35" />
            <fileline lineNumber="36">#|# main execution</fileline>
            <fileline lineNumber="37" />
            <fileline lineNumber="38">#Install_Menu</fileline>
            <fileline lineNumber="39">############### Stack_TRACE_BUILDER ################</fileline>
            <fileline lineNumber="40">Function_PATH="$( dirname ${Function_PATH} )"</fileline>
            <fileline lineNumber="41">####################################################</fileline>
            <fileline lineNumber="42">}</fileline>
        </content>
    </file>
</root>